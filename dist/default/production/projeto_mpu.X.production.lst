

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 27 17:37:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  004E0C                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _dc
   120  004E0C  0046               	dw	70
   121                           
   122                           	psect	idataBANK1
   123  004E08                     __pidataBANK1:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _k
   127  004E08  999A               	dw	39322
   128  004E0A  3E99               	dw	16025
   129                           
   130                           	psect	smallconst
   131  000800                     __psmallconst:
   132                           	opt callstack 0
   133  000800  00                 	db	0
   134  000801  4260               	dw	16992
   135  000803  0DA2               	dw	3490
   136  000805                     __end_of_tiny:
   137                           	opt callstack 0
   138  000805  E5AE               	dw	58798
   139  000807  BF34               	dw	48948
   140  000809                     __end_of_qS1:
   141                           	opt callstack 0
   142  000809  D36B               	dw	54123
   143  00080B  BC0D               	dw	48141
   144  00080D                     __end_of_pS2:
   145                           	opt callstack 0
   146  00080D  13BA               	dw	5050
   147  00080F  BD2F               	dw	48431
   148  000811                     __end_of_pS1:
   149                           	opt callstack 0
   150  000811  AA75               	dw	43637
   151  000813  3E2A               	dw	15914
   152  000815                     __end_of_pS0:
   153                           	opt callstack 0
   154  000815  0FDB               	dw	4059
   155  000817  3FC9               	dw	16329
   156  000819                     __end_of_pio2:
   157                           	opt callstack 0
   158  0000                     _T0CON	set	4053
   159  0000                     _PORTB	set	3969
   160  0000                     _TRISB	set	3987
   161  0000                     _SSPCON2bits	set	4037
   162  0000                     _SSPBUF	set	4041
   163  0000                     _SSPSTATbits	set	4039
   164  0000                     _SSPADD	set	4040
   165  0000                     _SSPCON2	set	4037
   166  0000                     _SSPCON1	set	4038
   167  0000                     _SSPSTAT	set	4039
   168  0000                     _RCREG	set	4014
   169  0000                     _TXREG	set	4013
   170  0000                     _SPBRG	set	4015
   171  0000                     _RCSTA	set	4011
   172  0000                     _TXSTA	set	4012
   173  0000                     _ADCON1	set	4033
   174  0000                     _TMR0H	set	4055
   175  0000                     _TMR0L	set	4054
   176  0000                     _TMR0IE	set	32661
   177  0000                     _BF	set	32312
   178  0000                     _RCEN	set	32299
   179  0000                     _RSEN	set	32297
   180  0000                     _ACKEN	set	32300
   181  0000                     _ACKDT	set	32301
   182  0000                     _PEN	set	32298
   183  0000                     _ACKSTAT	set	32302
   184  0000                     _SEN	set	32296
   185  0000                     _TRISB0	set	31896
   186  0000                     _TRISB1	set	31897
   187  0000                     _SSPIF	set	31987
   188  0000                     _RCIF	set	31989
   189  0000                     _TRMT	set	32097
   190  0000                     _TRISC7	set	31911
   191  0000                     _TRISC6	set	31766
   192  0000                     _CREN	set	32092
   193  0000                     _PEIE	set	32662
   194  0000                     _GIE	set	32663
   195  0000                     _TMR0IF	set	32658
   196  000819                     STR_1:
   197                           
   198                           ; BSR set to: 0
   199  000819  25                 	db	37
   200  00081A  30                 	db	48	;'0'
   201  00081B  2E                 	db	46
   202  00081C  32                 	db	50	;'2'
   203  00081D  66                 	db	102	;'f'
   204  00081E  2F                 	db	47
   205  00081F  25                 	db	37
   206  000820  64                 	db	100	;'d'
   207  000821  00                 	db	0
   208  000822                     STR_2:
   209                           
   210                           ; BSR set to: 0
   211  000822  49                 	db	73	;'I'
   212  000823  4E                 	db	78	;'N'
   213  000824  46                 	db	70	;'F'
   214  000825  00                 	db	0
   215  000826                     STR_6:
   216                           
   217                           ; BSR set to: 0
   218  000826  4E                 	db	78	;'N'
   219  000827  41                 	db	65	;'A'
   220  000828  4E                 	db	78	;'N'
   221  000829  00                 	db	0
   222  00082A                     STR_3:
   223                           
   224                           ; BSR set to: 0
   225  00082A  69                 	db	105	;'i'
   226  00082B  6E                 	db	110	;'n'
   227  00082C  66                 	db	102	;'f'
   228  00082D  00                 	db	0
   229  00082E                     STR_7:
   230                           
   231                           ; BSR set to: 0
   232  00082E  6E                 	db	110	;'n'
   233  00082F  61                 	db	97	;'a'
   234  000830  6E                 	db	110	;'n'
   235  000831  00                 	db	0
   236  000832                     STR_10:
   237                           
   238                           ; BSR set to: 0
   239  000832  6C                 	db	108	;'l'
   240  000833  66                 	db	102	;'f'
   241  000834  00                 	db	0
   242  0000                     
   243                           ; #config settings
   244  000835  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           	psect	cinit
   247  0047F0                     __pcinit:
   248                           	opt callstack 0
   249  0047F0                     start_initialization:
   250                           	opt callstack 0
   251  0047F0                     __initialization:
   252                           	opt callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK1 (4 bytes)
   255                           ; load TBLPTR registers with __pidataBANK1
   256  0047F0  0E08               	movlw	low __pidataBANK1
   257  0047F2  6EF6               	movwf	tblptrl,c
   258  0047F4  0E4E               	movlw	high __pidataBANK1
   259  0047F6  6EF7               	movwf	tblptrh,c
   260  0047F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   261  0047FA  6EF8               	movwf	tblptru,c
   262  0047FC  EE01  F081         	lfsr	0,__pdataBANK1
   263  004800  EE10 F004          	lfsr	1,4
   264  004804                     copy_data0:
   265  004804  0009               	tblrd		*+
   266  004806  CFF5 FFEE          	movff	tablat,postinc0
   267  00480A  50E5               	movf	postdec1,w,c
   268  00480C  50E1               	movf	fsr1l,w,c
   269  00480E  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to BANK0 (2 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  004810  0E0C               	movlw	low __pidataBANK0
   274  004812  6EF6               	movwf	tblptrl,c
   275  004814  0E4E               	movlw	high __pidataBANK0
   276  004816  6EF7               	movwf	tblptrh,c
   277  004818  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  00481A  6EF8               	movwf	tblptru,c
   279  00481C  0009               	tblrd		*+	;fetch initializer
   280  00481E  CFF5 F0F9          	movff	tablat,__pdataBANK0
   281  004822  0009               	tblrd		*+	;fetch initializer
   282  004824  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
   283                           
   284                           ; Clear objects allocated to BANK1 (123 bytes)
   285  004828  EE01  F000         	lfsr	0,__pbssBANK1
   286  00482C  0E7B               	movlw	123
   287  00482E                     clear_0:
   288  00482E  6AEE               	clrf	postinc0,c
   289  004830  06E8               	decf	wreg,f,c
   290  004832  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK0 (8 bytes)
   293  004834  EE00  F0F1         	lfsr	0,__pbssBANK0
   294  004838  0E08               	movlw	8
   295  00483A                     clear_1:
   296  00483A  6AEE               	clrf	postinc0,c
   297  00483C  06E8               	decf	wreg,f,c
   298  00483E  E1FD               	bnz	clear_1
   299                           
   300                           ; Clear objects allocated to COMRAM (2 bytes)
   301  004840  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   302  004842  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   303  004844                     end_of_initialization:
   304                           	opt callstack 0
   305  004844                     __end_of__initialization:
   306                           	opt callstack 0
   307  004844  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   308  004846  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   309  004848  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310  00484A  6EF8               	movwf	tblptru,c
   311  00484C  0100               	movlb	0
   312  00484E  EFD9  F01B         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMRAM
   315  00005A                     __pbssCOMRAM:
   316                           	opt callstack 0
   317  00005A                     _flags:
   318                           	opt callstack 0
   319  00005A                     	ds	2
   320                           
   321                           	psect	bssBANK0
   322  0000F1                     __pbssBANK0:
   323                           	opt callstack 0
   324  0000F1                     _nout:
   325                           	opt callstack 0
   326  0000F1                     	ds	2
   327  0000F3                     _width:
   328                           	opt callstack 0
   329  0000F3                     	ds	2
   330  0000F5                     _prec:
   331                           	opt callstack 0
   332  0000F5                     	ds	2
   333  0000F7                     pwm_dc@t:
   334                           	opt callstack 0
   335  0000F7                     	ds	2
   336                           
   337                           	psect	dataBANK0
   338  0000F9                     __pdataBANK0:
   339                           	opt callstack 0
   340  0000F9                     _dc:
   341                           	opt callstack 0
   342  0000F9                     	ds	2
   343                           
   344                           	psect	bssBANK1
   345  000100                     __pbssBANK1:
   346                           	opt callstack 0
   347  000100                     floorf@F524:
   348                           	opt callstack 0
   349  000100                     	ds	4
   350  000104                     fabsf@F463:
   351                           	opt callstack 0
   352  000104                     	ds	4
   353  000108                     ___fpclassifyf@F463:
   354                           	opt callstack 0
   355  000108                     	ds	4
   356  00010C                     _u:
   357                           	opt callstack 0
   358  00010C                     	ds	4
   359  000110                     _erro:
   360                           	opt callstack 0
   361  000110                     	ds	4
   362  000114                     _errno:
   363                           	opt callstack 0
   364  000114                     	ds	2
   365  000116                     _dbuf:
   366                           	opt callstack 0
   367  000116                     	ds	80
   368  000166                     _buf:
   369                           	opt callstack 0
   370  000166                     	ds	15
   371  000175                     uart_ler_string@dado:
   372                           	opt callstack 0
   373  000175                     	ds	6
   374                           
   375                           	psect	dataBANK1
   376  000181                     __pdataBANK1:
   377                           	opt callstack 0
   378  000181                     _k:
   379                           	opt callstack 0
   380  000181                     	ds	4
   381                           
   382                           	psect	cstackBANK1
   383  00017B                     __pcstackBANK1:
   384                           	opt callstack 0
   385  00017B                     main@ang:
   386                           	opt callstack 0
   387                           
   388                           ; 4 bytes @ 0x0
   389  00017B                     	ds	4
   390  00017F                     main@set_point:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x4
   394  00017F                     	ds	2
   395                           
   396                           	psect	cstackBANK0
   397  000060                     __pcstackBANK0:
   398                           	opt callstack 0
   399  000060                     ??_floorf:
   400  000060                     R@p:
   401                           	opt callstack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404  000060                     	ds	4
   405  000064                     R@q:
   406                           	opt callstack 0
   407  000064                     sqrtf@s:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x4
   411  000064                     	ds	2
   412  000066                     floorf@m:
   413                           	opt callstack 0
   414                           
   415                           ; 4 bytes @ 0x6
   416  000066                     	ds	2
   417  000068                     sqrtf@i:
   418                           	opt callstack 0
   419  000068                     _R$1407:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x8
   423  000068                     	ds	2
   424  00006A                     floorf@e:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  00006A                     	ds	2
   429  00006C                     floorf@u:
   430                           	opt callstack 0
   431  00006C                     sqrtf@__xc8_float_word:
   432                           	opt callstack 0
   433  00006C                     _R$1408:
   434                           	opt callstack 0
   435                           
   436                           ; 4 bytes @ 0xC
   437  00006C                     	ds	4
   438  000070                     ?_efgtoa:
   439                           	opt callstack 0
   440  000070                     efgtoa@fp:
   441                           	opt callstack 0
   442  000070                     sqrtf@q:
   443                           	opt callstack 0
   444                           
   445                           ; 4 bytes @ 0x10
   446  000070                     	ds	2
   447  000072                     efgtoa@f:
   448                           	opt callstack 0
   449                           
   450                           ; 4 bytes @ 0x12
   451  000072                     	ds	2
   452  000074                     sqrtf@t:
   453                           	opt callstack 0
   454                           
   455                           ; 4 bytes @ 0x14
   456  000074                     	ds	2
   457  000076                     efgtoa@c:
   458                           	opt callstack 0
   459                           
   460                           ; 1 bytes @ 0x16
   461  000076                     	ds	1
   462  000077                     ??_efgtoa:
   463                           
   464                           ; 1 bytes @ 0x17
   465  000077                     	ds	1
   466  000078                     sqrtf@z:
   467                           	opt callstack 0
   468                           
   469                           ; 4 bytes @ 0x18
   470  000078                     	ds	4
   471  00007C                     efgtoa@ou:
   472                           	opt callstack 0
   473  00007C                     sqrtf@m:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0x1C
   477  00007C                     	ds	4
   478  000080                     _efgtoa$489:
   479                           	opt callstack 0
   480  000080                     sqrtf@r:
   481                           	opt callstack 0
   482                           
   483                           ; 4 bytes @ 0x20
   484  000080                     	ds	2
   485  000082                     _efgtoa$490:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x22
   489  000082                     	ds	2
   490  000084                     _efgtoa$494:
   491                           	opt callstack 0
   492  000084                     sqrtf@ix:
   493                           	opt callstack 0
   494                           
   495                           ; 4 bytes @ 0x24
   496  000084                     	ds	2
   497  000086                     _efgtoa$498:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x26
   501  000086                     	ds	2
   502  000088                     ?_asinf:
   503                           	opt callstack 0
   504  000088                     _efgtoa$499:
   505                           	opt callstack 0
   506  000088                     asinf@x:
   507                           	opt callstack 0
   508                           
   509                           ; 4 bytes @ 0x28
   510  000088                     	ds	2
   511  00008A                     _efgtoa$500:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x2A
   515  00008A                     	ds	2
   516  00008C                     ??_asinf:
   517  00008C                     efgtoa@t:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x2C
   521  00008C                     	ds	2
   522  00008E                     efgtoa@pp:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x2E
   526  00008E                     	ds	2
   527  000090                     efgtoa@m:
   528                           	opt callstack 0
   529  000090                     asinf@__xc8_float_word:
   530                           	opt callstack 0
   531                           
   532                           ; 4 bytes @ 0x30
   533  000090                     	ds	2
   534  000092                     efgtoa@ne:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x32
   538  000092                     	ds	2
   539  000094                     efgtoa@d:
   540                           	opt callstack 0
   541  000094                     _asinf$1409:
   542                           	opt callstack 0
   543                           
   544                           ; 4 bytes @ 0x34
   545  000094                     	ds	2
   546  000096                     efgtoa@sign:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x36
   550  000096                     	ds	2
   551  000098                     efgtoa@p:
   552                           	opt callstack 0
   553  000098                     _asinf$1410:
   554                           	opt callstack 0
   555                           
   556                           ; 4 bytes @ 0x38
   557  000098                     	ds	2
   558  00009A                     efgtoa@nmode:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x3A
   562  00009A                     	ds	1
   563  00009B                     efgtoa@w:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x3B
   567  00009B                     	ds	1
   568  00009C                     _asinf$1411:
   569                           	opt callstack 0
   570                           
   571                           ; 4 bytes @ 0x3C
   572  00009C                     	ds	1
   573  00009D                     efgtoa@mode:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x3D
   577  00009D                     	ds	1
   578  00009E                     efgtoa@h:
   579                           	opt callstack 0
   580                           
   581                           ; 4 bytes @ 0x3E
   582  00009E                     	ds	2
   583  0000A0                     _asinf$1412:
   584                           	opt callstack 0
   585                           
   586                           ; 4 bytes @ 0x40
   587  0000A0                     	ds	2
   588  0000A2                     efgtoa@l:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0x42
   592  0000A2                     	ds	2
   593  0000A4                     asinf@s:
   594                           	opt callstack 0
   595                           
   596                           ; 4 bytes @ 0x44
   597  0000A4                     	ds	2
   598  0000A6                     efgtoa@i:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x46
   602  0000A6                     	ds	2
   603  0000A8                     efgtoa@g:
   604                           	opt callstack 0
   605  0000A8                     asinf@z:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0x48
   609  0000A8                     	ds	4
   610  0000AC                     efgtoa@e:
   611                           	opt callstack 0
   612  0000AC                     asinf@hx:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x4C
   616  0000AC                     	ds	2
   617  0000AE                     efgtoa@n:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x4E
   621  0000AE                     	ds	2
   622  0000B0                     efgtoa@u:
   623                           	opt callstack 0
   624  0000B0                     asinf@ix:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x50
   628  0000B0                     	ds	4
   629  0000B4                     ?_vfpfcnvrt:
   630                           	opt callstack 0
   631  0000B4                     ?_mpu_ler:
   632                           	opt callstack 0
   633  0000B4                     vfpfcnvrt@fp:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x54
   637  0000B4                     	ds	2
   638  0000B6                     vfpfcnvrt@fmt:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x56
   642  0000B6                     	ds	2
   643  0000B8                     ??_mpu_ler:
   644  0000B8                     vfpfcnvrt@ap:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x58
   648  0000B8                     	ds	2
   649  0000BA                     ??_vfpfcnvrt:
   650                           
   651                           ; 1 bytes @ 0x5A
   652  0000BA                     	ds	2
   653  0000BC                     mpu_ler@ay:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x5C
   657  0000BC                     	ds	2
   658  0000BE                     vfpfcnvrt@ll:
   659                           	opt callstack 0
   660                           
   661                           ; 8 bytes @ 0x5E
   662  0000BE                     	ds	2
   663  0000C0                     _mpu_ler$1406:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x60
   667  0000C0                     	ds	4
   668  0000C4                     mpu_ler@Ay:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x64
   672  0000C4                     	ds	2
   673  0000C6                     vfpfcnvrt@done:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x66
   677  0000C6                     	ds	2
   678  0000C8                     _vfpfcnvrt$514:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x68
   682  0000C8                     	ds	2
   683  0000CA                     _vfpfcnvrt$519:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x6A
   687  0000CA                     	ds	2
   688  0000CC                     vfpfcnvrt@f:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x6C
   692  0000CC                     	ds	4
   693  0000D0                     vfpfcnvrt@ct:
   694                           	opt callstack 0
   695                           
   696                           ; 3 bytes @ 0x70
   697  0000D0                     	ds	3
   698  0000D3                     vfpfcnvrt@c:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0x73
   702  0000D3                     	ds	1
   703  0000D4                     ?_vfprintf:
   704                           	opt callstack 0
   705  0000D4                     vfprintf@fp:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x74
   709  0000D4                     	ds	2
   710  0000D6                     vfprintf@fmt:
   711                           	opt callstack 0
   712                           
   713                           ; 2 bytes @ 0x76
   714  0000D6                     	ds	2
   715  0000D8                     vfprintf@ap:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x78
   719  0000D8                     	ds	2
   720  0000DA                     vfprintf@cfmt:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x7A
   724  0000DA                     	ds	2
   725  0000DC                     ?_sprintf:
   726                           	opt callstack 0
   727  0000DC                     sprintf@s:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x7C
   731  0000DC                     	ds	2
   732  0000DE                     sprintf@fmt:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x7E
   736  0000DE                     	ds	10
   737  0000E8                     sprintf@ap:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x88
   741  0000E8                     	ds	2
   742  0000EA                     sprintf@f:
   743                           	opt callstack 0
   744                           
   745                           ; 6 bytes @ 0x8A
   746  0000EA                     	ds	6
   747  0000F0                     ??_main:
   748                           
   749                           ; 1 bytes @ 0x90
   750  0000F0                     	ds	1
   751                           
   752                           	psect	cstackCOMRAM
   753  000001                     __pcstackCOMRAM:
   754                           	opt callstack 0
   755  000001                     pwm_dc@dc:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x0
   759  000001                     	ds	2
   760  000003                     ??_pwm_dc:
   761                           
   762                           ; 1 bytes @ 0x2
   763  000003                     	ds	1
   764  000004                     ?_strlen:
   765                           	opt callstack 0
   766  000004                     ?___fpclassifyf:
   767                           	opt callstack 0
   768  000004                     ?_isupper:
   769                           	opt callstack 0
   770  000004                     ?_isdigit:
   771                           	opt callstack 0
   772  000004                     ?_strncmp:
   773                           	opt callstack 0
   774  000004                     ?_isspace:
   775                           	opt callstack 0
   776  000004                     ?___wmul:
   777                           	opt callstack 0
   778  000004                     ?___awdiv:
   779                           	opt callstack 0
   780  000004                     ?___awmod:
   781                           	opt callstack 0
   782  000004                     ?_fabsf:
   783                           	opt callstack 0
   784  000004                     ?_nanf:
   785                           	opt callstack 0
   786  000004                     ?___flneg:
   787                           	opt callstack 0
   788  000004                     ?___fltol:
   789                           	opt callstack 0
   790  000004                     ?___xxtofl:
   791                           	opt callstack 0
   792  000004                     ?___aodiv:
   793                           	opt callstack 0
   794  000004                     ?___aomod:
   795                           	opt callstack 0
   796  000004                     uart_escreve_byte@dado:
   797                           	opt callstack 0
   798  000004                     i2c_mestre_escreve@dado:
   799                           	opt callstack 0
   800  000004                     i2c_ler@ACK_NACK:
   801                           	opt callstack 0
   802  000004                     ___wmul@multiplier:
   803                           	opt callstack 0
   804  000004                     ___awdiv@dividend:
   805                           	opt callstack 0
   806  000004                     ___awmod@dividend:
   807                           	opt callstack 0
   808  000004                     isdigit@c:
   809                           	opt callstack 0
   810  000004                     isspace@c:
   811                           	opt callstack 0
   812  000004                     isupper@c:
   813                           	opt callstack 0
   814  000004                     fputc@c:
   815                           	opt callstack 0
   816  000004                     strcpy@dest:
   817                           	opt callstack 0
   818  000004                     strlen@s:
   819                           	opt callstack 0
   820  000004                     strncmp@_l:
   821                           	opt callstack 0
   822  000004                     nanf@s:
   823                           	opt callstack 0
   824  000004                     ___fleq@ff1:
   825                           	opt callstack 0
   826  000004                     ___flneg@f1:
   827                           	opt callstack 0
   828  000004                     ___fltol@f1:
   829                           	opt callstack 0
   830  000004                     ___xxtofl@val:
   831                           	opt callstack 0
   832  000004                     ___fpclassifyf@x:
   833                           	opt callstack 0
   834  000004                     fabsf@x:
   835                           	opt callstack 0
   836  000004                     ___aodiv@dividend:
   837                           	opt callstack 0
   838  000004                     ___aomod@dividend:
   839                           	opt callstack 0
   840                           
   841                           ; 8 bytes @ 0x3
   842  000004                     	ds	1
   843  000005                     i2c_init@end:
   844                           	opt callstack 0
   845  000005                     i2c_init_aguarda@end:
   846                           	opt callstack 0
   847  000005                     i2c_ler@dado:
   848                           	opt callstack 0
   849  000005                     uart_escreve_string@mens:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x4
   853  000005                     	ds	1
   854  000006                     ??_mpu_config:
   855  000006                     ??_isupper:
   856  000006                     ??_isdigit:
   857  000006                     ??_isspace:
   858  000006                     ___wmul@multiplicand:
   859                           	opt callstack 0
   860  000006                     ___awdiv@divisor:
   861                           	opt callstack 0
   862  000006                     ___awmod@divisor:
   863                           	opt callstack 0
   864  000006                     fputc@fp:
   865                           	opt callstack 0
   866  000006                     strcpy@src:
   867                           	opt callstack 0
   868  000006                     strlen@a:
   869                           	opt callstack 0
   870  000006                     strncmp@_r:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x5
   874  000006                     	ds	1
   875  000007                     uart_escreve_string@i:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x6
   879  000007                     	ds	1
   880  000008                     ??_fputc:
   881  000008                     ??___fpclassifyf:
   882  000008                     ??_strcpy:
   883  000008                     ??___fltol:
   884  000008                     ??___xxtofl:
   885  000008                     ___awdiv@counter:
   886                           	opt callstack 0
   887  000008                     ___awmod@counter:
   888                           	opt callstack 0
   889  000008                     ___wmul@product:
   890                           	opt callstack 0
   891  000008                     strncmp@n:
   892                           	opt callstack 0
   893  000008                     ___fleq@ff2:
   894                           	opt callstack 0
   895  000008                     fabsf@u:
   896                           	opt callstack 0
   897  000008                     nanf@u:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x7
   901  000008                     	ds	1
   902  000009                     ___awdiv@sign:
   903                           	opt callstack 0
   904  000009                     ___awmod@sign:
   905                           	opt callstack 0
   906                           
   907                           ; 1 bytes @ 0x8
   908  000009                     	ds	1
   909  00000A                     ??_strncmp:
   910  00000A                     ?_tolower:
   911                           	opt callstack 0
   912  00000A                     _isspace$1066:
   913                           	opt callstack 0
   914  00000A                     ___awdiv@quotient:
   915                           	opt callstack 0
   916  00000A                     strcpy@s:
   917                           	opt callstack 0
   918  00000A                     tolower@c:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x9
   922  00000A                     	ds	1
   923  00000B                     ?_atoi:
   924                           	opt callstack 0
   925  00000B                     atoi@s:
   926                           	opt callstack 0
   927  00000B                     strncmp@l:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0xA
   931  00000B                     	ds	1
   932  00000C                     ??_tolower:
   933  00000C                     ??___fleq:
   934  00000C                     ?___flmul:
   935                           	opt callstack 0
   936  00000C                     ___fltol@sign1:
   937                           	opt callstack 0
   938  00000C                     ___xxtofl@sign:
   939                           	opt callstack 0
   940  00000C                     ___fpclassifyf@e:
   941                           	opt callstack 0
   942  00000C                     strcpy@d:
   943                           	opt callstack 0
   944  00000C                     ___flmul@b:
   945                           	opt callstack 0
   946  00000C                     ___aodiv@divisor:
   947                           	opt callstack 0
   948  00000C                     ___aomod@divisor:
   949                           	opt callstack 0
   950                           
   951                           ; 8 bytes @ 0xB
   952  00000C                     	ds	1
   953  00000D                     ??_atoi:
   954  00000D                     ___fltol@exp1:
   955                           	opt callstack 0
   956  00000D                     ___xxtofl@exp:
   957                           	opt callstack 0
   958  00000D                     fputs@s:
   959                           	opt callstack 0
   960  00000D                     strncmp@r:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0xC
   964  00000D                     	ds	1
   965  00000E                     ___xxtofl@arg:
   966                           	opt callstack 0
   967  00000E                     ___fpclassifyf@u:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0xD
   971  00000E                     	ds	1
   972  00000F                     fputs@fp:
   973                           	opt callstack 0
   974                           
   975                           ; 2 bytes @ 0xE
   976  00000F                     	ds	1
   977  000010                     _tolower$1176:
   978                           	opt callstack 0
   979  000010                     ___flmul@a:
   980                           	opt callstack 0
   981                           
   982                           ; 4 bytes @ 0xF
   983  000010                     	ds	1
   984  000011                     fputs@c:
   985                           	opt callstack 0
   986  000011                     atoi@neg:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x10
   990  000011                     	ds	1
   991  000012                     fputs@i:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x11
   995  000012                     	ds	1
   996  000013                     _atoi$1024:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x12
  1000  000013                     	ds	1
  1001  000014                     ??___flmul:
  1002  000014                     ?_pad:
  1003                           	opt callstack 0
  1004  000014                     ___aodiv@counter:
  1005                           	opt callstack 0
  1006  000014                     ___aomod@counter:
  1007                           	opt callstack 0
  1008  000014                     pad@fp:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x13
  1012  000014                     	ds	1
  1013  000015                     ___aodiv@sign:
  1014                           	opt callstack 0
  1015  000015                     ___aomod@sign:
  1016                           	opt callstack 0
  1017  000015                     _atoi$1026:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x14
  1021  000015                     	ds	1
  1022  000016                     ?_abs:
  1023                           	opt callstack 0
  1024  000016                     pad@buf:
  1025                           	opt callstack 0
  1026  000016                     abs@a:
  1027                           	opt callstack 0
  1028  000016                     ___aodiv@quotient:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x15
  1032  000016                     	ds	1
  1033  000017                     _atoi$1025:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x16
  1037  000017                     	ds	1
  1038  000018                     ??_abs:
  1039  000018                     ___flmul@sign:
  1040                           	opt callstack 0
  1041  000018                     pad@p:
  1042                           	opt callstack 0
  1043  000018                     atoi@n:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x17
  1047  000018                     	ds	1
  1048  000019                     ___flmul@aexp:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x18
  1052  000019                     	ds	1
  1053  00001A                     ??_pad:
  1054  00001A                     ?_uart_ler_string:
  1055                           	opt callstack 0
  1056  00001A                     ___flmul@grs:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x19
  1060  00001A                     	ds	1
  1061  00001B                     pad@i:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x1A
  1065  00001B                     	ds	1
  1066  00001C                     
  1067                           ; 1 bytes @ 0x1B
  1068  00001C                     	ds	1
  1069  00001D                     uart_ler_string@c:
  1070                           	opt callstack 0
  1071  00001D                     pad@w:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1C
  1075  00001D                     	ds	1
  1076  00001E                     ___flmul@bexp:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x1D
  1080  00001E                     	ds	1
  1081  00001F                     ?_dtoa:
  1082                           	opt callstack 0
  1083  00001F                     uart_ler_string@i:
  1084                           	opt callstack 0
  1085  00001F                     dtoa@fp:
  1086                           	opt callstack 0
  1087  00001F                     ___flmul@prod:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x1E
  1091  00001F                     	ds	2
  1092  000021                     dtoa@d:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 8 bytes @ 0x20
  1096  000021                     	ds	2
  1097  000023                     ___flmul@temp:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x22
  1101  000023                     	ds	2
  1102  000025                     ?___fladd:
  1103                           	opt callstack 0
  1104  000025                     ___flge@ff1:
  1105                           	opt callstack 0
  1106  000025                     ___fladd@b:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x24
  1110  000025                     	ds	4
  1111  000029                     ??_dtoa:
  1112  000029                     ___flge@ff2:
  1113                           	opt callstack 0
  1114  000029                     ___fladd@a:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x28
  1118  000029                     	ds	4
  1119  00002D                     ??___fladd:
  1120  00002D                     ??___flge:
  1121                           
  1122                           ; 1 bytes @ 0x2C
  1123  00002D                     	ds	4
  1124  000031                     ___fladd@signs:
  1125                           	opt callstack 0
  1126  000031                     _dtoa$465:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x30
  1130  000031                     	ds	1
  1131  000032                     ___fladd@aexp:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x31
  1135  000032                     	ds	1
  1136  000033                     ___fladd@bexp:
  1137                           	opt callstack 0
  1138  000033                     dtoa@p:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x32
  1142  000033                     	ds	1
  1143  000034                     ___fladd@grs:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x33
  1147  000034                     	ds	1
  1148  000035                     ?___flsub:
  1149                           	opt callstack 0
  1150  000035                     ?_sqrtf:
  1151                           	opt callstack 0
  1152  000035                     dtoa@w:
  1153                           	opt callstack 0
  1154  000035                     ___flsub@b:
  1155                           	opt callstack 0
  1156  000035                     sqrtf@x:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x34
  1160  000035                     	ds	2
  1161  000037                     dtoa@s:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x36
  1165  000037                     	ds	2
  1166  000039                     ??_sqrtf:
  1167  000039                     ___flsub@a:
  1168                           	opt callstack 0
  1169  000039                     dtoa@n:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 8 bytes @ 0x38
  1173  000039                     	ds	4
  1174  00003D                     ?___fldiv:
  1175                           	opt callstack 0
  1176  00003D                     ___fldiv@b:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x3C
  1180  00003D                     	ds	4
  1181  000041                     dtoa@i:
  1182                           	opt callstack 0
  1183  000041                     ___fldiv@a:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x40
  1187  000041                     	ds	4
  1188  000045                     ??___fldiv:
  1189                           
  1190                           ; 1 bytes @ 0x44
  1191  000045                     	ds	4
  1192  000049                     ___fldiv@rem:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x48
  1196  000049                     	ds	4
  1197  00004D                     ___fldiv@sign:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x4C
  1201  00004D                     	ds	1
  1202  00004E                     ___fldiv@new_exp:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x4D
  1206  00004E                     	ds	2
  1207  000050                     ___fldiv@grs:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x4F
  1211  000050                     	ds	4
  1212  000054                     ___fldiv@bexp:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x53
  1216  000054                     	ds	1
  1217  000055                     ___fldiv@aexp:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x54
  1221  000055                     	ds	1
  1222  000056                     ?_floorf:
  1223                           	opt callstack 0
  1224  000056                     ?_R:
  1225                           	opt callstack 0
  1226  000056                     R@z:
  1227                           	opt callstack 0
  1228  000056                     floorf@x:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x55
  1232  000056                     	ds	4
  1233  00005A                     
  1234                           ; 1 bytes @ 0x59
  1235 ;;
  1236 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1237 ;;
  1238 ;; *************** function _main *****************
  1239 ;; Defined at:
  1240 ;;		line 34 in file "main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  ang             4    0[BANK1 ] float 
  1245 ;;  set_point       2    4[BANK1 ] int 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0
  1256 ;;      Locals:         0       0       6       0       0       0       0       0       0
  1257 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1258 ;;      Totals:         0       1       6       0       0       0       0       0       0
  1259 ;;Total ram usage:        7 bytes
  1260 ;; Hardware stack levels required when called:   10
  1261 ;; This function calls:
  1262 ;;		___flmul
  1263 ;;		___flsub
  1264 ;;		___fltol
  1265 ;;		___xxtofl
  1266 ;;		_i2c_mestre_config
  1267 ;;		_mpu_config
  1268 ;;		_mpu_ler
  1269 ;;		_pwm_config
  1270 ;;		_sprintf
  1271 ;;		_uart_escreve_byte
  1272 ;;		_uart_escreve_string
  1273 ;;		_uart_init
  1274 ;;		_uart_ler_string
  1275 ;; This function is called by:
  1276 ;;		Startup code after reset
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text0
  1281  0037B2                     __ptext0:
  1282                           	opt callstack 0
  1283  0037B2                     _main:
  1284                           	opt callstack 21
  1285  0037B2                     
  1286                           ;main.c: 35:     ADCON1=0b00001111;
  1287  0037B2  0E0F               	movlw	15
  1288  0037B4  6EC1               	movwf	193,c	;volatile
  1289  0037B6                     
  1290                           ;main.c: 36:     pwm_config();
  1291  0037B6  ECB0  F026         	call	_pwm_config	;wreg free
  1292  0037BA                     
  1293                           ;main.c: 38:     uart_init();
  1294  0037BA  ECF2  F026         	call	_uart_init	;wreg free
  1295  0037BE                     
  1296                           ;main.c: 39: i2c_mestre_config();
  1297  0037BE  ECBC  F026         	call	_i2c_mestre_config	;wreg free
  1298  0037C2                     
  1299                           ;main.c: 40:    mpu_config();
  1300  0037C2  EC68  F023         	call	_mpu_config	;wreg free
  1301  0037C6                     
  1302                           ;main.c: 41: GIE=1;
  1303  0037C6  8EF2               	bsf	4082,7,c	;volatile
  1304  0037C8                     
  1305                           ;main.c: 42: PEIE=1;
  1306  0037C8  8CF2               	bsf	4082,6,c	;volatile
  1307  0037CA                     l56:
  1308                           
  1309                           ;main.c: 47:       int set_point=0;
  1310  0037CA  0E00               	movlw	0
  1311  0037CC  0101               	movlb	1	; () banked
  1312  0037CE  6F80               	movwf	(main@set_point+1)& (0+255),b
  1313  0037D0  0E00               	movlw	0
  1314  0037D2  6F7F               	movwf	main@set_point& (0+255),b
  1315  0037D4                     
  1316                           ; BSR set to: 1
  1317                           ;main.c: 49:      CREN=1;
  1318  0037D4  88AB               	bsf	4011,4,c	;volatile
  1319  0037D6                     
  1320                           ; BSR set to: 1
  1321                           ;main.c: 51:      set_point=uart_ler_string();
  1322  0037D6  EC16  F023         	call	_uart_ler_string	;wreg free
  1323  0037DA  C01A  F17F         	movff	?_uart_ler_string,main@set_point
  1324  0037DE  C01B  F180         	movff	?_uart_ler_string+1,main@set_point+1
  1325  0037E2                     
  1326                           ;main.c: 54:      CREN=0;
  1327  0037E2  98AB               	bcf	4011,4,c	;volatile
  1328  0037E4                     
  1329                           ;main.c: 57:          ang=mpu_ler();
  1330  0037E4  ECCE  F01E         	call	_mpu_ler	;wreg free
  1331  0037E8  C0B4  F17B         	movff	?_mpu_ler,main@ang
  1332  0037EC  C0B5  F17C         	movff	?_mpu_ler+1,main@ang+1
  1333  0037F0  C0B6  F17D         	movff	?_mpu_ler+2,main@ang+2
  1334  0037F4  C0B7  F17E         	movff	?_mpu_ler+3,main@ang+3
  1335  0037F8                     
  1336                           ;main.c: 58:       erro=set_point-ang;
  1337  0037F8  C17F  F004         	movff	main@set_point,___xxtofl@val
  1338  0037FC  C180  F005         	movff	main@set_point+1,___xxtofl@val+1
  1339  003800  0E00               	movlw	0
  1340  003802  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  1341  003804  0EFF               	movlw	-1
  1342  003806  6E06               	movwf	(___xxtofl@val+2)^0,c
  1343  003808  6E07               	movwf	(___xxtofl@val+3)^0,c
  1344  00380A  0E01               	movlw	1
  1345  00380C  ECFF  F01A         	call	___xxtofl
  1346  003810  C004  F035         	movff	?___xxtofl,___flsub@b
  1347  003814  C005  F036         	movff	?___xxtofl+1,___flsub@b+1
  1348  003818  C006  F037         	movff	?___xxtofl+2,___flsub@b+2
  1349  00381C  C007  F038         	movff	?___xxtofl+3,___flsub@b+3
  1350  003820  C17B  F039         	movff	main@ang,___flsub@a
  1351  003824  C17C  F03A         	movff	main@ang+1,___flsub@a+1
  1352  003828  C17D  F03B         	movff	main@ang+2,___flsub@a+2
  1353  00382C  C17E  F03C         	movff	main@ang+3,___flsub@a+3
  1354  003830  EC0A  F025         	call	___flsub	;wreg free
  1355  003834  C035  F110         	movff	?___flsub,_erro
  1356  003838  C036  F111         	movff	?___flsub+1,_erro+1
  1357  00383C  C037  F112         	movff	?___flsub+2,_erro+2
  1358  003840  C038  F113         	movff	?___flsub+3,_erro+3
  1359  003844                     
  1360                           ;main.c: 59:       u=-k*erro;
  1361  003844  C110  F00C         	movff	_erro,___flmul@b
  1362  003848  C111  F00D         	movff	_erro+1,___flmul@b+1
  1363  00384C  C112  F00E         	movff	_erro+2,___flmul@b+2
  1364  003850  C113  F00F         	movff	_erro+3,___flmul@b+3
  1365  003854  0E9A               	movlw	154
  1366  003856  6E10               	movwf	___flmul@a^0,c
  1367  003858  0E99               	movlw	153
  1368  00385A  6E11               	movwf	(___flmul@a+1)^0,c
  1369  00385C  0E99               	movlw	153
  1370  00385E  6E12               	movwf	(___flmul@a+2)^0,c
  1371  003860  0EBE               	movlw	190
  1372  003862  6E13               	movwf	(___flmul@a+3)^0,c
  1373  003864  ECAD  F011         	call	___flmul	;wreg free
  1374  003868  C00C  F10C         	movff	?___flmul,_u
  1375  00386C  C00D  F10D         	movff	?___flmul+1,_u+1
  1376  003870  C00E  F10E         	movff	?___flmul+2,_u+2
  1377  003874  C00F  F10F         	movff	?___flmul+3,_u+3
  1378  003878                     
  1379                           ;main.c: 60:       dc=dc+(int)u;
  1380  003878  C10C  F004         	movff	_u,___fltol@f1
  1381  00387C  C10D  F005         	movff	_u+1,___fltol@f1+1
  1382  003880  C10E  F006         	movff	_u+2,___fltol@f1+2
  1383  003884  C10F  F007         	movff	_u+3,___fltol@f1+3
  1384  003888  EC52  F01F         	call	___fltol	;wreg free
  1385  00388C  0100               	movlb	0	; () banked
  1386  00388E  51F9               	movf	_dc& (0+255),w,b
  1387  003890  2404               	addwf	?___fltol^0,w,c
  1388  003892  6FF9               	movwf	_dc& (0+255),b
  1389  003894  51FA               	movf	(_dc+1)& (0+255),w,b
  1390  003896  2005               	addwfc	(?___fltol+1)^0,w,c
  1391  003898  6FFA               	movwf	(_dc+1)& (0+255),b
  1392  00389A                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 63: if(dc>99){
  1395  00389A  BFFA               	btfsc	(_dc+1)& (0+255),7,b
  1396  00389C  EF59  F01C         	goto	u9591
  1397  0038A0  51FA               	movf	(_dc+1)& (0+255),w,b
  1398  0038A2  E109               	bnz	u9590
  1399  0038A4  0E64               	movlw	100
  1400  0038A6  5DF9               	subwf	_dc& (0+255),w,b
  1401  0038A8  A0D8               	btfss	status,0,c
  1402  0038AA  EF59  F01C         	goto	u9591
  1403  0038AE  EF5B  F01C         	goto	u9590
  1404  0038B2                     u9591:
  1405  0038B2  EF61  F01C         	goto	l7113
  1406  0038B6                     u9590:
  1407  0038B6                     
  1408                           ; BSR set to: 0
  1409                           ;main.c: 64: dc=99;}
  1410  0038B6  0E00               	movlw	0
  1411  0038B8  6FFA               	movwf	(_dc+1)& (0+255),b
  1412  0038BA  0E63               	movlw	99
  1413  0038BC  6FF9               	movwf	_dc& (0+255),b
  1414  0038BE  EF73  F01C         	goto	l7117
  1415  0038C2                     l7113:
  1416                           
  1417                           ; BSR set to: 0
  1418  0038C2  BFFA               	btfsc	(_dc+1)& (0+255),7,b
  1419  0038C4  EF6F  F01C         	goto	u9600
  1420  0038C8  51FA               	movf	(_dc+1)& (0+255),w,b
  1421  0038CA  E107               	bnz	u9601
  1422  0038CC  0E23               	movlw	35
  1423  0038CE  5DF9               	subwf	_dc& (0+255),w,b
  1424  0038D0  B0D8               	btfsc	status,0,c
  1425  0038D2  EF6D  F01C         	goto	u9601
  1426  0038D6  EF6F  F01C         	goto	u9600
  1427  0038DA                     u9601:
  1428  0038DA  EF73  F01C         	goto	l7117
  1429  0038DE                     u9600:
  1430  0038DE                     
  1431                           ; BSR set to: 0
  1432  0038DE  0E00               	movlw	0
  1433  0038E0  6FFA               	movwf	(_dc+1)& (0+255),b
  1434  0038E2  0E23               	movlw	35
  1435  0038E4  6FF9               	movwf	_dc& (0+255),b
  1436  0038E6                     l7117:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 76:    sprintf(buf,"%0.2f/%d",ang,set_point);
  1440  0038E6  0E66               	movlw	low _buf
  1441  0038E8  6FDC               	movwf	sprintf@s& (0+255),b
  1442  0038EA  0E01               	movlw	high _buf
  1443  0038EC  6FDD               	movwf	(sprintf@s+1)& (0+255),b
  1444  0038EE  0E19               	movlw	low STR_1
  1445  0038F0  6FDE               	movwf	sprintf@fmt& (0+255),b
  1446  0038F2  0E08               	movlw	high STR_1
  1447  0038F4  6FDF               	movwf	(sprintf@fmt+1)& (0+255),b
  1448  0038F6  C17B  F0E0         	movff	main@ang,?_sprintf+4
  1449  0038FA  C17C  F0E1         	movff	main@ang+1,?_sprintf+5
  1450  0038FE  C17D  F0E2         	movff	main@ang+2,?_sprintf+6
  1451  003902  C17E  F0E3         	movff	main@ang+3,?_sprintf+7
  1452  003906  C17F  F0E4         	movff	main@set_point,?_sprintf+8
  1453  00390A  C180  F0E5         	movff	main@set_point+1,?_sprintf+9
  1454  00390E  ECB8  F024         	call	_sprintf	;wreg free
  1455  003912                     
  1456                           ;main.c: 78:     uart_escreve_string(buf);
  1457  003912  0E66               	movlw	low _buf
  1458  003914  6E05               	movwf	uart_escreve_string@mens^0,c
  1459  003916  0E01               	movlw	high _buf
  1460  003918  6E06               	movwf	(uart_escreve_string@mens+1)^0,c
  1461  00391A  EC71  F025         	call	_uart_escreve_string	;wreg free
  1462  00391E                     
  1463                           ;main.c: 80:     uart_escreve_byte('\n');
  1464  00391E  0E0A               	movlw	10
  1465  003920  ECC8  F026         	call	_uart_escreve_byte
  1466  003924                     
  1467                           ;main.c: 82:         _delay((unsigned long)((2)*(16000000/4000.0)));
  1468  003924  0E0B               	movlw	11
  1469  003926  0100               	movlb	0	; () banked
  1470  003928  6FF0               	movwf	??_main& (0+255),b
  1471  00392A  0E62               	movlw	98
  1472  00392C                     u9637:
  1473  00392C  2EE8               	decfsz	wreg,f,c
  1474  00392E  D7FE               	bra	u9637
  1475  003930  2FF0               	decfsz	??_main& (0+255),f,b
  1476  003932  D7FC               	bra	u9637
  1477  003934  F000               	nop	
  1478  003936  EFE5  F01B         	goto	l56
  1479  00393A  EF07  F000         	goto	start
  1480  00393E                     __end_of_main:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _uart_ler_string *****************
  1484 ;; Defined at:
  1485 ;;		line 34 in file "uart.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  i               2   30[COMRAM] int 
  1490 ;;  c               2   28[COMRAM] int 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  2   25[COMRAM] int 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1500 ;;      Params:         2       0       0       0       0       0       0       0       0
  1501 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1502 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1503 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1504 ;;Total ram usage:        7 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    4
  1507 ;; This function calls:
  1508 ;;		_atoi
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text1
  1515  00462C                     __ptext1:
  1516                           	opt callstack 0
  1517  00462C                     _uart_ler_string:
  1518                           	opt callstack 26
  1519  00462C                     
  1520                           ;uart.c: 35:   static char dado[6];;uart.c: 36:        int i=0;
  1521  00462C  0E00               	movlw	0
  1522  00462E  6E20               	movwf	(uart_ler_string@i+1)^0,c
  1523  004630  0E00               	movlw	0
  1524  004632  6E1F               	movwf	uart_ler_string@i^0,c
  1525                           
  1526                           ;uart.c: 37:        int c=800;
  1527  004634  0E03               	movlw	3
  1528  004636  6E1E               	movwf	(uart_ler_string@c+1)^0,c
  1529  004638  0E20               	movlw	32
  1530  00463A  6E1D               	movwf	uart_ler_string@c^0,c
  1531                           
  1532                           ;uart.c: 39:     while(c){
  1533  00463C  EF54  F023         	goto	l7037
  1534  004640                     l107:
  1535                           
  1536                           ;uart.c: 40:        if(RCIF){dado[i]=RCREG;++i;}
  1537  004640  AA9E               	btfss	3998,5,c	;volatile
  1538  004642  EF25  F023         	goto	u9541
  1539  004646  EF27  F023         	goto	u9540
  1540  00464A                     u9541:
  1541  00464A  EF31  F023         	goto	l7033
  1542  00464E                     u9540:
  1543  00464E  0E75               	movlw	low uart_ler_string@dado
  1544  004650  241F               	addwf	uart_ler_string@i^0,w,c
  1545  004652  6ED9               	movwf	fsr2l,c
  1546  004654  0E01               	movlw	high uart_ler_string@dado
  1547  004656  2020               	addwfc	(uart_ler_string@i+1)^0,w,c
  1548  004658  6EDA               	movwf	fsr2h,c
  1549  00465A  CFAE FFDF          	movff	4014,indf2	;volatile
  1550  00465E  4A1F               	infsnz	uart_ler_string@i^0,f,c
  1551  004660  2A20               	incf	(uart_ler_string@i+1)^0,f,c
  1552  004662                     l7033:
  1553                           
  1554                           ;uart.c: 41:        --c;
  1555  004662  061D               	decf	uart_ler_string@c^0,f,c
  1556  004664  A0D8               	btfss	status,0,c
  1557  004666  061E               	decf	(uart_ler_string@c+1)^0,f,c
  1558                           
  1559                           ;uart.c: 43:        if(dado[i-1]=='\r' || dado[i-1]=='\n'){break;}
  1560  004668  0E74               	movlw	low (uart_ler_string@dado+65535)
  1561  00466A  241F               	addwf	uart_ler_string@i^0,w,c
  1562  00466C  6ED9               	movwf	fsr2l,c
  1563  00466E  0E01               	movlw	high (uart_ler_string@dado+65535)
  1564  004670  2020               	addwfc	(uart_ler_string@i+1)^0,w,c
  1565  004672  6EDA               	movwf	fsr2h,c
  1566  004674  0E0D               	movlw	13
  1567  004676  18DE               	xorwf	postinc2,w,c
  1568  004678  B4D8               	btfsc	status,2,c
  1569  00467A  EF41  F023         	goto	u9551
  1570  00467E  EF43  F023         	goto	u9550
  1571  004682                     u9551:
  1572  004682  EF5D  F023         	goto	l7039
  1573  004686                     u9550:
  1574  004686  0E74               	movlw	low (uart_ler_string@dado+65535)
  1575  004688  241F               	addwf	uart_ler_string@i^0,w,c
  1576  00468A  6ED9               	movwf	fsr2l,c
  1577  00468C  0E01               	movlw	high (uart_ler_string@dado+65535)
  1578  00468E  2020               	addwfc	(uart_ler_string@i+1)^0,w,c
  1579  004690  6EDA               	movwf	fsr2h,c
  1580  004692  0E0A               	movlw	10
  1581  004694  18DE               	xorwf	postinc2,w,c
  1582  004696  A4D8               	btfss	status,2,c
  1583  004698  EF50  F023         	goto	u9561
  1584  00469C  EF52  F023         	goto	u9560
  1585  0046A0                     u9561:
  1586  0046A0  EF54  F023         	goto	l7037
  1587  0046A4                     u9560:
  1588  0046A4  EF5D  F023         	goto	l7039
  1589  0046A8                     l7037:
  1590                           
  1591                           ;uart.c: 39:     while(c){
  1592  0046A8  501D               	movf	uart_ler_string@c^0,w,c
  1593  0046AA  101E               	iorwf	(uart_ler_string@c+1)^0,w,c
  1594  0046AC  A4D8               	btfss	status,2,c
  1595  0046AE  EF5B  F023         	goto	u9571
  1596  0046B2  EF5D  F023         	goto	u9570
  1597  0046B6                     u9571:
  1598  0046B6  EF20  F023         	goto	l107
  1599  0046BA                     u9570:
  1600  0046BA                     l7039:
  1601                           
  1602                           ;uart.c: 48: return(atoi(dado));
  1603  0046BA  0E75               	movlw	low uart_ler_string@dado
  1604  0046BC  6E0B               	movwf	atoi@s^0,c
  1605  0046BE  0E01               	movlw	high uart_ler_string@dado
  1606  0046C0  6E0C               	movwf	(atoi@s+1)^0,c
  1607  0046C2  EC03  F01A         	call	_atoi	;wreg free
  1608  0046C6  C00B  F01A         	movff	?_atoi,?_uart_ler_string
  1609  0046CA  C00C  F01B         	movff	?_atoi+1,?_uart_ler_string+1
  1610  0046CE  0012               	return		;funcret
  1611  0046D0                     __end_of_uart_ler_string:
  1612                           	opt callstack 0
  1613                           
  1614 ;; *************** function _uart_init *****************
  1615 ;; Defined at:
  1616 ;;		line 5 in file "uart.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text2
  1645  004DE4                     __ptext2:
  1646                           	opt callstack 0
  1647  004DE4                     _uart_init:
  1648                           	opt callstack 28
  1649  004DE4                     
  1650                           ;uart.c: 7:    TXSTA=0b00100100;
  1651  004DE4  0E24               	movlw	36
  1652  004DE6  6EAC               	movwf	172,c	;volatile
  1653                           
  1654                           ;uart.c: 8:    RCSTA=0b10010000;
  1655  004DE8  0E90               	movlw	144
  1656  004DEA  6EAB               	movwf	171,c	;volatile
  1657                           
  1658                           ;uart.c: 9: SPBRG=51;
  1659  004DEC  0E33               	movlw	51
  1660  004DEE  6EAF               	movwf	175,c	;volatile
  1661  004DF0                     
  1662                           ;uart.c: 10: TRISC6=1;
  1663  004DF0  8C82               	bsf	3970,6,c	;volatile
  1664  004DF2                     
  1665                           ;uart.c: 11: TRISC7=1;
  1666  004DF2  8E94               	bsf	3988,7,c	;volatile
  1667  004DF4  0012               	return		;funcret
  1668  004DF6                     __end_of_uart_init:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _uart_escreve_string *****************
  1672 ;; Defined at:
  1673 ;;		line 19 in file "uart.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  mens            2    4[COMRAM] PTR unsigned char 
  1676 ;;		 -> buf(15), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  i               2    6[COMRAM] int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1688 ;;      Params:         2       0       0       0       0       0       0       0       0
  1689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1691 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1692 ;;Total ram usage:        4 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    3
  1695 ;; This function calls:
  1696 ;;		_uart_escreve_byte
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text3
  1703  004AE2                     __ptext3:
  1704                           	opt callstack 0
  1705  004AE2                     _uart_escreve_string:
  1706                           	opt callstack 27
  1707  004AE2                     
  1708                           ;uart.c: 20:     int i=0;
  1709  004AE2  0E00               	movlw	0
  1710  004AE4  6E08               	movwf	(uart_escreve_string@i+1)^0,c
  1711  004AE6  0E00               	movlw	0
  1712  004AE8  6E07               	movwf	uart_escreve_string@i^0,c
  1713                           
  1714                           ;uart.c: 21:     while(mens[i]!='\0'){
  1715  004AEA  EF82  F025         	goto	l7079
  1716  004AEE                     l7075:
  1717                           
  1718                           ;uart.c: 22:     uart_escreve_byte(mens[i++]);
  1719  004AEE  5007               	movf	uart_escreve_string@i^0,w,c
  1720  004AF0  2405               	addwf	uart_escreve_string@mens^0,w,c
  1721  004AF2  6ED9               	movwf	fsr2l,c
  1722  004AF4  5008               	movf	(uart_escreve_string@i+1)^0,w,c
  1723  004AF6  2006               	addwfc	(uart_escreve_string@mens+1)^0,w,c
  1724  004AF8  6EDA               	movwf	fsr2h,c
  1725  004AFA  50DF               	movf	indf2,w,c
  1726  004AFC  ECC8  F026         	call	_uart_escreve_byte
  1727  004B00  4A07               	infsnz	uart_escreve_string@i^0,f,c
  1728  004B02  2A08               	incf	(uart_escreve_string@i+1)^0,f,c
  1729  004B04                     l7079:
  1730                           
  1731                           ;uart.c: 21:     while(mens[i]!='\0'){
  1732  004B04  5007               	movf	uart_escreve_string@i^0,w,c
  1733  004B06  2405               	addwf	uart_escreve_string@mens^0,w,c
  1734  004B08  6ED9               	movwf	fsr2l,c
  1735  004B0A  5008               	movf	(uart_escreve_string@i+1)^0,w,c
  1736  004B0C  2006               	addwfc	(uart_escreve_string@mens+1)^0,w,c
  1737  004B0E  6EDA               	movwf	fsr2h,c
  1738  004B10  50DF               	movf	indf2,w,c
  1739  004B12  A4D8               	btfss	status,2,c
  1740  004B14  EF8E  F025         	goto	u9581
  1741  004B18  EF90  F025         	goto	u9580
  1742  004B1C                     u9581:
  1743  004B1C  EF77  F025         	goto	l7075
  1744  004B20                     u9580:
  1745  004B20  0012               	return		;funcret
  1746  004B22                     __end_of_uart_escreve_string:
  1747                           	opt callstack 0
  1748                           
  1749 ;; *************** function _uart_escreve_byte *****************
  1750 ;; Defined at:
  1751 ;;		line 14 in file "uart.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  dado            1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  dado            1    3[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    2
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;;		_uart_escreve_string
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text4
  1781  004D90                     __ptext4:
  1782                           	opt callstack 0
  1783  004D90                     _uart_escreve_byte:
  1784                           	opt callstack 27
  1785                           
  1786                           ;incstack = 0
  1787                           ;uart_escreve_byte@dado stored from wreg
  1788  004D90  6E04               	movwf	uart_escreve_byte@dado^0,c
  1789  004D92                     l88:
  1790  004D92  A2AC               	btfss	4012,1,c	;volatile
  1791  004D94  EFCE  F026         	goto	u9281
  1792  004D98  EFD0  F026         	goto	u9280
  1793  004D9C                     u9281:
  1794  004D9C  EFC9  F026         	goto	l88
  1795  004DA0                     u9280:
  1796  004DA0                     
  1797                           ;uart.c: 16:     TXREG=dado;
  1798  004DA0  C004  FFAD         	movff	uart_escreve_byte@dado,4013	;volatile
  1799  004DA4  0012               	return		;funcret
  1800  004DA6                     __end_of_uart_escreve_byte:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function _sprintf *****************
  1804 ;; Defined at:
  1805 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  s               2  124[BANK0 ] PTR unsigned char 
  1808 ;;		 -> buf(15), 
  1809 ;;  fmt             2  126[BANK0 ] PTR const unsigned char 
  1810 ;;		 -> STR_1(9), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  f               6  138[BANK0 ] struct _IO_FILE
  1813 ;;  ap              2  136[BANK0 ] PTR void [1]
  1814 ;;		 -> ?_sprintf(2), 
  1815 ;;  ret             2    0        int 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2  124[BANK0 ] int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         0      10       0       0       0       0       0       0       0
  1826 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1829 ;;Total ram usage:       20 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    9
  1832 ;; This function calls:
  1833 ;;		_vfprintf
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text5
  1840  004970                     __ptext5:
  1841                           	opt callstack 0
  1842  004970                     _sprintf:
  1843                           	opt callstack 21
  1844  004970  0EE0               	movlw	low (?_sprintf+4)
  1845  004972  0100               	movlb	0	; () banked
  1846  004974  6FE8               	movwf	sprintf@ap& (0+255),b
  1847  004976  0E00               	movlw	high (?_sprintf+4)
  1848  004978  6FE9               	movwf	(sprintf@ap+1)& (0+255),b
  1849  00497A  C0DC  F0EA         	movff	sprintf@s,sprintf@f
  1850  00497E  C0DD  F0EB         	movff	sprintf@s+1,sprintf@f+1
  1851  004982                     
  1852                           ; BSR set to: 0
  1853  004982  0E00               	movlw	0
  1854  004984  6FED               	movwf	(sprintf@f+3)& (0+255),b
  1855  004986  0E00               	movlw	0
  1856  004988  6FEC               	movwf	(sprintf@f+2)& (0+255),b
  1857  00498A                     
  1858                           ; BSR set to: 0
  1859  00498A  0E00               	movlw	0
  1860  00498C  6FEF               	movwf	(sprintf@f+5)& (0+255),b
  1861  00498E  0E00               	movlw	0
  1862  004990  6FEE               	movwf	(sprintf@f+4)& (0+255),b
  1863  004992                     
  1864                           ; BSR set to: 0
  1865  004992  0EEA               	movlw	low sprintf@f
  1866  004994  6FD4               	movwf	vfprintf@fp& (0+255),b
  1867  004996  0E00               	movlw	high sprintf@f
  1868  004998  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  1869  00499A  C0DE  F0D6         	movff	sprintf@fmt,vfprintf@fmt
  1870  00499E  C0DF  F0D7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1871  0049A2  0EE8               	movlw	low sprintf@ap
  1872  0049A4  6FD8               	movwf	vfprintf@ap& (0+255),b
  1873  0049A6  0E00               	movlw	high sprintf@ap
  1874  0049A8  6FD9               	movwf	(vfprintf@ap+1)& (0+255),b
  1875  0049AA  EC29  F024         	call	_vfprintf	;wreg free
  1876  0049AE  0100               	movlb	0	; () banked
  1877  0049B0  51EC               	movf	(sprintf@f+2)& (0+255),w,b
  1878  0049B2  25DC               	addwf	sprintf@s& (0+255),w,b
  1879  0049B4  6ED9               	movwf	fsr2l,c
  1880  0049B6  51ED               	movf	(sprintf@f+3)& (0+255),w,b
  1881  0049B8  21DD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1882  0049BA  6EDA               	movwf	fsr2h,c
  1883  0049BC  0E00               	movlw	0
  1884  0049BE  6EDF               	movwf	indf2,c
  1885  0049C0                     
  1886                           ; BSR set to: 0
  1887  0049C0  0012               	return		;funcret
  1888  0049C2                     __end_of_sprintf:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _vfprintf *****************
  1892 ;; Defined at:
  1893 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2  116[BANK0 ] PTR struct _IO_FILE
  1896 ;;		 -> sprintf@f(6), 
  1897 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  1898 ;;		 -> STR_1(9), 
  1899 ;;  ap              2  120[BANK0 ] PTR PTR void 
  1900 ;;		 -> sprintf@ap(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  cfmt            2  122[BANK0 ] PTR unsigned char 
  1903 ;;		 -> STR_1(9), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2  116[BANK0 ] int 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         0       6       0       0       0       0       0       0       0
  1914 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1916 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        8 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    8
  1920 ;; This function calls:
  1921 ;;		_vfpfcnvrt
  1922 ;; This function is called by:
  1923 ;;		_sprintf
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text6
  1928  004852                     __ptext6:
  1929                           	opt callstack 0
  1930  004852                     _vfprintf:
  1931                           	opt callstack 21
  1932  004852                     
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1934  004852  C0D6  F0DA         	movff	vfprintf@fmt,vfprintf@cfmt
  1935  004856  C0D7  F0DB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1936  00485A                     
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1938  00485A  0E00               	movlw	0
  1939  00485C  0100               	movlb	0	; () banked
  1940  00485E  6FF2               	movwf	(_nout+1)& (0+255),b
  1941  004860  0E00               	movlw	0
  1942  004862  6FF1               	movwf	_nout& (0+255),b
  1943                           
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1945  004864  EF47  F024         	goto	l6907
  1946  004868                     l6905:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1950  004868  C0D4  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1951  00486C  C0D5  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1952  004870  0EDA               	movlw	low vfprintf@cfmt
  1953  004872  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1954  004874  0E00               	movlw	high vfprintf@cfmt
  1955  004876  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1956  004878  C0D8  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1957  00487C  C0D9  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1958  004880  ECF4  F009         	call	_vfpfcnvrt	;wreg free
  1959  004884  0100               	movlb	0	; () banked
  1960  004886  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  1961  004888  27F1               	addwf	_nout& (0+255),f,b
  1962  00488A  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1963  00488C  23F2               	addwfc	(_nout+1)& (0+255),f,b
  1964  00488E                     l6907:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1968  00488E  C0DA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1969  004892  C0DB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1970  004896                     	if	0	;tblptru may be non-zero
  1971  004896                     	endif
  1972  004896                     	if	0	;tblptru may be non-zero
  1973  004896                     	endif
  1974  004896  0008               	tblrd		*
  1975  004898  50F5               	movf	tablat,w,c
  1976  00489A  0900               	iorlw	0
  1977  00489C  A4D8               	btfss	status,2,c
  1978  00489E  EF53  F024         	goto	u9431
  1979  0048A2  EF55  F024         	goto	u9430
  1980  0048A6                     u9431:
  1981  0048A6  EF34  F024         	goto	l6905
  1982  0048AA                     u9430:
  1983  0048AA                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1986  0048AA  C0F1  F0D4         	movff	_nout,?_vfprintf
  1987  0048AE  C0F2  F0D5         	movff	_nout+1,?_vfprintf+1
  1988  0048B2                     
  1989                           ; BSR set to: 0
  1990  0048B2  0012               	return		;funcret
  1991  0048B4                     __end_of_vfprintf:
  1992                           	opt callstack 0
  1993                           
  1994 ;; *************** function _vfpfcnvrt *****************
  1995 ;; Defined at:
  1996 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1999 ;;		 -> sprintf@f(6), 
  2000 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
  2001 ;;		 -> vfprintf@cfmt(2), 
  2002 ;;  ap              2   88[BANK0 ] PTR PTR void 
  2003 ;;		 -> sprintf@ap(2), 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  ll              8   94[BANK0 ] long long 
  2006 ;;  llu             8    0        unsigned long long 
  2007 ;;  f               4  108[BANK0 ] unsigned long long 
  2008 ;;  ct              3  112[BANK0 ] unsigned char [3]
  2009 ;;  vp              3    0        PTR void 
  2010 ;;  cp              3    0        PTR unsigned char 
  2011 ;;  done            2  102[BANK0 ] int 
  2012 ;;  i               2    0        int 
  2013 ;;  c               1  115[BANK0 ] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2   84[BANK0 ] int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2023 ;;      Params:         0       6       0       0       0       0       0       0       0
  2024 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2025 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2026 ;;      Totals:         0      32       0       0       0       0       0       0       0
  2027 ;;Total ram usage:       32 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    7
  2030 ;; This function calls:
  2031 ;;		_atoi
  2032 ;;		_dtoa
  2033 ;;		_efgtoa
  2034 ;;		_fputc
  2035 ;;		_isdigit
  2036 ;;		_isupper
  2037 ;;		_strncmp
  2038 ;;		_tolower
  2039 ;; This function is called by:
  2040 ;;		_vfprintf
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text7
  2045  0013E8                     __ptext7:
  2046                           	opt callstack 0
  2047  0013E8                     _vfpfcnvrt:
  2048                           	opt callstack 21
  2049  0013E8                     
  2050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2051  0013E8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2052  0013EC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2053  0013F0  CFDE FFF6          	movff	postinc2,tblptrl
  2054  0013F4  CFDD FFF7          	movff	postdec2,tblptrh
  2055  0013F8                     	if	0	;tblptru may be non-zero
  2056  0013F8                     	endif
  2057  0013F8                     	if	0	;tblptru may be non-zero
  2058  0013F8                     	endif
  2059  0013F8  0008               	tblrd		*
  2060  0013FA  50F5               	movf	tablat,w,c
  2061  0013FC  0A25               	xorlw	37
  2062  0013FE  A4D8               	btfss	status,2,c
  2063  001400  EF04  F00A         	goto	u8961
  2064  001404  EF06  F00A         	goto	u8960
  2065  001408                     u8961:
  2066  001408  EFD0  F00C         	goto	l6731
  2067  00140C                     u8960:
  2068  00140C                     
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2070  00140C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  001410  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  001414  2ADE               	incf	postinc2,f,c
  2073  001416  0E00               	movlw	0
  2074  001418  22DD               	addwfc	postdec2,f,c
  2075  00141A                     
  2076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2077  00141A  0E00               	movlw	0
  2078  00141C  0100               	movlb	0	; () banked
  2079  00141E  6FF4               	movwf	(_width+1)& (0+255),b
  2080  001420  0E00               	movlw	0
  2081  001422  6FF3               	movwf	_width& (0+255),b
  2082  001424  C0F3  F05A         	movff	_width,_flags
  2083  001428  C0F4  F05B         	movff	_width+1,_flags+1
  2084  00142C                     
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2087  00142C  69F5               	setf	_prec& (0+255),b
  2088  00142E  69F6               	setf	(_prec+1)& (0+255),b
  2089  001430                     
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2092  001430  0E00               	movlw	0
  2093  001432  6FC7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2094  001434  0E00               	movlw	0
  2095  001436  6FC6               	movwf	vfpfcnvrt@done& (0+255),b
  2096                           
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2098  001438  EF64  F00A         	goto	l6643
  2099  00143C                     l6617:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2103  00143C  805A               	bsf	_flags^0,0,c
  2104  00143E                     l6619:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2108  00143E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  001442  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  001446  2ADE               	incf	postinc2,f,c
  2111  001448  0E00               	movlw	0
  2112  00144A  22DD               	addwfc	postdec2,f,c
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2115  00144C  EF64  F00A         	goto	l6643
  2116  001450                     l6621:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2120  001450  825A               	bsf	_flags^0,1,c
  2121  001452  EF1F  F00A         	goto	l6619
  2122  001456                     l6625:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2126  001456  845A               	bsf	_flags^0,2,c
  2127  001458  EF1F  F00A         	goto	l6619
  2128  00145C                     l6629:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2132  00145C  865A               	bsf	_flags^0,3,c
  2133  00145E  EF1F  F00A         	goto	l6619
  2134  001462                     l6633:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2138  001462  885A               	bsf	_flags^0,4,c
  2139  001464  EF1F  F00A         	goto	l6619
  2140  001468                     l6637:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2144  001468  0E00               	movlw	0
  2145  00146A  6FC7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2146  00146C  0E01               	movlw	1
  2147  00146E  6FC6               	movwf	vfpfcnvrt@done& (0+255),b
  2148                           
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2150  001470  EF64  F00A         	goto	l6643
  2151  001474                     l6641:
  2152                           
  2153                           ; BSR set to: 0
  2154  001474  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2155  001478  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2156  00147C  CFDE FFF6          	movff	postinc2,tblptrl
  2157  001480  CFDD FFF7          	movff	postdec2,tblptrh
  2158  001484                     	if	0	;tblptru may be non-zero
  2159  001484                     	endif
  2160  001484                     	if	0	;tblptru may be non-zero
  2161  001484                     	endif
  2162  001484  0008               	tblrd		*
  2163  001486  50F5               	movf	tablat,w,c
  2164  001488  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2165  00148A  6BBB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2166                           
  2167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 1, Range of values is 0 to 0
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte            4     3 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174  00148C  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2175  00148E  0A00               	xorlw	0	; case 0
  2176  001490  B4D8               	btfsc	status,2,c
  2177  001492  EF4D  F00A         	goto	l7197
  2178  001496  EF34  F00A         	goto	l6637
  2179  00149A                     l7197:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 5, Range of values is 32 to 48
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte           16     9 (average)
  2187                           ;	Chosen strategy is simple_byte
  2188  00149A  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2189  00149C  0A20               	xorlw	32	; case 32
  2190  00149E  B4D8               	btfsc	status,2,c
  2191  0014A0  EF2E  F00A         	goto	l6629
  2192  0014A4  0A03               	xorlw	3	; case 35
  2193  0014A6  B4D8               	btfsc	status,2,c
  2194  0014A8  EF31  F00A         	goto	l6633
  2195  0014AC  0A08               	xorlw	8	; case 43
  2196  0014AE  B4D8               	btfsc	status,2,c
  2197  0014B0  EF2B  F00A         	goto	l6625
  2198  0014B4  0A06               	xorlw	6	; case 45
  2199  0014B6  B4D8               	btfsc	status,2,c
  2200  0014B8  EF1E  F00A         	goto	l6617
  2201  0014BC  0A1D               	xorlw	29	; case 48
  2202  0014BE  B4D8               	btfsc	status,2,c
  2203  0014C0  EF28  F00A         	goto	l6621
  2204  0014C4  EF34  F00A         	goto	l6637
  2205  0014C8                     l6643:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2209  0014C8  51C6               	movf	vfpfcnvrt@done& (0+255),w,b
  2210  0014CA  11C7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2211  0014CC  B4D8               	btfsc	status,2,c
  2212  0014CE  EF6B  F00A         	goto	u8971
  2213  0014D2  EF6D  F00A         	goto	u8970
  2214  0014D6                     u8971:
  2215  0014D6  EF3A  F00A         	goto	l6641
  2216  0014DA                     u8970:
  2217  0014DA                     
  2218                           ; BSR set to: 0
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2220  0014DA  A05A               	btfss	_flags^0,0,c
  2221  0014DC  EF72  F00A         	goto	u8981
  2222  0014E0  EF74  F00A         	goto	u8980
  2223  0014E4                     u8981:
  2224  0014E4  EF75  F00A         	goto	l6647
  2225  0014E8                     u8980:
  2226  0014E8                     
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2229  0014E8  925A               	bcf	_flags^0,1,c
  2230  0014EA                     l6647:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2234  0014EA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  0014EE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  0014F2  CFDE FFF6          	movff	postinc2,tblptrl
  2237  0014F6  CFDD FFF7          	movff	postdec2,tblptrh
  2238  0014FA                     	if	0	;tblptru may be non-zero
  2239  0014FA                     	endif
  2240  0014FA                     	if	0	;tblptru may be non-zero
  2241  0014FA                     	endif
  2242  0014FA  0008               	tblrd		*
  2243  0014FC  50F5               	movf	tablat,w,c
  2244  0014FE  0A2E               	xorlw	46
  2245  001500  A4D8               	btfss	status,2,c
  2246  001502  EF85  F00A         	goto	u8991
  2247  001506  EF87  F00A         	goto	u8990
  2248  00150A                     u8991:
  2249  00150A  EF05  F00B         	goto	l6667
  2250  00150E                     u8990:
  2251  00150E                     
  2252                           ; BSR set to: 0
  2253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2254  00150E  0E00               	movlw	0
  2255  001510  6FF6               	movwf	(_prec+1)& (0+255),b
  2256  001512  0E00               	movlw	0
  2257  001514  6FF5               	movwf	_prec& (0+255),b
  2258  001516                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2261  001516  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2262  00151A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2263  00151E  2ADE               	incf	postinc2,f,c
  2264  001520  0E00               	movlw	0
  2265  001522  22DD               	addwfc	postdec2,f,c
  2266  001524                     
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2269  001524  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  001528  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  00152C  CFDE FFF6          	movff	postinc2,tblptrl
  2272  001530  CFDD FFF7          	movff	postdec2,tblptrh
  2273  001534                     	if	0	;tblptru may be non-zero
  2274  001534                     	endif
  2275  001534                     	if	0	;tblptru may be non-zero
  2276  001534                     	endif
  2277  001534  0008               	tblrd		*
  2278  001536  50F5               	movf	tablat,w,c
  2279  001538  0A2A               	xorlw	42
  2280  00153A  A4D8               	btfss	status,2,c
  2281  00153C  EFA2  F00A         	goto	u9001
  2282  001540  EFA4  F00A         	goto	u9000
  2283  001544                     u9001:
  2284  001544  EFC1  F00A         	goto	l6657
  2285  001548                     u9000:
  2286  001548                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2289  001548  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  00154C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  001550  2ADE               	incf	postinc2,f,c
  2292  001552  0E00               	movlw	0
  2293  001554  22DD               	addwfc	postdec2,f,c
  2294                           
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2296  001556  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2297  00155A  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2298  00155E  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2299  001562  0E02               	movlw	2
  2300  001564  26DE               	addwf	postinc2,f,c
  2301  001566  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2302  00156A  0E00               	movlw	0
  2303  00156C  22DD               	addwfc	postdec2,f,c
  2304  00156E  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2305  001572  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2306  001576  CFDE F0F5          	movff	postinc2,_prec
  2307  00157A  CFDD F0F6          	movff	postdec2,_prec+1
  2308                           
  2309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2310  00157E  EF05  F00B         	goto	l6667
  2311  001582                     l6657:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2315  001582  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  001586  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  00158A  CFDE F00B          	movff	postinc2,atoi@s
  2318  00158E  CFDD F00C          	movff	postdec2,atoi@s+1
  2319  001592  EC03  F01A         	call	_atoi	;wreg free
  2320  001596  C00B  F0F5         	movff	?_atoi,_prec
  2321  00159A  C00C  F0F6         	movff	?_atoi+1,_prec+1
  2322                           
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2324  00159E  EFD8  F00A         	goto	l6661
  2325  0015A2                     l6659:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2329  0015A2  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2330  0015A6  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2331  0015AA  2ADE               	incf	postinc2,f,c
  2332  0015AC  0E00               	movlw	0
  2333  0015AE  22DD               	addwfc	postdec2,f,c
  2334  0015B0                     l6661:
  2335  0015B0  0ED0               	movlw	208
  2336  0015B2  0100               	movlb	0	; () banked
  2337  0015B4  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2338  0015B6  0EFF               	movlw	255
  2339  0015B8  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2340  0015BA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  0015BE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  0015C2  CFDE FFF6          	movff	postinc2,tblptrl
  2343  0015C6  CFDD FFF7          	movff	postdec2,tblptrh
  2344  0015CA                     	if	0	;tblptru may be non-zero
  2345  0015CA                     	endif
  2346  0015CA                     	if	0	;tblptru may be non-zero
  2347  0015CA                     	endif
  2348  0015CA  0008               	tblrd		*
  2349  0015CC  50F5               	movf	tablat,w,c
  2350  0015CE  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2351  0015D0  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2352  0015D2  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2353  0015D4  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2354  0015D6  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2355  0015D8  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2356  0015DA  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2357  0015DC  E10A               	bnz	u9010
  2358  0015DE  0E0A               	movlw	10
  2359  0015E0  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2360  0015E2  A0D8               	btfss	status,0,c
  2361  0015E4  EFF6  F00A         	goto	u9011
  2362  0015E8  EFF9  F00A         	goto	u9010
  2363  0015EC                     u9011:
  2364  0015EC  0E01               	movlw	1
  2365  0015EE  EFFA  F00A         	goto	u9020
  2366  0015F2                     u9010:
  2367  0015F2  0E00               	movlw	0
  2368  0015F4                     u9020:
  2369  0015F4  6FC8               	movwf	_vfpfcnvrt$514& (0+255),b
  2370  0015F6  6BC9               	clrf	(_vfpfcnvrt$514+1)& (0+255),b
  2371  0015F8                     
  2372                           ; BSR set to: 0
  2373  0015F8  51C8               	movf	_vfpfcnvrt$514& (0+255),w,b
  2374  0015FA  11C9               	iorwf	(_vfpfcnvrt$514+1)& (0+255),w,b
  2375  0015FC  A4D8               	btfss	status,2,c
  2376  0015FE  EF03  F00B         	goto	u9031
  2377  001602  EF05  F00B         	goto	u9030
  2378  001606                     u9031:
  2379  001606  EFD1  F00A         	goto	l6659
  2380  00160A                     u9030:
  2381  00160A                     l6667:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2385  00160A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2386  00160E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2387  001612  CFDE FFF6          	movff	postinc2,tblptrl
  2388  001616  CFDD FFF7          	movff	postdec2,tblptrh
  2389  00161A                     	if	0	;tblptru may be non-zero
  2390  00161A                     	endif
  2391  00161A                     	if	0	;tblptru may be non-zero
  2392  00161A                     	endif
  2393  00161A  0008               	tblrd		*
  2394  00161C  50F5               	movf	tablat,w,c
  2395  00161E  6E0A               	movwf	tolower@c^0,c
  2396  001620  6A0B               	clrf	(tolower@c+1)^0,c
  2397  001622  EC5A  F024         	call	_tolower	;wreg free
  2398  001626  500A               	movf	?_tolower^0,w,c
  2399  001628  0100               	movlb	0	; () banked
  2400  00162A  6FD0               	movwf	vfpfcnvrt@ct& (0+255),b
  2401  00162C                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2404  00162C  51D0               	movf	vfpfcnvrt@ct& (0+255),w,b
  2405  00162E  B4D8               	btfsc	status,2,c
  2406  001630  EF1C  F00B         	goto	u9041
  2407  001634  EF1E  F00B         	goto	u9040
  2408  001638                     u9041:
  2409  001638  EF58  F00B         	goto	l6677
  2410  00163C                     u9040:
  2411  00163C                     
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2414  00163C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2415  001640  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2416  001644  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  2417  001648  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  2418  00164C  0E01               	movlw	1
  2419  00164E  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2420  001650  0E00               	movlw	0
  2421  001652  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2422  001654  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2423  001658  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2424  00165C                     	if	0	;tblptru may be non-zero
  2425  00165C                     	endif
  2426  00165C                     	if	0	;tblptru may be non-zero
  2427  00165C                     	endif
  2428  00165C  0008               	tblrd		*
  2429  00165E  50F5               	movf	tablat,w,c
  2430  001660  6E0A               	movwf	tolower@c^0,c
  2431  001662  6A0B               	clrf	(tolower@c+1)^0,c
  2432  001664  EC5A  F024         	call	_tolower	;wreg free
  2433  001668  500A               	movf	?_tolower^0,w,c
  2434  00166A  0100               	movlb	0	; () banked
  2435  00166C  6FD1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2436  00166E                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2439  00166E  51D1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2440  001670  B4D8               	btfsc	status,2,c
  2441  001672  EF3D  F00B         	goto	u9051
  2442  001676  EF3F  F00B         	goto	u9050
  2443  00167A                     u9051:
  2444  00167A  EF58  F00B         	goto	l6677
  2445  00167E                     u9050:
  2446  00167E                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2449  00167E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  001682  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  001686  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  2452  00168A  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  2453  00168E  0E02               	movlw	2
  2454  001690  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2455  001692  0E00               	movlw	0
  2456  001694  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2457  001696  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2458  00169A  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2459  00169E                     	if	0	;tblptru may be non-zero
  2460  00169E                     	endif
  2461  00169E                     	if	0	;tblptru may be non-zero
  2462  00169E                     	endif
  2463  00169E  0008               	tblrd		*
  2464  0016A0  50F5               	movf	tablat,w,c
  2465  0016A2  6E0A               	movwf	tolower@c^0,c
  2466  0016A4  6A0B               	clrf	(tolower@c+1)^0,c
  2467  0016A6  EC5A  F024         	call	_tolower	;wreg free
  2468  0016AA  500A               	movf	?_tolower^0,w,c
  2469  0016AC  0100               	movlb	0	; () banked
  2470  0016AE  6FD2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2471  0016B0                     l6677:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2475  0016B0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2476  0016B4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2477  0016B8  CFDE FFF6          	movff	postinc2,tblptrl
  2478  0016BC  CFDD FFF7          	movff	postdec2,tblptrh
  2479  0016C0                     	if	0	;tblptru may be non-zero
  2480  0016C0                     	endif
  2481  0016C0                     	if	0	;tblptru may be non-zero
  2482  0016C0                     	endif
  2483  0016C0  0008               	tblrd		*
  2484  0016C2  50F5               	movf	tablat,w,c
  2485  0016C4  0A64               	xorlw	100
  2486  0016C6  B4D8               	btfsc	status,2,c
  2487  0016C8  EF68  F00B         	goto	u9061
  2488  0016CC  EF6A  F00B         	goto	u9060
  2489  0016D0                     u9061:
  2490  0016D0  EF7C  F00B         	goto	l6681
  2491  0016D4                     u9060:
  2492  0016D4                     
  2493                           ; BSR set to: 0
  2494  0016D4  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2495  0016D8  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2496  0016DC  CFDE FFF6          	movff	postinc2,tblptrl
  2497  0016E0  CFDD FFF7          	movff	postdec2,tblptrh
  2498  0016E4                     	if	0	;tblptru may be non-zero
  2499  0016E4                     	endif
  2500  0016E4                     	if	0	;tblptru may be non-zero
  2501  0016E4                     	endif
  2502  0016E4  0008               	tblrd		*
  2503  0016E6  50F5               	movf	tablat,w,c
  2504  0016E8  0A69               	xorlw	105
  2505  0016EA  A4D8               	btfss	status,2,c
  2506  0016EC  EF7A  F00B         	goto	u9071
  2507  0016F0  EF7C  F00B         	goto	u9070
  2508  0016F4                     u9071:
  2509  0016F4  EFBC  F00B         	goto	l6687
  2510  0016F8                     u9070:
  2511  0016F8                     l6681:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2515  0016F8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516  0016FC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517  001700  2ADE               	incf	postinc2,f,c
  2518  001702  0E00               	movlw	0
  2519  001704  22DD               	addwfc	postdec2,f,c
  2520                           
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2522  001706  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2523  00170A  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2524  00170E  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2525  001712  0E02               	movlw	2
  2526  001714  26DE               	addwf	postinc2,f,c
  2527  001716  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2528  00171A  0E00               	movlw	0
  2529  00171C  22DD               	addwfc	postdec2,f,c
  2530  00171E  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2531  001722  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2532  001726  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2533  00172A  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2534  00172E  0E00               	movlw	0
  2535  001730  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2536  001732  0EFF               	movlw	-1
  2537  001734  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2538  001736  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2539  001738  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2540  00173A  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2541  00173C  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2542  00173E  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2543  001740                     
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2546  001740  C0B4  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  2547  001744  C0B5  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2548  001748  C0BE  F021         	movff	vfpfcnvrt@ll,dtoa@d
  2549  00174C  C0BF  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2550  001750  C0C0  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2551  001754  C0C1  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2552  001758  C0C2  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2553  00175C  C0C3  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2554  001760  C0C4  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2555  001764  C0C5  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2556  001768  EC88  F017         	call	_dtoa	;wreg free
  2557  00176C  C01F  F0B4         	movff	?_dtoa,?_vfpfcnvrt
  2558  001770  C020  F0B5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2559  001774  EFEB  F00C         	goto	l469
  2560  001778                     l6687:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2564  001778  0E66               	movlw	102
  2565  00177A  19D0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2566  00177C  A4D8               	btfss	status,2,c
  2567  00177E  EFC3  F00B         	goto	u9081
  2568  001782  EFC5  F00B         	goto	u9080
  2569  001786                     u9081:
  2570  001786  EF05  F00C         	goto	l6699
  2571  00178A                     u9080:
  2572  00178A                     
  2573                           ; BSR set to: 0
  2574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2575  00178A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2576  00178E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2577  001792  CFDE FFF6          	movff	postinc2,tblptrl
  2578  001796  CFDD FFF7          	movff	postdec2,tblptrh
  2579  00179A                     	if	0	;tblptru may be non-zero
  2580  00179A                     	endif
  2581  00179A                     	if	0	;tblptru may be non-zero
  2582  00179A                     	endif
  2583  00179A  0008               	tblrd		*
  2584  00179C  CFF5 F0D3          	movff	tablat,vfpfcnvrt@c
  2585  0017A0                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2588  0017A0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589  0017A4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590  0017A8  2ADE               	incf	postinc2,f,c
  2591  0017AA  0E00               	movlw	0
  2592  0017AC  22DD               	addwfc	postdec2,f,c
  2593  0017AE                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2596  0017AE  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2597  0017B2  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2598  0017B6  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2599  0017BA  0E04               	movlw	4
  2600  0017BC  26DE               	addwf	postinc2,f,c
  2601  0017BE  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2602  0017C2  0E00               	movlw	0
  2603  0017C4  22DD               	addwfc	postdec2,f,c
  2604  0017C6  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2605  0017CA  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2606  0017CE  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  2607  0017D2  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  2608  0017D6  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  2609  0017DA  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  2610  0017DE                     l6695:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2614  0017DE  C0B4  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  2615  0017E2  C0B5  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2616  0017E6  C0CC  F072         	movff	vfpfcnvrt@f,efgtoa@f
  2617  0017EA  C0CD  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2618  0017EE  C0CE  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2619  0017F2  C0CF  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2620  0017F6  C0D3  F076         	movff	vfpfcnvrt@c,efgtoa@c
  2621  0017FA  EC1B  F004         	call	_efgtoa	;wreg free
  2622  0017FE  C070  F0B4         	movff	?_efgtoa,?_vfpfcnvrt
  2623  001802  C071  F0B5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2624  001806  EFEB  F00C         	goto	l469
  2625  00180A                     l6699:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2629  00180A  0ED0               	movlw	low vfpfcnvrt@ct
  2630  00180C  6E04               	movwf	strncmp@_l^0,c
  2631  00180E  0E00               	movlw	high vfpfcnvrt@ct
  2632  001810  6E05               	movwf	(strncmp@_l+1)^0,c
  2633  001812  0E32               	movlw	low STR_10
  2634  001814  6E06               	movwf	strncmp@_r^0,c
  2635  001816  0E08               	movlw	high STR_10
  2636  001818  6E07               	movwf	(strncmp@_r+1)^0,c
  2637  00181A  0E00               	movlw	0
  2638  00181C  6E09               	movwf	(strncmp@n+1)^0,c
  2639  00181E  0E02               	movlw	2
  2640  001820  6E08               	movwf	strncmp@n^0,c
  2641  001822  ECD6  F020         	call	_strncmp	;wreg free
  2642  001826  5004               	movf	?_strncmp^0,w,c
  2643  001828  1005               	iorwf	(?_strncmp+1)^0,w,c
  2644  00182A  A4D8               	btfss	status,2,c
  2645  00182C  EF1A  F00C         	goto	u9091
  2646  001830  EF1C  F00C         	goto	u9090
  2647  001834                     u9091:
  2648  001834  EF98  F00C         	goto	l6715
  2649  001838                     u9090:
  2650  001838                     
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2652  001838  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2653  00183C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2654  001840  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
  2655  001844  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
  2656  001848  0E01               	movlw	1
  2657  00184A  0100               	movlb	0	; () banked
  2658  00184C  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2659  00184E  0E00               	movlw	0
  2660  001850  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2661  001852  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2662  001856  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2663  00185A                     	if	0	;tblptru may be non-zero
  2664  00185A                     	endif
  2665  00185A                     	if	0	;tblptru may be non-zero
  2666  00185A                     	endif
  2667  00185A  0008               	tblrd		*
  2668  00185C  CFF5 F0D3          	movff	tablat,vfpfcnvrt@c
  2669  001860  0EBF               	movlw	191
  2670  001862  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2671  001864  0EFF               	movlw	255
  2672  001866  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2673  001868  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2674  00186C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2675  001870  CFDE FFF6          	movff	postinc2,tblptrl
  2676  001874  CFDD FFF7          	movff	postdec2,tblptrh
  2677  001878                     	if	0	;tblptru may be non-zero
  2678  001878                     	endif
  2679  001878                     	if	0	;tblptru may be non-zero
  2680  001878                     	endif
  2681  001878  0008               	tblrd		*
  2682  00187A  50F5               	movf	tablat,w,c
  2683  00187C  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2684  00187E  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2685  001880  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2686  001882  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2687  001884  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2688  001886  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2689  001888  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2690  00188A  E10A               	bnz	u9100
  2691  00188C  0E1A               	movlw	26
  2692  00188E  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2693  001890  A0D8               	btfss	status,0,c
  2694  001892  EF4D  F00C         	goto	u9101
  2695  001896  EF50  F00C         	goto	u9100
  2696  00189A                     u9101:
  2697  00189A  0E01               	movlw	1
  2698  00189C  EF51  F00C         	goto	u9110
  2699  0018A0                     u9100:
  2700  0018A0  0E00               	movlw	0
  2701  0018A2                     u9110:
  2702  0018A2  6FCA               	movwf	_vfpfcnvrt$519& (0+255),b
  2703  0018A4  6BCB               	clrf	(_vfpfcnvrt$519+1)& (0+255),b
  2704  0018A6                     
  2705                           ; BSR set to: 0
  2706  0018A6  51CA               	movf	_vfpfcnvrt$519& (0+255),w,b
  2707  0018A8  11CB               	iorwf	(_vfpfcnvrt$519+1)& (0+255),w,b
  2708  0018AA  B4D8               	btfsc	status,2,c
  2709  0018AC  EF5A  F00C         	goto	u9121
  2710  0018B0  EF5C  F00C         	goto	u9120
  2711  0018B4                     u9121:
  2712  0018B4  EF76  F00C         	goto	l6709
  2713  0018B8                     u9120:
  2714  0018B8                     
  2715                           ; BSR set to: 0
  2716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2717  0018B8  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2718  0018BC  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2719  0018C0  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2720  0018C4  0E04               	movlw	4
  2721  0018C6  26DE               	addwf	postinc2,f,c
  2722  0018C8  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2723  0018CC  0E00               	movlw	0
  2724  0018CE  22DD               	addwfc	postdec2,f,c
  2725  0018D0  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2726  0018D4  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2727  0018D8  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  2728  0018DC  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  2729  0018E0  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  2730  0018E4  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  2731                           
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2733  0018E8  EF8E  F00C         	goto	l477
  2734  0018EC                     l6709:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2738  0018EC  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2739  0018F0  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2740  0018F4  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2741  0018F8  0E04               	movlw	4
  2742  0018FA  26DE               	addwf	postinc2,f,c
  2743  0018FC  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2744  001900  0E00               	movlw	0
  2745  001902  22DD               	addwfc	postdec2,f,c
  2746  001904  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2747  001908  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2748  00190C  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  2749  001910  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  2750  001914  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  2751  001918  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  2752  00191C                     l477:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2756  00191C  0E02               	movlw	2
  2757  00191E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2758  001922  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2759  001926  26DE               	addwf	postinc2,f,c
  2760  001928  0E00               	movlw	0
  2761  00192A  22DD               	addwfc	postdec2,f,c
  2762  00192C  EFEF  F00B         	goto	l6695
  2763  001930                     l6715:
  2764                           
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2766  001930  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2767  001934  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2768  001938  CFDE FFF6          	movff	postinc2,tblptrl
  2769  00193C  CFDD FFF7          	movff	postdec2,tblptrh
  2770  001940                     	if	0	;tblptru may be non-zero
  2771  001940                     	endif
  2772  001940                     	if	0	;tblptru may be non-zero
  2773  001940                     	endif
  2774  001940  0008               	tblrd		*
  2775  001942  50F5               	movf	tablat,w,c
  2776  001944  0A25               	xorlw	37
  2777  001946  A4D8               	btfss	status,2,c
  2778  001948  EFA8  F00C         	goto	u9131
  2779  00194C  EFAA  F00C         	goto	u9130
  2780  001950                     u9131:
  2781  001950  EFC2  F00C         	goto	l6725
  2782  001954                     u9130:
  2783  001954                     
  2784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2785  001954  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  001958  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  00195C  2ADE               	incf	postinc2,f,c
  2788  00195E  0E00               	movlw	0
  2789  001960  22DD               	addwfc	postdec2,f,c
  2790  001962                     
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2792  001962  0E00               	movlw	0
  2793  001964  6E05               	movwf	(fputc@c+1)^0,c
  2794  001966  0E25               	movlw	37
  2795  001968  6E04               	movwf	fputc@c^0,c
  2796  00196A  C0B4  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2797  00196E  C0B5  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2798  001972  EC41  F021         	call	_fputc	;wreg free
  2799  001976                     l6721:
  2800                           
  2801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2802  001976  0E00               	movlw	0
  2803  001978  0100               	movlb	0	; () banked
  2804  00197A  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2805  00197C  0E01               	movlw	1
  2806  00197E  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  2807  001980  EFEB  F00C         	goto	l469
  2808  001984                     l6725:
  2809                           
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2811  001984  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812  001988  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813  00198C  2ADE               	incf	postinc2,f,c
  2814  00198E  0E00               	movlw	0
  2815  001990  22DD               	addwfc	postdec2,f,c
  2816  001992                     
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2818  001992  0E00               	movlw	0
  2819  001994  0100               	movlb	0	; () banked
  2820  001996  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2821  001998  0E00               	movlw	0
  2822  00199A  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  2823  00199C  EFEB  F00C         	goto	l469
  2824  0019A0                     l6731:
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2827  0019A0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828  0019A4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829  0019A8  CFDE FFF6          	movff	postinc2,tblptrl
  2830  0019AC  CFDD FFF7          	movff	postdec2,tblptrh
  2831  0019B0                     	if	0	;tblptru may be non-zero
  2832  0019B0                     	endif
  2833  0019B0                     	if	0	;tblptru may be non-zero
  2834  0019B0                     	endif
  2835  0019B0  0008               	tblrd		*
  2836  0019B2  50F5               	movf	tablat,w,c
  2837  0019B4  6E04               	movwf	fputc@c^0,c
  2838  0019B6  6A05               	clrf	(fputc@c+1)^0,c
  2839  0019B8  C0B4  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2840  0019BC  C0B5  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2841  0019C0  EC41  F021         	call	_fputc	;wreg free
  2842  0019C4                     
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2844  0019C4  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845  0019C8  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846  0019CC  2ADE               	incf	postinc2,f,c
  2847  0019CE  0E00               	movlw	0
  2848  0019D0  22DD               	addwfc	postdec2,f,c
  2849  0019D2  EFBB  F00C         	goto	l6721
  2850  0019D6                     l469:
  2851  0019D6  0012               	return		;funcret
  2852  0019D8                     __end_of_vfpfcnvrt:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function _strncmp *****************
  2856 ;; Defined at:
  2857 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2860 ;;		 -> vfpfcnvrt@ct(3), 
  2861 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2862 ;;		 -> STR_12(3), 
  2863 ;;  n               2    7[COMRAM] unsigned int 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2866 ;;		 -> STR_12(3), 
  2867 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2868 ;;		 -> vfpfcnvrt@ct(3), 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2    3[COMRAM] int 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2878 ;;      Params:         6       0       0       0       0       0       0       0       0
  2879 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2881 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2882 ;;Total ram usage:       11 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    2
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_vfpfcnvrt
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text8
  2893  0041AC                     __ptext8:
  2894                           	opt callstack 0
  2895  0041AC                     _strncmp:
  2896                           	opt callstack 25
  2897  0041AC  C004  F00B         	movff	strncmp@_l,strncmp@l
  2898  0041B0  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2899  0041B4  C006  F00D         	movff	strncmp@_r,strncmp@r
  2900  0041B8  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2901  0041BC  0608               	decf	strncmp@n^0,f,c
  2902  0041BE  A0D8               	btfss	status,0,c
  2903  0041C0  0609               	decf	(strncmp@n+1)^0,f,c
  2904  0041C2  2808               	incf	strncmp@n^0,w,c
  2905  0041C4  E106               	bnz	u8871
  2906  0041C6  2809               	incf	(strncmp@n+1)^0,w,c
  2907  0041C8  A4D8               	btfss	status,2,c
  2908  0041CA  EFE9  F020         	goto	u8871
  2909  0041CE  EFEB  F020         	goto	u8870
  2910  0041D2                     u8871:
  2911  0041D2  EFF8  F020         	goto	l6565
  2912  0041D6                     u8870:
  2913  0041D6  0E00               	movlw	0
  2914  0041D8  6E05               	movwf	(?_strncmp+1)^0,c
  2915  0041DA  0E00               	movlw	0
  2916  0041DC  6E04               	movwf	?_strncmp^0,c
  2917  0041DE  EF40  F021         	goto	l1348
  2918  0041E2                     l6563:
  2919  0041E2  4A0B               	infsnz	strncmp@l^0,f,c
  2920  0041E4  2A0C               	incf	(strncmp@l+1)^0,f,c
  2921  0041E6  4A0D               	infsnz	strncmp@r^0,f,c
  2922  0041E8  2A0E               	incf	(strncmp@r+1)^0,f,c
  2923  0041EA  0608               	decf	strncmp@n^0,f,c
  2924  0041EC  A0D8               	btfss	status,0,c
  2925  0041EE  0609               	decf	(strncmp@n+1)^0,f,c
  2926  0041F0                     l6565:
  2927  0041F0  C00B  FFD9         	movff	strncmp@l,fsr2l
  2928  0041F4  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2929  0041F8  50DF               	movf	indf2,w,c
  2930  0041FA  B4D8               	btfsc	status,2,c
  2931  0041FC  EF02  F021         	goto	u8881
  2932  004200  EF04  F021         	goto	u8880
  2933  004204                     u8881:
  2934  004204  EF2F  F021         	goto	l6573
  2935  004208                     u8880:
  2936  004208  C00D  FFF6         	movff	strncmp@r,tblptrl
  2937  00420C  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2938  004210                     	if	0	;tblptru may be non-zero
  2939  004210                     	endif
  2940  004210                     	if	0	;tblptru may be non-zero
  2941  004210                     	endif
  2942  004210  0008               	tblrd		*
  2943  004212  50F5               	movf	tablat,w,c
  2944  004214  0900               	iorlw	0
  2945  004216  B4D8               	btfsc	status,2,c
  2946  004218  EF10  F021         	goto	u8891
  2947  00421C  EF12  F021         	goto	u8890
  2948  004220                     u8891:
  2949  004220  EF2F  F021         	goto	l6573
  2950  004224                     u8890:
  2951  004224  5008               	movf	strncmp@n^0,w,c
  2952  004226  1009               	iorwf	(strncmp@n+1)^0,w,c
  2953  004228  B4D8               	btfsc	status,2,c
  2954  00422A  EF19  F021         	goto	u8901
  2955  00422E  EF1B  F021         	goto	u8900
  2956  004232                     u8901:
  2957  004232  EF2F  F021         	goto	l6573
  2958  004236                     u8900:
  2959  004236  C00B  FFD9         	movff	strncmp@l,fsr2l
  2960  00423A  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2961  00423E  50DF               	movf	indf2,w,c
  2962  004240  6E0A               	movwf	??_strncmp^0,c
  2963  004242  C00D  FFF6         	movff	strncmp@r,tblptrl
  2964  004246  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2965  00424A                     	if	0	;tblptru may be non-zero
  2966  00424A                     	endif
  2967  00424A                     	if	0	;tblptru may be non-zero
  2968  00424A                     	endif
  2969  00424A  0008               	tblrd		*
  2970  00424C  50F5               	movf	tablat,w,c
  2971  00424E  180A               	xorwf	??_strncmp^0,w,c
  2972  004250  B4D8               	btfsc	status,2,c
  2973  004252  EF2D  F021         	goto	u8911
  2974  004256  EF2F  F021         	goto	u8910
  2975  00425A                     u8911:
  2976  00425A  EFF1  F020         	goto	l6563
  2977  00425E                     u8910:
  2978  00425E                     l6573:
  2979  00425E  C00B  FFD9         	movff	strncmp@l,fsr2l
  2980  004262  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2981  004266  50DF               	movf	indf2,w,c
  2982  004268  6E0A               	movwf	??_strncmp^0,c
  2983  00426A  C00D  FFF6         	movff	strncmp@r,tblptrl
  2984  00426E  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2985  004272                     	if	0	;tblptru may be non-zero
  2986  004272                     	endif
  2987  004272                     	if	0	;tblptru may be non-zero
  2988  004272                     	endif
  2989  004272  0008               	tblrd		*
  2990  004274  50F5               	movf	tablat,w,c
  2991  004276  5C0A               	subwf	??_strncmp^0,w,c
  2992  004278  6E04               	movwf	?_strncmp^0,c
  2993  00427A  6A05               	clrf	(?_strncmp+1)^0,c
  2994  00427C  A0D8               	btfss	status,0,c
  2995  00427E  0605               	decf	(?_strncmp+1)^0,f,c
  2996  004280                     l1348:
  2997  004280  0012               	return		;funcret
  2998  004282                     __end_of_strncmp:
  2999                           	opt callstack 0
  3000                           
  3001 ;; *************** function _efgtoa *****************
  3002 ;; Defined at:
  3003 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3006 ;;		 -> sprintf@f(6), 
  3007 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  3008 ;;  c               1   22[BANK0 ] unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  u               4   80[BANK0 ] unsigned char 
  3011 ;;  g               4   72[BANK0 ] unsigned char 
  3012 ;;  l               4   66[BANK0 ] unsigned char 
  3013 ;;  h               4   62[BANK0 ] unsigned char 
  3014 ;;  ou              4   28[BANK0 ] unsigned char 
  3015 ;;  n               2   78[BANK0 ] int 
  3016 ;;  e               2   76[BANK0 ] int 
  3017 ;;  i               2   70[BANK0 ] int 
  3018 ;;  w               2   59[BANK0 ] int 
  3019 ;;  p               2   56[BANK0 ] int 
  3020 ;;  sign            2   54[BANK0 ] int 
  3021 ;;  d               2   52[BANK0 ] int 
  3022 ;;  ne              2   50[BANK0 ] int 
  3023 ;;  m               2   48[BANK0 ] int 
  3024 ;;  pp              2   46[BANK0 ] int 
  3025 ;;  t               2   44[BANK0 ] int 
  3026 ;;  mode            1   61[BANK0 ] unsigned char 
  3027 ;;  nmode           1   58[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2   16[BANK0 ] int 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         0       7       0       0       0       0       0       0       0
  3038 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3039 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3040 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3041 ;;Total ram usage:       68 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    6
  3044 ;; This function calls:
  3045 ;;		___awdiv
  3046 ;;		___awmod
  3047 ;;		___fladd
  3048 ;;		___fldiv
  3049 ;;		___fleq
  3050 ;;		___flge
  3051 ;;		___flmul
  3052 ;;		___flneg
  3053 ;;		___flsub
  3054 ;;		___fltol
  3055 ;;		___fpclassifyf
  3056 ;;		_floorf
  3057 ;;		_isupper
  3058 ;;		_pad
  3059 ;;		_strcpy
  3060 ;;		_tolower
  3061 ;; This function is called by:
  3062 ;;		_vfpfcnvrt
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text9
  3067  000836                     __ptext9:
  3068                           	opt callstack 0
  3069  000836                     _efgtoa:
  3070                           	opt callstack 21
  3071  000836                     
  3072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3073  000836  0E00               	movlw	0
  3074  000838  0100               	movlb	0	; () banked
  3075  00083A  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3076  00083C  0E00               	movlw	0
  3077  00083E  6F96               	movwf	efgtoa@sign& (0+255),b
  3078  000840                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3081  000840  C072  F0A8         	movff	efgtoa@f,efgtoa@g
  3082  000844  C073  F0A9         	movff	efgtoa@f+1,efgtoa@g+1
  3083  000848  C074  F0AA         	movff	efgtoa@f+2,efgtoa@g+2
  3084  00084C  C075  F0AB         	movff	efgtoa@f+3,efgtoa@g+3
  3085  000850                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3088  000850  BFAB               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3089  000852  EF2F  F004         	goto	u8350
  3090  000856  EF2D  F004         	goto	u8351
  3091  00085A                     u8351:
  3092  00085A  EF45  F004         	goto	l6269
  3093  00085E                     u8350:
  3094  00085E                     
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3097  00085E  0E00               	movlw	0
  3098  000860  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  3099  000862  0E01               	movlw	1
  3100  000864  6F96               	movwf	efgtoa@sign& (0+255),b
  3101  000866                     
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3104  000866  C0A8  F004         	movff	efgtoa@g,___flneg@f1
  3105  00086A  C0A9  F005         	movff	efgtoa@g+1,___flneg@f1+1
  3106  00086E  C0AA  F006         	movff	efgtoa@g+2,___flneg@f1+2
  3107  000872  C0AB  F007         	movff	efgtoa@g+3,___flneg@f1+3
  3108  000876  EC06  F026         	call	___flneg	;wreg free
  3109  00087A  C004  F0A8         	movff	?___flneg,efgtoa@g
  3110  00087E  C005  F0A9         	movff	?___flneg+1,efgtoa@g+1
  3111  000882  C006  F0AA         	movff	?___flneg+2,efgtoa@g+2
  3112  000886  C007  F0AB         	movff	?___flneg+3,efgtoa@g+3
  3113  00088A                     l6269:
  3114                           
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3116  00088A  0E00               	movlw	0
  3117  00088C  0100               	movlb	0	; () banked
  3118  00088E  6FAF               	movwf	(efgtoa@n+1)& (0+255),b
  3119  000890  0E00               	movlw	0
  3120  000892  6FAE               	movwf	efgtoa@n& (0+255),b
  3121  000894                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3124  000894  C0F3  F09B         	movff	_width,efgtoa@w
  3125  000898  C0F4  F09C         	movff	_width+1,efgtoa@w+1
  3126  00089C                     
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3129  00089C  5196               	movf	efgtoa@sign& (0+255),w,b
  3130  00089E  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3131  0008A0  A4D8               	btfss	status,2,c
  3132  0008A2  EF55  F004         	goto	u8361
  3133  0008A6  EF57  F004         	goto	u8360
  3134  0008AA                     u8361:
  3135  0008AA  EF5E  F004         	goto	l6277
  3136  0008AE                     u8360:
  3137  0008AE                     
  3138                           ; BSR set to: 0
  3139  0008AE  A45A               	btfss	_flags^0,2,c
  3140  0008B0  EF5C  F004         	goto	u8371
  3141  0008B4  EF5E  F004         	goto	u8370
  3142  0008B8                     u8371:
  3143  0008B8  EF78  F004         	goto	l6289
  3144  0008BC                     u8370:
  3145  0008BC                     l6277:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3149  0008BC  5196               	movf	efgtoa@sign& (0+255),w,b
  3150  0008BE  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3151  0008C0  A4D8               	btfss	status,2,c
  3152  0008C2  EF65  F004         	goto	u8381
  3153  0008C6  EF67  F004         	goto	u8380
  3154  0008CA                     u8381:
  3155  0008CA  EF6D  F004         	goto	l6281
  3156  0008CE                     u8380:
  3157  0008CE                     
  3158                           ; BSR set to: 0
  3159  0008CE  0E00               	movlw	0
  3160  0008D0  6F81               	movwf	(_efgtoa$489+1)& (0+255),b
  3161  0008D2  0E2B               	movlw	43
  3162  0008D4  6F80               	movwf	_efgtoa$489& (0+255),b
  3163  0008D6  EF71  F004         	goto	l6283
  3164  0008DA                     l6281:
  3165                           
  3166                           ; BSR set to: 0
  3167  0008DA  0E00               	movlw	0
  3168  0008DC  6F81               	movwf	(_efgtoa$489+1)& (0+255),b
  3169  0008DE  0E2D               	movlw	45
  3170  0008E0  6F80               	movwf	_efgtoa$489& (0+255),b
  3171  0008E2                     l6283:
  3172                           
  3173                           ; BSR set to: 0
  3174  0008E2  C080  F116         	movff	_efgtoa$489,_dbuf
  3175  0008E6                     
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3178  0008E6  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  3179  0008E8  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  3180  0008EA                     
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3183  0008EA  079B               	decf	efgtoa@w& (0+255),f,b
  3184  0008EC  A0D8               	btfss	status,0,c
  3185  0008EE  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  3186  0008F0                     l6289:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3190  0008F0  C0A8  F004         	movff	efgtoa@g,___fpclassifyf@x
  3191  0008F4  C0A9  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3192  0008F8  C0AA  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3193  0008FC  C0AB  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3194  000900  EC57  F020         	call	___fpclassifyf	;wreg free
  3195  000904  0404               	decf	?___fpclassifyf^0,w,c
  3196  000906  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3197  000908  A4D8               	btfss	status,2,c
  3198  00090A  EF89  F004         	goto	u8391
  3199  00090E  EF8B  F004         	goto	u8390
  3200  000912                     u8391:
  3201  000912  EFE2  F004         	goto	l6307
  3202  000916                     u8390:
  3203  000916  0EBF               	movlw	191
  3204  000918  0100               	movlb	0	; () banked
  3205  00091A  6F77               	movwf	??_efgtoa& (0+255),b
  3206  00091C  0EFF               	movlw	255
  3207  00091E  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3208  000920  5176               	movf	efgtoa@c& (0+255),w,b
  3209  000922  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3210  000924  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3211  000926  5177               	movf	??_efgtoa& (0+255),w,b
  3212  000928  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3213  00092A  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3214  00092C  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3215  00092E  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3216  000930  E10A               	bnz	u8400
  3217  000932  0E1A               	movlw	26
  3218  000934  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3219  000936  A0D8               	btfss	status,0,c
  3220  000938  EFA0  F004         	goto	u8401
  3221  00093C  EFA3  F004         	goto	u8400
  3222  000940                     u8401:
  3223  000940  0E01               	movlw	1
  3224  000942  EFA4  F004         	goto	u8410
  3225  000946                     u8400:
  3226  000946  0E00               	movlw	0
  3227  000948                     u8410:
  3228  000948  6F82               	movwf	_efgtoa$490& (0+255),b
  3229  00094A  6B83               	clrf	(_efgtoa$490+1)& (0+255),b
  3230  00094C                     
  3231                           ; BSR set to: 0
  3232  00094C  5182               	movf	_efgtoa$490& (0+255),w,b
  3233  00094E  1183               	iorwf	(_efgtoa$490+1)& (0+255),w,b
  3234  000950  B4D8               	btfsc	status,2,c
  3235  000952  EFAD  F004         	goto	u8421
  3236  000956  EFAF  F004         	goto	u8420
  3237  00095A                     u8421:
  3238  00095A  EFBD  F004         	goto	l6299
  3239  00095E                     u8420:
  3240  00095E                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3243  00095E  0E16               	movlw	low _dbuf
  3244  000960  25AE               	addwf	efgtoa@n& (0+255),w,b
  3245  000962  6E04               	movwf	strcpy@dest^0,c
  3246  000964  0E01               	movlw	high _dbuf
  3247  000966  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3248  000968  6E05               	movwf	(strcpy@dest+1)^0,c
  3249  00096A  0E22               	movlw	low STR_2
  3250  00096C  6E06               	movwf	strcpy@src^0,c
  3251  00096E  0E08               	movlw	high STR_2
  3252  000970  6E07               	movwf	(strcpy@src+1)^0,c
  3253  000972  EC8A  F024         	call	_strcpy	;wreg free
  3254                           
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3256  000976  EFC9  F004         	goto	l6301
  3257  00097A                     l6299:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3261  00097A  0E16               	movlw	low _dbuf
  3262  00097C  25AE               	addwf	efgtoa@n& (0+255),w,b
  3263  00097E  6E04               	movwf	strcpy@dest^0,c
  3264  000980  0E01               	movlw	high _dbuf
  3265  000982  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3266  000984  6E05               	movwf	(strcpy@dest+1)^0,c
  3267  000986  0E2A               	movlw	low STR_3
  3268  000988  6E06               	movwf	strcpy@src^0,c
  3269  00098A  0E08               	movlw	high STR_3
  3270  00098C  6E07               	movwf	(strcpy@src+1)^0,c
  3271  00098E  EC8A  F024         	call	_strcpy	;wreg free
  3272  000992                     l6301:
  3273                           
  3274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3275  000992  0100               	movlb	0	; () banked
  3276  000994  0EFD               	movlw	253
  3277  000996  279B               	addwf	efgtoa@w& (0+255),f,b
  3278  000998  0EFF               	movlw	255
  3279  00099A  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3280  00099C                     l6303:
  3281                           
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3283  00099C  C070  F014         	movff	efgtoa@fp,pad@fp
  3284  0009A0  C071  F015         	movff	efgtoa@fp+1,pad@fp+1
  3285  0009A4  0E16               	movlw	low _dbuf
  3286  0009A6  6E16               	movwf	pad@buf^0,c
  3287  0009A8  0E01               	movlw	high _dbuf
  3288  0009AA  6E17               	movwf	(pad@buf+1)^0,c
  3289  0009AC  C09B  F018         	movff	efgtoa@w,pad@p
  3290  0009B0  C09C  F019         	movff	efgtoa@w+1,pad@p+1
  3291  0009B4  EC08  F022         	call	_pad	;wreg free
  3292  0009B8  C014  F070         	movff	?_pad,?_efgtoa
  3293  0009BC  C015  F071         	movff	?_pad+1,?_efgtoa+1
  3294  0009C0  EFF3  F009         	goto	l365
  3295  0009C4                     l6307:
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3298  0009C4  C0A8  F004         	movff	efgtoa@g,___fpclassifyf@x
  3299  0009C8  C0A9  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3300  0009CC  C0AA  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3301  0009D0  C0AB  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3302  0009D4  EC57  F020         	call	___fpclassifyf	;wreg free
  3303  0009D8  5004               	movf	?___fpclassifyf^0,w,c
  3304  0009DA  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3305  0009DC  A4D8               	btfss	status,2,c
  3306  0009DE  EFF3  F004         	goto	u8431
  3307  0009E2  EFF5  F004         	goto	u8430
  3308  0009E6                     u8431:
  3309  0009E6  EF35  F005         	goto	l6325
  3310  0009EA                     u8430:
  3311  0009EA  0EBF               	movlw	191
  3312  0009EC  0100               	movlb	0	; () banked
  3313  0009EE  6F77               	movwf	??_efgtoa& (0+255),b
  3314  0009F0  0EFF               	movlw	255
  3315  0009F2  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3316  0009F4  5176               	movf	efgtoa@c& (0+255),w,b
  3317  0009F6  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3318  0009F8  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3319  0009FA  5177               	movf	??_efgtoa& (0+255),w,b
  3320  0009FC  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3321  0009FE  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3322  000A00  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3323  000A02  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3324  000A04  E10A               	bnz	u8440
  3325  000A06  0E1A               	movlw	26
  3326  000A08  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3327  000A0A  A0D8               	btfss	status,0,c
  3328  000A0C  EF0A  F005         	goto	u8441
  3329  000A10  EF0D  F005         	goto	u8440
  3330  000A14                     u8441:
  3331  000A14  0E01               	movlw	1
  3332  000A16  EF0E  F005         	goto	u8450
  3333  000A1A                     u8440:
  3334  000A1A  0E00               	movlw	0
  3335  000A1C                     u8450:
  3336  000A1C  6F84               	movwf	_efgtoa$494& (0+255),b
  3337  000A1E  6B85               	clrf	(_efgtoa$494+1)& (0+255),b
  3338  000A20                     
  3339                           ; BSR set to: 0
  3340  000A20  5184               	movf	_efgtoa$494& (0+255),w,b
  3341  000A22  1185               	iorwf	(_efgtoa$494+1)& (0+255),w,b
  3342  000A24  B4D8               	btfsc	status,2,c
  3343  000A26  EF17  F005         	goto	u8461
  3344  000A2A  EF19  F005         	goto	u8460
  3345  000A2E                     u8461:
  3346  000A2E  EF27  F005         	goto	l6317
  3347  000A32                     u8460:
  3348  000A32                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3351  000A32  0E16               	movlw	low _dbuf
  3352  000A34  25AE               	addwf	efgtoa@n& (0+255),w,b
  3353  000A36  6E04               	movwf	strcpy@dest^0,c
  3354  000A38  0E01               	movlw	high _dbuf
  3355  000A3A  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3356  000A3C  6E05               	movwf	(strcpy@dest+1)^0,c
  3357  000A3E  0E26               	movlw	low STR_6
  3358  000A40  6E06               	movwf	strcpy@src^0,c
  3359  000A42  0E08               	movlw	high STR_6
  3360  000A44  6E07               	movwf	(strcpy@src+1)^0,c
  3361  000A46  EC8A  F024         	call	_strcpy	;wreg free
  3362                           
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3364  000A4A  EFC9  F004         	goto	l6301
  3365  000A4E                     l6317:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3369  000A4E  0E16               	movlw	low _dbuf
  3370  000A50  25AE               	addwf	efgtoa@n& (0+255),w,b
  3371  000A52  6E04               	movwf	strcpy@dest^0,c
  3372  000A54  0E01               	movlw	high _dbuf
  3373  000A56  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3374  000A58  6E05               	movwf	(strcpy@dest+1)^0,c
  3375  000A5A  0E2E               	movlw	low STR_7
  3376  000A5C  6E06               	movwf	strcpy@src^0,c
  3377  000A5E  0E08               	movlw	high STR_7
  3378  000A60  6E07               	movwf	(strcpy@src+1)^0,c
  3379  000A62  EC8A  F024         	call	_strcpy	;wreg free
  3380  000A66  EFC9  F004         	goto	l6301
  3381  000A6A                     l6325:
  3382                           
  3383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3384  000A6A  0E00               	movlw	0
  3385  000A6C  0100               	movlb	0	; () banked
  3386  000A6E  6FB0               	movwf	efgtoa@u& (0+255),b
  3387  000A70  0E00               	movlw	0
  3388  000A72  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  3389  000A74  0E80               	movlw	128
  3390  000A76  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  3391  000A78  0E3F               	movlw	63
  3392  000A7A  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  3393                           
  3394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3395  000A7C  0E00               	movlw	0
  3396  000A7E  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  3397  000A80  0E00               	movlw	0
  3398  000A82  6FAC               	movwf	efgtoa@e& (0+255),b
  3399  000A84                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3402  000A84  C0A8  F004         	movff	efgtoa@g,___fleq@ff1
  3403  000A88  C0A9  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  3404  000A8C  C0AA  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  3405  000A90  C0AB  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  3406  000A94  0E00               	movlw	0
  3407  000A96  6E08               	movwf	___fleq@ff2^0,c
  3408  000A98  0E00               	movlw	0
  3409  000A9A  6E09               	movwf	(___fleq@ff2+1)^0,c
  3410  000A9C  0E00               	movlw	0
  3411  000A9E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  3412  000AA0  0E00               	movlw	0
  3413  000AA2  6E0B               	movwf	(___fleq@ff2+3)^0,c
  3414  000AA4  ECC1  F022         	call	___fleq	;wreg free
  3415  000AA8  B0D8               	btfsc	status,0,c
  3416  000AAA  EF59  F005         	goto	u8471
  3417  000AAE  EF5B  F005         	goto	u8470
  3418  000AB2                     u8471:
  3419  000AB2  EFDE  F005         	goto	l6343
  3420  000AB6                     u8470:
  3421  000AB6  EF7A  F005         	goto	l6335
  3422  000ABA                     l6331:
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3425  000ABA  C0B0  F00C         	movff	efgtoa@u,___flmul@b
  3426  000ABE  C0B1  F00D         	movff	efgtoa@u+1,___flmul@b+1
  3427  000AC2  C0B2  F00E         	movff	efgtoa@u+2,___flmul@b+2
  3428  000AC6  C0B3  F00F         	movff	efgtoa@u+3,___flmul@b+3
  3429  000ACA  0E00               	movlw	0
  3430  000ACC  6E10               	movwf	___flmul@a^0,c
  3431  000ACE  0E00               	movlw	0
  3432  000AD0  6E11               	movwf	(___flmul@a+1)^0,c
  3433  000AD2  0E20               	movlw	32
  3434  000AD4  6E12               	movwf	(___flmul@a+2)^0,c
  3435  000AD6  0E41               	movlw	65
  3436  000AD8  6E13               	movwf	(___flmul@a+3)^0,c
  3437  000ADA  ECAD  F011         	call	___flmul	;wreg free
  3438  000ADE  C00C  F0B0         	movff	?___flmul,efgtoa@u
  3439  000AE2  C00D  F0B1         	movff	?___flmul+1,efgtoa@u+1
  3440  000AE6  C00E  F0B2         	movff	?___flmul+2,efgtoa@u+2
  3441  000AEA  C00F  F0B3         	movff	?___flmul+3,efgtoa@u+3
  3442  000AEE                     
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3444  000AEE  0100               	movlb	0	; () banked
  3445  000AF0  4BAC               	infsnz	efgtoa@e& (0+255),f,b
  3446  000AF2  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  3447  000AF4                     l6335:
  3448                           
  3449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3450  000AF4  C0A8  F025         	movff	efgtoa@g,___flge@ff1
  3451  000AF8  C0A9  F026         	movff	efgtoa@g+1,___flge@ff1+1
  3452  000AFC  C0AA  F027         	movff	efgtoa@g+2,___flge@ff1+2
  3453  000B00  C0AB  F028         	movff	efgtoa@g+3,___flge@ff1+3
  3454  000B04  0E00               	movlw	0
  3455  000B06  6E10               	movwf	___flmul@a^0,c
  3456  000B08  0E00               	movlw	0
  3457  000B0A  6E11               	movwf	(___flmul@a+1)^0,c
  3458  000B0C  0E20               	movlw	32
  3459  000B0E  6E12               	movwf	(___flmul@a+2)^0,c
  3460  000B10  0E41               	movlw	65
  3461  000B12  6E13               	movwf	(___flmul@a+3)^0,c
  3462  000B14  C0B0  F00C         	movff	efgtoa@u,___flmul@b
  3463  000B18  C0B1  F00D         	movff	efgtoa@u+1,___flmul@b+1
  3464  000B1C  C0B2  F00E         	movff	efgtoa@u+2,___flmul@b+2
  3465  000B20  C0B3  F00F         	movff	efgtoa@u+3,___flmul@b+3
  3466  000B24  ECAD  F011         	call	___flmul	;wreg free
  3467  000B28  C00C  F029         	movff	?___flmul,___flge@ff2
  3468  000B2C  C00D  F02A         	movff	?___flmul+1,___flge@ff2+1
  3469  000B30  C00E  F02B         	movff	?___flmul+2,___flge@ff2+2
  3470  000B34  C00F  F02C         	movff	?___flmul+3,___flge@ff2+3
  3471  000B38  ECD5  F01F         	call	___flge	;wreg free
  3472  000B3C  B0D8               	btfsc	status,0,c
  3473  000B3E  EFA3  F005         	goto	u8481
  3474  000B42  EFA5  F005         	goto	u8480
  3475  000B46                     u8481:
  3476  000B46  EF5D  F005         	goto	l6331
  3477  000B4A                     u8480:
  3478  000B4A  EFC5  F005         	goto	l6341
  3479  000B4E                     l6337:
  3480                           
  3481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3482  000B4E  C0B0  F03D         	movff	efgtoa@u,___fldiv@b
  3483  000B52  C0B1  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  3484  000B56  C0B2  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  3485  000B5A  C0B3  F040         	movff	efgtoa@u+3,___fldiv@b+3
  3486  000B5E  0E00               	movlw	0
  3487  000B60  6E41               	movwf	___fldiv@a^0,c
  3488  000B62  0E00               	movlw	0
  3489  000B64  6E42               	movwf	(___fldiv@a+1)^0,c
  3490  000B66  0E20               	movlw	32
  3491  000B68  6E43               	movwf	(___fldiv@a+2)^0,c
  3492  000B6A  0E41               	movlw	65
  3493  000B6C  6E44               	movwf	(___fldiv@a+3)^0,c
  3494  000B6E  ECBB  F015         	call	___fldiv	;wreg free
  3495  000B72  C03D  F0B0         	movff	?___fldiv,efgtoa@u
  3496  000B76  C03E  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  3497  000B7A  C03F  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  3498  000B7E  C040  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  3499  000B82                     
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3501  000B82  0100               	movlb	0	; () banked
  3502  000B84  07AC               	decf	efgtoa@e& (0+255),f,b
  3503  000B86  A0D8               	btfss	status,0,c
  3504  000B88  07AD               	decf	(efgtoa@e+1)& (0+255),f,b
  3505  000B8A                     l6341:
  3506                           
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3508  000B8A  C0A8  F025         	movff	efgtoa@g,___flge@ff1
  3509  000B8E  C0A9  F026         	movff	efgtoa@g+1,___flge@ff1+1
  3510  000B92  C0AA  F027         	movff	efgtoa@g+2,___flge@ff1+2
  3511  000B96  C0AB  F028         	movff	efgtoa@g+3,___flge@ff1+3
  3512  000B9A  C0B0  F029         	movff	efgtoa@u,___flge@ff2
  3513  000B9E  C0B1  F02A         	movff	efgtoa@u+1,___flge@ff2+1
  3514  000BA2  C0B2  F02B         	movff	efgtoa@u+2,___flge@ff2+2
  3515  000BA6  C0B3  F02C         	movff	efgtoa@u+3,___flge@ff2+3
  3516  000BAA  ECD5  F01F         	call	___flge	;wreg free
  3517  000BAE  A0D8               	btfss	status,0,c
  3518  000BB0  EFDC  F005         	goto	u8491
  3519  000BB4  EFDE  F005         	goto	u8490
  3520  000BB8                     u8491:
  3521  000BB8  EFA7  F005         	goto	l6337
  3522  000BBC                     u8490:
  3523  000BBC                     l6343:
  3524                           
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3526  000BBC  C076  F00A         	movff	efgtoa@c,tolower@c
  3527  000BC0  6A0B               	clrf	(tolower@c+1)^0,c
  3528  000BC2  EC5A  F024         	call	_tolower	;wreg free
  3529  000BC6  500A               	movf	?_tolower^0,w,c
  3530  000BC8  0100               	movlb	0	; () banked
  3531  000BCA  6F9D               	movwf	efgtoa@mode& (0+255),b
  3532  000BCC                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3535  000BCC  C09D  F09A         	movff	efgtoa@mode,efgtoa@nmode
  3536  000BD0                     
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3539  000BD0  0E67               	movlw	103
  3540  000BD2  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3541  000BD4  A4D8               	btfss	status,2,c
  3542  000BD6  EFEF  F005         	goto	u8501
  3543  000BDA  EFF1  F005         	goto	u8500
  3544  000BDE                     u8501:
  3545  000BDE  EF17  F006         	goto	l6357
  3546  000BE2                     u8500:
  3547  000BE2                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3550  000BE2  51F5               	movf	_prec& (0+255),w,b
  3551  000BE4  11F6               	iorwf	(_prec+1)& (0+255),w,b
  3552  000BE6  A4D8               	btfss	status,2,c
  3553  000BE8  EFF8  F005         	goto	u8511
  3554  000BEC  EFFA  F005         	goto	u8510
  3555  000BF0                     u8511:
  3556  000BF0  EFFE  F005         	goto	l6353
  3557  000BF4                     u8510:
  3558  000BF4                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3561  000BF4  0E00               	movlw	0
  3562  000BF6  6FF6               	movwf	(_prec+1)& (0+255),b
  3563  000BF8  0E01               	movlw	1
  3564  000BFA  6FF5               	movwf	_prec& (0+255),b
  3565  000BFC                     l6353:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3569  000BFC  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  3570  000BFE  EF0B  F006         	goto	u8520
  3571  000C02  51F6               	movf	(_prec+1)& (0+255),w,b
  3572  000C04  E106               	bnz	u8521
  3573  000C06  05F5               	decf	_prec& (0+255),w,b
  3574  000C08  B0D8               	btfsc	status,0,c
  3575  000C0A  EF09  F006         	goto	u8521
  3576  000C0E  EF0B  F006         	goto	u8520
  3577  000C12                     u8521:
  3578  000C12  EF11  F006         	goto	l383
  3579  000C16                     u8520:
  3580  000C16                     l6355:
  3581                           
  3582                           ; BSR set to: 0
  3583  000C16  0E00               	movlw	0
  3584  000C18  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  3585  000C1A  0E06               	movlw	6
  3586  000C1C  6F98               	movwf	efgtoa@p& (0+255),b
  3587  000C1E  EF20  F006         	goto	l6363
  3588  000C22                     l383:
  3589                           
  3590                           ; BSR set to: 0
  3591  000C22  C0F5  F098         	movff	_prec,efgtoa@p
  3592  000C26  C0F6  F099         	movff	_prec+1,efgtoa@p+1
  3593  000C2A  EF20  F006         	goto	l6363
  3594  000C2E                     l6357:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3598  000C2E  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  3599  000C30  EF1C  F006         	goto	u8531
  3600  000C34  EF1E  F006         	goto	u8530
  3601  000C38                     u8531:
  3602  000C38  EF0B  F006         	goto	l6355
  3603  000C3C                     u8530:
  3604  000C3C  EF11  F006         	goto	l383
  3605  000C40                     l6363:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3609  000C40  0E67               	movlw	103
  3610  000C42  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3611  000C44  A4D8               	btfss	status,2,c
  3612  000C46  EF27  F006         	goto	u8541
  3613  000C4A  EF29  F006         	goto	u8540
  3614  000C4E                     u8541:
  3615  000C4E  EF58  F006         	goto	l6373
  3616  000C52                     u8540:
  3617  000C52                     
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3620  000C52  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
  3621  000C54  EF37  F006         	goto	u8550
  3622  000C58  0EFC               	movlw	252
  3623  000C5A  5DAC               	subwf	efgtoa@e& (0+255),w,b
  3624  000C5C  0EFF               	movlw	255
  3625  000C5E  59AD               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3626  000C60  A0D8               	btfss	status,0,c
  3627  000C62  EF35  F006         	goto	u8551
  3628  000C66  EF37  F006         	goto	u8550
  3629  000C6A                     u8551:
  3630  000C6A  EF56  F006         	goto	l6371
  3631  000C6E                     u8550:
  3632  000C6E                     
  3633                           ; BSR set to: 0
  3634  000C6E  0EFF               	movlw	255
  3635  000C70  6F77               	movwf	??_efgtoa& (0+255),b
  3636  000C72  0EFF               	movlw	255
  3637  000C74  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3638  000C76  C098  F079         	movff	efgtoa@p,??_efgtoa+2
  3639  000C7A  C099  F07A         	movff	efgtoa@p+1,??_efgtoa+3
  3640  000C7E  5177               	movf	??_efgtoa& (0+255),w,b
  3641  000C80  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3642  000C82  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3643  000C84  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3644  000C86  51AC               	movf	efgtoa@e& (0+255),w,b
  3645  000C88  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3646  000C8A  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3647  000C8C  0A80               	xorlw	128
  3648  000C8E  6F7B               	movwf	(??_efgtoa+4)& (0+255),b
  3649  000C90  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  3650  000C92  0A80               	xorlw	128
  3651  000C94  597B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3652  000C96  A0D8               	btfss	status,0,c
  3653  000C98  EF50  F006         	goto	u8561
  3654  000C9C  EF52  F006         	goto	u8560
  3655  000CA0                     u8561:
  3656  000CA0  EF56  F006         	goto	l6371
  3657  000CA4                     u8560:
  3658  000CA4                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3661  000CA4  0E66               	movlw	102
  3662  000CA6  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3663                           
  3664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3665  000CA8  EF58  F006         	goto	l6373
  3666  000CAC                     l6371:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3670  000CAC  0E65               	movlw	101
  3671  000CAE  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3672  000CB0                     l6373:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3676  000CB0  C098  F090         	movff	efgtoa@p,efgtoa@m
  3677  000CB4  C099  F091         	movff	efgtoa@p+1,efgtoa@m+1
  3678  000CB8                     
  3679                           ; BSR set to: 0
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3681  000CB8  0E67               	movlw	103
  3682  000CBA  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3683  000CBC  A4D8               	btfss	status,2,c
  3684  000CBE  EF63  F006         	goto	u8571
  3685  000CC2  EF65  F006         	goto	u8570
  3686  000CC6                     u8571:
  3687  000CC6  EF75  F006         	goto	l6381
  3688  000CCA                     u8570:
  3689  000CCA                     
  3690                           ; BSR set to: 0
  3691  000CCA  0E66               	movlw	102
  3692  000CCC  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3693  000CCE  A4D8               	btfss	status,2,c
  3694  000CD0  EF6C  F006         	goto	u8581
  3695  000CD4  EF6E  F006         	goto	u8580
  3696  000CD8                     u8581:
  3697  000CD8  EF77  F006         	goto	l6383
  3698  000CDC                     u8580:
  3699  000CDC                     
  3700                           ; BSR set to: 0
  3701  000CDC  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3702  000CDE  EF75  F006         	goto	u8590
  3703  000CE2  EF73  F006         	goto	u8591
  3704  000CE6                     u8591:
  3705  000CE6  EF77  F006         	goto	l6383
  3706  000CEA                     u8590:
  3707  000CEA                     l6381:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3711  000CEA  4B90               	infsnz	efgtoa@m& (0+255),f,b
  3712  000CEC  2B91               	incf	(efgtoa@m+1)& (0+255),f,b
  3713  000CEE                     l6383:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3717  000CEE  0E66               	movlw	102
  3718  000CF0  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3719  000CF2  A4D8               	btfss	status,2,c
  3720  000CF4  EF7E  F006         	goto	u8601
  3721  000CF8  EF80  F006         	goto	u8600
  3722  000CFC                     u8601:
  3723  000CFC  EFA0  F006         	goto	l6393
  3724  000D00                     u8600:
  3725  000D00                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3728  000D00  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3729  000D02  EF87  F006         	goto	u8610
  3730  000D06  EF85  F006         	goto	u8611
  3731  000D0A                     u8611:
  3732  000D0A  EF93  F006         	goto	l6389
  3733  000D0E                     u8610:
  3734  000D0E                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3737  000D0E  0E00               	movlw	0
  3738  000D10  6FB0               	movwf	efgtoa@u& (0+255),b
  3739  000D12  0E00               	movlw	0
  3740  000D14  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
  3741  000D16  0E80               	movlw	128
  3742  000D18  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
  3743  000D1A  0E3F               	movlw	63
  3744  000D1C  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
  3745                           
  3746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3747  000D1E  0E00               	movlw	0
  3748  000D20  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
  3749  000D22  0E00               	movlw	0
  3750  000D24  6FAC               	movwf	efgtoa@e& (0+255),b
  3751  000D26                     l6389:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3755  000D26  0E67               	movlw	103
  3756  000D28  199D               	xorwf	efgtoa@mode& (0+255),w,b
  3757  000D2A  B4D8               	btfsc	status,2,c
  3758  000D2C  EF9A  F006         	goto	u8621
  3759  000D30  EF9C  F006         	goto	u8620
  3760  000D34                     u8621:
  3761  000D34  EFA0  F006         	goto	l6393
  3762  000D38                     u8620:
  3763  000D38                     
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3766  000D38  51AC               	movf	efgtoa@e& (0+255),w,b
  3767  000D3A  2790               	addwf	efgtoa@m& (0+255),f,b
  3768  000D3C  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
  3769  000D3E  2391               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3770  000D40                     l6393:
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3774  000D40  0E00               	movlw	0
  3775  000D42  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  3776  000D44  0E00               	movlw	0
  3777  000D46  6FA6               	movwf	efgtoa@i& (0+255),b
  3778  000D48                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3781  000D48  C0A8  F09E         	movff	efgtoa@g,efgtoa@h
  3782  000D4C  C0A9  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  3783  000D50  C0AA  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  3784  000D54  C0AB  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  3785  000D58                     
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3788  000D58  C0B0  F07C         	movff	efgtoa@u,efgtoa@ou
  3789  000D5C  C0B1  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3790  000D60  C0B2  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3791  000D64  C0B3  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3792                           
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3794  000D68  EF31  F007         	goto	l6407
  3795  000D6C                     l6399:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3799  000D6C  C09E  F03D         	movff	efgtoa@h,___fldiv@b
  3800  000D70  C09F  F03E         	movff	efgtoa@h+1,___fldiv@b+1
  3801  000D74  C0A0  F03F         	movff	efgtoa@h+2,___fldiv@b+2
  3802  000D78  C0A1  F040         	movff	efgtoa@h+3,___fldiv@b+3
  3803  000D7C  C0B0  F041         	movff	efgtoa@u,___fldiv@a
  3804  000D80  C0B1  F042         	movff	efgtoa@u+1,___fldiv@a+1
  3805  000D84  C0B2  F043         	movff	efgtoa@u+2,___fldiv@a+2
  3806  000D88  C0B3  F044         	movff	efgtoa@u+3,___fldiv@a+3
  3807  000D8C  ECBB  F015         	call	___fldiv	;wreg free
  3808  000D90  C03D  F056         	movff	?___fldiv,floorf@x
  3809  000D94  C03E  F057         	movff	?___fldiv+1,floorf@x+1
  3810  000D98  C03F  F058         	movff	?___fldiv+2,floorf@x+2
  3811  000D9C  C040  F059         	movff	?___fldiv+3,floorf@x+3
  3812  000DA0  ECF8  F018         	call	_floorf	;wreg free
  3813  000DA4  C056  F0A2         	movff	?_floorf,efgtoa@l
  3814  000DA8  C057  F0A3         	movff	?_floorf+1,efgtoa@l+1
  3815  000DAC  C058  F0A4         	movff	?_floorf+2,efgtoa@l+2
  3816  000DB0  C059  F0A5         	movff	?_floorf+3,efgtoa@l+3
  3817                           
  3818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3819  000DB4  C0A2  F004         	movff	efgtoa@l,___fltol@f1
  3820  000DB8  C0A3  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3821  000DBC  C0A4  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3822  000DC0  C0A5  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3823  000DC4  EC52  F01F         	call	___fltol	;wreg free
  3824  000DC8  C004  F094         	movff	?___fltol,efgtoa@d
  3825  000DCC  C005  F095         	movff	?___fltol+1,efgtoa@d+1
  3826  000DD0                     
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3828  000DD0  C09E  F035         	movff	efgtoa@h,___flsub@b
  3829  000DD4  C09F  F036         	movff	efgtoa@h+1,___flsub@b+1
  3830  000DD8  C0A0  F037         	movff	efgtoa@h+2,___flsub@b+2
  3831  000DDC  C0A1  F038         	movff	efgtoa@h+3,___flsub@b+3
  3832  000DE0  C0B0  F010         	movff	efgtoa@u,___flmul@a
  3833  000DE4  C0B1  F011         	movff	efgtoa@u+1,___flmul@a+1
  3834  000DE8  C0B2  F012         	movff	efgtoa@u+2,___flmul@a+2
  3835  000DEC  C0B3  F013         	movff	efgtoa@u+3,___flmul@a+3
  3836  000DF0  C0A2  F00C         	movff	efgtoa@l,___flmul@b
  3837  000DF4  C0A3  F00D         	movff	efgtoa@l+1,___flmul@b+1
  3838  000DF8  C0A4  F00E         	movff	efgtoa@l+2,___flmul@b+2
  3839  000DFC  C0A5  F00F         	movff	efgtoa@l+3,___flmul@b+3
  3840  000E00  ECAD  F011         	call	___flmul	;wreg free
  3841  000E04  C00C  F039         	movff	?___flmul,___flsub@a
  3842  000E08  C00D  F03A         	movff	?___flmul+1,___flsub@a+1
  3843  000E0C  C00E  F03B         	movff	?___flmul+2,___flsub@a+2
  3844  000E10  C00F  F03C         	movff	?___flmul+3,___flsub@a+3
  3845  000E14  EC0A  F025         	call	___flsub	;wreg free
  3846  000E18  C035  F09E         	movff	?___flsub,efgtoa@h
  3847  000E1C  C036  F09F         	movff	?___flsub+1,efgtoa@h+1
  3848  000E20  C037  F0A0         	movff	?___flsub+2,efgtoa@h+2
  3849  000E24  C038  F0A1         	movff	?___flsub+3,efgtoa@h+3
  3850  000E28                     
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3852  000E28  C0B0  F03D         	movff	efgtoa@u,___fldiv@b
  3853  000E2C  C0B1  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  3854  000E30  C0B2  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  3855  000E34  C0B3  F040         	movff	efgtoa@u+3,___fldiv@b+3
  3856  000E38  0E00               	movlw	0
  3857  000E3A  6E41               	movwf	___fldiv@a^0,c
  3858  000E3C  0E00               	movlw	0
  3859  000E3E  6E42               	movwf	(___fldiv@a+1)^0,c
  3860  000E40  0E20               	movlw	32
  3861  000E42  6E43               	movwf	(___fldiv@a+2)^0,c
  3862  000E44  0E41               	movlw	65
  3863  000E46  6E44               	movwf	(___fldiv@a+3)^0,c
  3864  000E48  ECBB  F015         	call	___fldiv	;wreg free
  3865  000E4C  C03D  F0B0         	movff	?___fldiv,efgtoa@u
  3866  000E50  C03E  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  3867  000E54  C03F  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  3868  000E58  C040  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  3869  000E5C                     
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3871  000E5C  0100               	movlb	0	; () banked
  3872  000E5E  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  3873  000E60  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  3874  000E62                     l6407:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3878  000E62  5190               	movf	efgtoa@m& (0+255),w,b
  3879  000E64  5DA6               	subwf	efgtoa@i& (0+255),w,b
  3880  000E66  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  3881  000E68  0A80               	xorlw	128
  3882  000E6A  6F77               	movwf	??_efgtoa& (0+255),b
  3883  000E6C  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  3884  000E6E  0A80               	xorlw	128
  3885  000E70  5977               	subwfb	??_efgtoa& (0+255),w,b
  3886  000E72  A0D8               	btfss	status,0,c
  3887  000E74  EF3E  F007         	goto	u8631
  3888  000E78  EF40  F007         	goto	u8630
  3889  000E7C                     u8631:
  3890  000E7C  EFB6  F006         	goto	l6399
  3891  000E80                     u8630:
  3892  000E80                     
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3895  000E80  C0B0  F00C         	movff	efgtoa@u,___flmul@b
  3896  000E84  C0B1  F00D         	movff	efgtoa@u+1,___flmul@b+1
  3897  000E88  C0B2  F00E         	movff	efgtoa@u+2,___flmul@b+2
  3898  000E8C  C0B3  F00F         	movff	efgtoa@u+3,___flmul@b+3
  3899  000E90  0E00               	movlw	0
  3900  000E92  6E10               	movwf	___flmul@a^0,c
  3901  000E94  0E00               	movlw	0
  3902  000E96  6E11               	movwf	(___flmul@a+1)^0,c
  3903  000E98  0EA0               	movlw	160
  3904  000E9A  6E12               	movwf	(___flmul@a+2)^0,c
  3905  000E9C  0E40               	movlw	64
  3906  000E9E  6E13               	movwf	(___flmul@a+3)^0,c
  3907  000EA0  ECAD  F011         	call	___flmul	;wreg free
  3908  000EA4  C00C  F0A2         	movff	?___flmul,efgtoa@l
  3909  000EA8  C00D  F0A3         	movff	?___flmul+1,efgtoa@l+1
  3910  000EAC  C00E  F0A4         	movff	?___flmul+2,efgtoa@l+2
  3911  000EB0  C00F  F0A5         	movff	?___flmul+3,efgtoa@l+3
  3912  000EB4                     
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3914  000EB4  C09E  F025         	movff	efgtoa@h,___flge@ff1
  3915  000EB8  C09F  F026         	movff	efgtoa@h+1,___flge@ff1+1
  3916  000EBC  C0A0  F027         	movff	efgtoa@h+2,___flge@ff1+2
  3917  000EC0  C0A1  F028         	movff	efgtoa@h+3,___flge@ff1+3
  3918  000EC4  C0A2  F029         	movff	efgtoa@l,___flge@ff2
  3919  000EC8  C0A3  F02A         	movff	efgtoa@l+1,___flge@ff2+1
  3920  000ECC  C0A4  F02B         	movff	efgtoa@l+2,___flge@ff2+2
  3921  000ED0  C0A5  F02C         	movff	efgtoa@l+3,___flge@ff2+3
  3922  000ED4  ECD5  F01F         	call	___flge	;wreg free
  3923  000ED8  B0D8               	btfsc	status,0,c
  3924  000EDA  EF71  F007         	goto	u8641
  3925  000EDE  EF73  F007         	goto	u8640
  3926  000EE2                     u8641:
  3927  000EE2  EF7E  F007         	goto	l6415
  3928  000EE6                     u8640:
  3929  000EE6                     
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3931  000EE6  0E00               	movlw	0
  3932  000EE8  0100               	movlb	0	; () banked
  3933  000EEA  6FA2               	movwf	efgtoa@l& (0+255),b
  3934  000EEC  0E00               	movlw	0
  3935  000EEE  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  3936  000EF0  0E00               	movlw	0
  3937  000EF2  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  3938  000EF4  0E00               	movlw	0
  3939  000EF6  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  3940                           
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3942  000EF8  EFA7  F007         	goto	l6421
  3943  000EFC                     l6415:
  3944                           
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3946  000EFC  C09E  F004         	movff	efgtoa@h,___fleq@ff1
  3947  000F00  C09F  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3948  000F04  C0A0  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3949  000F08  C0A1  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3950  000F0C  C0A2  F008         	movff	efgtoa@l,___fleq@ff2
  3951  000F10  C0A3  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3952  000F14  C0A4  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3953  000F18  C0A5  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3954  000F1C  ECC1  F022         	call	___fleq	;wreg free
  3955  000F20  A0D8               	btfss	status,0,c
  3956  000F22  EF95  F007         	goto	u8651
  3957  000F26  EF97  F007         	goto	u8650
  3958  000F2A                     u8651:
  3959  000F2A  EFA7  F007         	goto	l6421
  3960  000F2E                     u8650:
  3961  000F2E  0100               	movlb	0	; () banked
  3962  000F30  B194               	btfsc	efgtoa@d& (0+255),0,b
  3963  000F32  EF9D  F007         	goto	u8661
  3964  000F36  EF9F  F007         	goto	u8660
  3965  000F3A                     u8661:
  3966  000F3A  EFA7  F007         	goto	l6421
  3967  000F3E                     u8660:
  3968  000F3E                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3971  000F3E  0E00               	movlw	0
  3972  000F40  6FA2               	movwf	efgtoa@l& (0+255),b
  3973  000F42  0E00               	movlw	0
  3974  000F44  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  3975  000F46  0E00               	movlw	0
  3976  000F48  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  3977  000F4A  0E00               	movlw	0
  3978  000F4C  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  3979  000F4E                     l6421:
  3980                           
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3982  000F4E  C0A8  F025         	movff	efgtoa@g,___fladd@b
  3983  000F52  C0A9  F026         	movff	efgtoa@g+1,___fladd@b+1
  3984  000F56  C0AA  F027         	movff	efgtoa@g+2,___fladd@b+2
  3985  000F5A  C0AB  F028         	movff	efgtoa@g+3,___fladd@b+3
  3986  000F5E  C0A2  F029         	movff	efgtoa@l,___fladd@a
  3987  000F62  C0A3  F02A         	movff	efgtoa@l+1,___fladd@a+1
  3988  000F66  C0A4  F02B         	movff	efgtoa@l+2,___fladd@a+2
  3989  000F6A  C0A5  F02C         	movff	efgtoa@l+3,___fladd@a+3
  3990  000F6E  EC4D  F00F         	call	___fladd	;wreg free
  3991  000F72  C025  F09E         	movff	?___fladd,efgtoa@h
  3992  000F76  C026  F09F         	movff	?___fladd+1,efgtoa@h+1
  3993  000F7A  C027  F0A0         	movff	?___fladd+2,efgtoa@h+2
  3994  000F7E  C028  F0A1         	movff	?___fladd+3,efgtoa@h+3
  3995  000F82                     
  3996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3997  000F82  C07C  F0B0         	movff	efgtoa@ou,efgtoa@u
  3998  000F86  C07D  F0B1         	movff	efgtoa@ou+1,efgtoa@u+1
  3999  000F8A  C07E  F0B2         	movff	efgtoa@ou+2,efgtoa@u+2
  4000  000F8E  C07F  F0B3         	movff	efgtoa@ou+3,efgtoa@u+3
  4001  000F92                     
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4003  000F92  0E65               	movlw	101
  4004  000F94  0100               	movlb	0	; () banked
  4005  000F96  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4006  000F98  B4D8               	btfsc	status,2,c
  4007  000F9A  EFD1  F007         	goto	u8671
  4008  000F9E  EFD3  F007         	goto	u8670
  4009  000FA2                     u8671:
  4010  000FA2  EFD9  F007         	goto	l6429
  4011  000FA6                     u8670:
  4012  000FA6                     
  4013                           ; BSR set to: 0
  4014  000FA6  C0AC  F092         	movff	efgtoa@e,efgtoa@ne
  4015  000FAA  C0AD  F093         	movff	efgtoa@e+1,efgtoa@ne+1
  4016  000FAE  EFDD  F007         	goto	l409
  4017  000FB2                     l6429:
  4018                           
  4019                           ; BSR set to: 0
  4020  000FB2  0E00               	movlw	0
  4021  000FB4  6F93               	movwf	(efgtoa@ne+1)& (0+255),b
  4022  000FB6  0E00               	movlw	0
  4023  000FB8  6F92               	movwf	efgtoa@ne& (0+255),b
  4024  000FBA                     l409:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4028  000FBA  0E00               	movlw	0
  4029  000FBC  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  4030  000FBE  0E00               	movlw	0
  4031  000FC0  6F8E               	movwf	efgtoa@pp& (0+255),b
  4032                           
  4033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4034  000FC2  0E00               	movlw	0
  4035  000FC4  6F8D               	movwf	(efgtoa@t+1)& (0+255),b
  4036  000FC6  0E00               	movlw	0
  4037  000FC8  6F8C               	movwf	efgtoa@t& (0+255),b
  4038                           
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4040  000FCA  0E00               	movlw	0
  4041  000FCC  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  4042  000FCE  0E00               	movlw	0
  4043  000FD0  6FA6               	movwf	efgtoa@i& (0+255),b
  4044                           
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4046  000FD2  EFD9  F008         	goto	l6479
  4047  000FD6                     l6431:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4051  000FD6  C09E  F03D         	movff	efgtoa@h,___fldiv@b
  4052  000FDA  C09F  F03E         	movff	efgtoa@h+1,___fldiv@b+1
  4053  000FDE  C0A0  F03F         	movff	efgtoa@h+2,___fldiv@b+2
  4054  000FE2  C0A1  F040         	movff	efgtoa@h+3,___fldiv@b+3
  4055  000FE6  C0B0  F041         	movff	efgtoa@u,___fldiv@a
  4056  000FEA  C0B1  F042         	movff	efgtoa@u+1,___fldiv@a+1
  4057  000FEE  C0B2  F043         	movff	efgtoa@u+2,___fldiv@a+2
  4058  000FF2  C0B3  F044         	movff	efgtoa@u+3,___fldiv@a+3
  4059  000FF6  ECBB  F015         	call	___fldiv	;wreg free
  4060  000FFA  C03D  F056         	movff	?___fldiv,floorf@x
  4061  000FFE  C03E  F057         	movff	?___fldiv+1,floorf@x+1
  4062  001002  C03F  F058         	movff	?___fldiv+2,floorf@x+2
  4063  001006  C040  F059         	movff	?___fldiv+3,floorf@x+3
  4064  00100A  ECF8  F018         	call	_floorf	;wreg free
  4065  00100E  C056  F0A2         	movff	?_floorf,efgtoa@l
  4066  001012  C057  F0A3         	movff	?_floorf+1,efgtoa@l+1
  4067  001016  C058  F0A4         	movff	?_floorf+2,efgtoa@l+2
  4068  00101A  C059  F0A5         	movff	?_floorf+3,efgtoa@l+3
  4069                           
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4071  00101E  C0A2  F004         	movff	efgtoa@l,___fltol@f1
  4072  001022  C0A3  F005         	movff	efgtoa@l+1,___fltol@f1+1
  4073  001026  C0A4  F006         	movff	efgtoa@l+2,___fltol@f1+2
  4074  00102A  C0A5  F007         	movff	efgtoa@l+3,___fltol@f1+3
  4075  00102E  EC52  F01F         	call	___fltol	;wreg free
  4076  001032  C004  F094         	movff	?___fltol,efgtoa@d
  4077  001036  C005  F095         	movff	?___fltol+1,efgtoa@d+1
  4078  00103A                     
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4080  00103A  B85A               	btfsc	_flags^0,4,c
  4081  00103C  EF22  F008         	goto	u8681
  4082  001040  EF24  F008         	goto	u8680
  4083  001044                     u8681:
  4084  001044  EF42  F008         	goto	l6443
  4085  001048                     u8680:
  4086  001048  0100               	movlb	0	; () banked
  4087  00104A  5194               	movf	efgtoa@d& (0+255),w,b
  4088  00104C  1195               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4089  00104E  A4D8               	btfss	status,2,c
  4090  001050  EF2C  F008         	goto	u8691
  4091  001054  EF2E  F008         	goto	u8690
  4092  001058                     u8691:
  4093  001058  EF42  F008         	goto	l6443
  4094  00105C                     u8690:
  4095  00105C                     
  4096                           ; BSR set to: 0
  4097  00105C  0E67               	movlw	103
  4098  00105E  199D               	xorwf	efgtoa@mode& (0+255),w,b
  4099  001060  A4D8               	btfss	status,2,c
  4100  001062  EF35  F008         	goto	u8701
  4101  001066  EF37  F008         	goto	u8700
  4102  00106A                     u8701:
  4103  00106A  EF42  F008         	goto	l6443
  4104  00106E                     u8700:
  4105  00106E                     
  4106                           ; BSR set to: 0
  4107  00106E  BF93               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4108  001070  EF3E  F008         	goto	u8710
  4109  001074  EF3C  F008         	goto	u8711
  4110  001078                     u8711:
  4111  001078  EF42  F008         	goto	l6443
  4112  00107C                     u8710:
  4113  00107C                     
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4116  00107C  4B8C               	infsnz	efgtoa@t& (0+255),f,b
  4117  00107E  2B8D               	incf	(efgtoa@t+1)& (0+255),f,b
  4118                           
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4120  001080  EF8D  F008         	goto	l6471
  4121  001084                     l6443:
  4122                           
  4123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4124  001084  0100               	movlb	0	; () banked
  4125  001086  518E               	movf	efgtoa@pp& (0+255),w,b
  4126  001088  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4127  00108A  A4D8               	btfss	status,2,c
  4128  00108C  EF4A  F008         	goto	u8721
  4129  001090  EF4C  F008         	goto	u8720
  4130  001094                     u8721:
  4131  001094  EF76  F008         	goto	l6463
  4132  001098                     u8720:
  4133  001098                     
  4134                           ; BSR set to: 0
  4135  001098  BF93               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4136  00109A  EF53  F008         	goto	u8730
  4137  00109E  EF51  F008         	goto	u8731
  4138  0010A2                     u8731:
  4139  0010A2  EF76  F008         	goto	l6463
  4140  0010A6                     u8730:
  4141  0010A6                     
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4144  0010A6  0E16               	movlw	low _dbuf
  4145  0010A8  25AE               	addwf	efgtoa@n& (0+255),w,b
  4146  0010AA  6ED9               	movwf	fsr2l,c
  4147  0010AC  0E01               	movlw	high _dbuf
  4148  0010AE  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4149  0010B0  6EDA               	movwf	fsr2h,c
  4150  0010B2  0E2E               	movlw	46
  4151  0010B4  6EDF               	movwf	indf2,c
  4152  0010B6                     
  4153                           ; BSR set to: 0
  4154  0010B6  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  4155  0010B8  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  4156  0010BA                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4159  0010BA  079B               	decf	efgtoa@w& (0+255),f,b
  4160  0010BC  A0D8               	btfss	status,0,c
  4161  0010BE  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4162  0010C0                     
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4165  0010C0  0E00               	movlw	0
  4166  0010C2  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  4167  0010C4  0E01               	movlw	1
  4168  0010C6  6F8E               	movwf	efgtoa@pp& (0+255),b
  4169  0010C8  EF76  F008         	goto	l6463
  4170  0010CC                     l6455:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4174  0010CC  0E16               	movlw	low _dbuf
  4175  0010CE  25AE               	addwf	efgtoa@n& (0+255),w,b
  4176  0010D0  6ED9               	movwf	fsr2l,c
  4177  0010D2  0E01               	movlw	high _dbuf
  4178  0010D4  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4179  0010D6  6EDA               	movwf	fsr2h,c
  4180  0010D8  0E30               	movlw	48
  4181  0010DA  6EDF               	movwf	indf2,c
  4182  0010DC                     
  4183                           ; BSR set to: 0
  4184  0010DC  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  4185  0010DE  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  4186  0010E0                     
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4189  0010E0  079B               	decf	efgtoa@w& (0+255),f,b
  4190  0010E2  A0D8               	btfss	status,0,c
  4191  0010E4  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4192  0010E6                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4195  0010E6  078C               	decf	efgtoa@t& (0+255),f,b
  4196  0010E8  A0D8               	btfss	status,0,c
  4197  0010EA  078D               	decf	(efgtoa@t+1)& (0+255),f,b
  4198  0010EC                     l6463:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4202  0010EC  518C               	movf	efgtoa@t& (0+255),w,b
  4203  0010EE  118D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4204  0010F0  A4D8               	btfss	status,2,c
  4205  0010F2  EF7D  F008         	goto	u8741
  4206  0010F6  EF7F  F008         	goto	u8740
  4207  0010FA                     u8741:
  4208  0010FA  EF66  F008         	goto	l6455
  4209  0010FE                     u8740:
  4210  0010FE                     
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4213  0010FE  0E16               	movlw	low _dbuf
  4214  001100  25AE               	addwf	efgtoa@n& (0+255),w,b
  4215  001102  6ED9               	movwf	fsr2l,c
  4216  001104  0E01               	movlw	high _dbuf
  4217  001106  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4218  001108  6EDA               	movwf	fsr2h,c
  4219  00110A  5194               	movf	efgtoa@d& (0+255),w,b
  4220  00110C  0F30               	addlw	48
  4221  00110E  6EDF               	movwf	indf2,c
  4222  001110                     
  4223                           ; BSR set to: 0
  4224  001110  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  4225  001112  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  4226  001114                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4229  001114  079B               	decf	efgtoa@w& (0+255),f,b
  4230  001116  A0D8               	btfss	status,0,c
  4231  001118  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4232  00111A                     l6471:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4236  00111A  C09E  F035         	movff	efgtoa@h,___flsub@b
  4237  00111E  C09F  F036         	movff	efgtoa@h+1,___flsub@b+1
  4238  001122  C0A0  F037         	movff	efgtoa@h+2,___flsub@b+2
  4239  001126  C0A1  F038         	movff	efgtoa@h+3,___flsub@b+3
  4240  00112A  C0B0  F010         	movff	efgtoa@u,___flmul@a
  4241  00112E  C0B1  F011         	movff	efgtoa@u+1,___flmul@a+1
  4242  001132  C0B2  F012         	movff	efgtoa@u+2,___flmul@a+2
  4243  001136  C0B3  F013         	movff	efgtoa@u+3,___flmul@a+3
  4244  00113A  C0A2  F00C         	movff	efgtoa@l,___flmul@b
  4245  00113E  C0A3  F00D         	movff	efgtoa@l+1,___flmul@b+1
  4246  001142  C0A4  F00E         	movff	efgtoa@l+2,___flmul@b+2
  4247  001146  C0A5  F00F         	movff	efgtoa@l+3,___flmul@b+3
  4248  00114A  ECAD  F011         	call	___flmul	;wreg free
  4249  00114E  C00C  F039         	movff	?___flmul,___flsub@a
  4250  001152  C00D  F03A         	movff	?___flmul+1,___flsub@a+1
  4251  001156  C00E  F03B         	movff	?___flmul+2,___flsub@a+2
  4252  00115A  C00F  F03C         	movff	?___flmul+3,___flsub@a+3
  4253  00115E  EC0A  F025         	call	___flsub	;wreg free
  4254  001162  C035  F09E         	movff	?___flsub,efgtoa@h
  4255  001166  C036  F09F         	movff	?___flsub+1,efgtoa@h+1
  4256  00116A  C037  F0A0         	movff	?___flsub+2,efgtoa@h+2
  4257  00116E  C038  F0A1         	movff	?___flsub+3,efgtoa@h+3
  4258  001172                     
  4259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4260  001172  C0B0  F03D         	movff	efgtoa@u,___fldiv@b
  4261  001176  C0B1  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  4262  00117A  C0B2  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  4263  00117E  C0B3  F040         	movff	efgtoa@u+3,___fldiv@b+3
  4264  001182  0E00               	movlw	0
  4265  001184  6E41               	movwf	___fldiv@a^0,c
  4266  001186  0E00               	movlw	0
  4267  001188  6E42               	movwf	(___fldiv@a+1)^0,c
  4268  00118A  0E20               	movlw	32
  4269  00118C  6E43               	movwf	(___fldiv@a+2)^0,c
  4270  00118E  0E41               	movlw	65
  4271  001190  6E44               	movwf	(___fldiv@a+3)^0,c
  4272  001192  ECBB  F015         	call	___fldiv	;wreg free
  4273  001196  C03D  F0B0         	movff	?___fldiv,efgtoa@u
  4274  00119A  C03E  F0B1         	movff	?___fldiv+1,efgtoa@u+1
  4275  00119E  C03F  F0B2         	movff	?___fldiv+2,efgtoa@u+2
  4276  0011A2  C040  F0B3         	movff	?___fldiv+3,efgtoa@u+3
  4277  0011A6                     
  4278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4279  0011A6  0100               	movlb	0	; () banked
  4280  0011A8  0792               	decf	efgtoa@ne& (0+255),f,b
  4281  0011AA  A0D8               	btfss	status,0,c
  4282  0011AC  0793               	decf	(efgtoa@ne+1)& (0+255),f,b
  4283  0011AE                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4286  0011AE  4BA6               	infsnz	efgtoa@i& (0+255),f,b
  4287  0011B0  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
  4288  0011B2                     l6479:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4292  0011B2  5190               	movf	efgtoa@m& (0+255),w,b
  4293  0011B4  5DA6               	subwf	efgtoa@i& (0+255),w,b
  4294  0011B6  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
  4295  0011B8  0A80               	xorlw	128
  4296  0011BA  6F77               	movwf	??_efgtoa& (0+255),b
  4297  0011BC  5191               	movf	(efgtoa@m+1)& (0+255),w,b
  4298  0011BE  0A80               	xorlw	128
  4299  0011C0  5977               	subwfb	??_efgtoa& (0+255),w,b
  4300  0011C2  B0D8               	btfsc	status,0,c
  4301  0011C4  EFE6  F008         	goto	u8751
  4302  0011C8  EFE8  F008         	goto	u8750
  4303  0011CC                     u8751:
  4304  0011CC  EFF6  F008         	goto	l6483
  4305  0011D0                     u8750:
  4306  0011D0                     
  4307                           ; BSR set to: 0
  4308  0011D0  BFAF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4309  0011D2  EFF4  F008         	goto	u8761
  4310  0011D6  51AF               	movf	(efgtoa@n+1)& (0+255),w,b
  4311  0011D8  E109               	bnz	u8760
  4312  0011DA  0E4B               	movlw	75
  4313  0011DC  5DAE               	subwf	efgtoa@n& (0+255),w,b
  4314  0011DE  A0D8               	btfss	status,0,c
  4315  0011E0  EFF4  F008         	goto	u8761
  4316  0011E4  EFF6  F008         	goto	u8760
  4317  0011E8                     u8761:
  4318  0011E8  EFEB  F007         	goto	l6431
  4319  0011EC                     u8760:
  4320  0011EC                     l6483:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4324  0011EC  518E               	movf	efgtoa@pp& (0+255),w,b
  4325  0011EE  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4326  0011F0  A4D8               	btfss	status,2,c
  4327  0011F2  EFFD  F008         	goto	u8771
  4328  0011F6  EFFF  F008         	goto	u8770
  4329  0011FA                     u8771:
  4330  0011FA  EF10  F009         	goto	l6491
  4331  0011FE                     u8770:
  4332  0011FE                     
  4333                           ; BSR set to: 0
  4334  0011FE  A85A               	btfss	_flags^0,4,c
  4335  001200  EF04  F009         	goto	u8781
  4336  001204  EF06  F009         	goto	u8780
  4337  001208                     u8781:
  4338  001208  EF10  F009         	goto	l6491
  4339  00120C                     u8780:
  4340  00120C                     
  4341                           ; BSR set to: 0
  4342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4343  00120C  0E16               	movlw	low _dbuf
  4344  00120E  25AE               	addwf	efgtoa@n& (0+255),w,b
  4345  001210  6ED9               	movwf	fsr2l,c
  4346  001212  0E01               	movlw	high _dbuf
  4347  001214  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4348  001216  6EDA               	movwf	fsr2h,c
  4349  001218  0E2E               	movlw	46
  4350  00121A  6EDF               	movwf	indf2,c
  4351  00121C                     
  4352                           ; BSR set to: 0
  4353  00121C  4BAE               	infsnz	efgtoa@n& (0+255),f,b
  4354  00121E  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
  4355  001220                     l6491:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4359  001220  0E16               	movlw	low _dbuf
  4360  001222  25AE               	addwf	efgtoa@n& (0+255),w,b
  4361  001224  6ED9               	movwf	fsr2l,c
  4362  001226  0E01               	movlw	high _dbuf
  4363  001228  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4364  00122A  6EDA               	movwf	fsr2h,c
  4365  00122C  0E00               	movlw	0
  4366  00122E  6EDF               	movwf	indf2,c
  4367  001230                     
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4370  001230  0E65               	movlw	101
  4371  001232  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4372  001234  A4D8               	btfss	status,2,c
  4373  001236  EF1F  F009         	goto	u8791
  4374  00123A  EF21  F009         	goto	u8790
  4375  00123E                     u8791:
  4376  00123E  EFCE  F004         	goto	l6303
  4377  001242                     u8790:
  4378  001242                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4381  001242  0E00               	movlw	0
  4382  001244  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
  4383  001246  0E4F               	movlw	79
  4384  001248  6FA6               	movwf	efgtoa@i& (0+255),b
  4385  00124A                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4388  00124A  0E16               	movlw	low _dbuf
  4389  00124C  25A6               	addwf	efgtoa@i& (0+255),w,b
  4390  00124E  6ED9               	movwf	fsr2l,c
  4391  001250  0E01               	movlw	high _dbuf
  4392  001252  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4393  001254  6EDA               	movwf	fsr2h,c
  4394  001256  0E00               	movlw	0
  4395  001258  6EDF               	movwf	indf2,c
  4396  00125A                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4399  00125A  0E00               	movlw	0
  4400  00125C  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  4401  00125E  0E00               	movlw	0
  4402  001260  6F96               	movwf	efgtoa@sign& (0+255),b
  4403  001262                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4406  001262  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4407  001264  EF38  F009         	goto	u8800
  4408  001268  EF36  F009         	goto	u8801
  4409  00126C                     u8801:
  4410  00126C  EF40  F009         	goto	l6507
  4411  001270                     u8800:
  4412  001270                     
  4413                           ; BSR set to: 0
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4415  001270  0E00               	movlw	0
  4416  001272  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
  4417  001274  0E01               	movlw	1
  4418  001276  6F96               	movwf	efgtoa@sign& (0+255),b
  4419  001278                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4422  001278  6DAC               	negf	efgtoa@e& (0+255),b
  4423  00127A  1FAD               	comf	(efgtoa@e+1)& (0+255),f,b
  4424  00127C  B0D8               	btfsc	status,0,c
  4425  00127E  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
  4426  001280                     l6507:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4430  001280  0E00               	movlw	0
  4431  001282  6F99               	movwf	(efgtoa@p+1)& (0+255),b
  4432  001284  0E02               	movlw	2
  4433  001286  6F98               	movwf	efgtoa@p& (0+255),b
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4436  001288  EF71  F009         	goto	l6519
  4437  00128C                     l6509:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4441  00128C  07A6               	decf	efgtoa@i& (0+255),f,b
  4442  00128E  A0D8               	btfss	status,0,c
  4443  001290  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  4444  001292                     
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4447  001292  0E16               	movlw	low _dbuf
  4448  001294  25A6               	addwf	efgtoa@i& (0+255),w,b
  4449  001296  6ED9               	movwf	fsr2l,c
  4450  001298  0E01               	movlw	high _dbuf
  4451  00129A  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4452  00129C  6EDA               	movwf	fsr2h,c
  4453  00129E  C0AC  F004         	movff	efgtoa@e,___awmod@dividend
  4454  0012A2  C0AD  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  4455  0012A6  0E00               	movlw	0
  4456  0012A8  6E07               	movwf	(___awmod@divisor+1)^0,c
  4457  0012AA  0E0A               	movlw	10
  4458  0012AC  6E06               	movwf	___awmod@divisor^0,c
  4459  0012AE  EC69  F022         	call	___awmod	;wreg free
  4460  0012B2  5004               	movf	?___awmod^0,w,c
  4461  0012B4  0F30               	addlw	48
  4462  0012B6  6EDF               	movwf	indf2,c
  4463  0012B8                     
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4465  0012B8  C0AC  F004         	movff	efgtoa@e,___awdiv@dividend
  4466  0012BC  C0AD  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  4467  0012C0  0E00               	movlw	0
  4468  0012C2  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4469  0012C4  0E0A               	movlw	10
  4470  0012C6  6E06               	movwf	___awdiv@divisor^0,c
  4471  0012C8  ECA6  F021         	call	___awdiv	;wreg free
  4472  0012CC  C004  F0AC         	movff	?___awdiv,efgtoa@e
  4473  0012D0  C005  F0AD         	movff	?___awdiv+1,efgtoa@e+1
  4474  0012D4                     
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4476  0012D4  0100               	movlb	0	; () banked
  4477  0012D6  0798               	decf	efgtoa@p& (0+255),f,b
  4478  0012D8  A0D8               	btfss	status,0,c
  4479  0012DA  0799               	decf	(efgtoa@p+1)& (0+255),f,b
  4480  0012DC                     
  4481                           ; BSR set to: 0
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4483  0012DC  079B               	decf	efgtoa@w& (0+255),f,b
  4484  0012DE  A0D8               	btfss	status,0,c
  4485  0012E0  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4486  0012E2                     l6519:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4490  0012E2  51AC               	movf	efgtoa@e& (0+255),w,b
  4491  0012E4  11AD               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4492  0012E6  A4D8               	btfss	status,2,c
  4493  0012E8  EF78  F009         	goto	u8811
  4494  0012EC  EF7A  F009         	goto	u8810
  4495  0012F0                     u8811:
  4496  0012F0  EF46  F009         	goto	l6509
  4497  0012F4                     u8810:
  4498  0012F4                     
  4499                           ; BSR set to: 0
  4500  0012F4  BF99               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4501  0012F6  EF87  F009         	goto	u8820
  4502  0012FA  5199               	movf	(efgtoa@p+1)& (0+255),w,b
  4503  0012FC  E106               	bnz	u8821
  4504  0012FE  0598               	decf	efgtoa@p& (0+255),w,b
  4505  001300  B0D8               	btfsc	status,0,c
  4506  001302  EF85  F009         	goto	u8821
  4507  001306  EF87  F009         	goto	u8820
  4508  00130A                     u8821:
  4509  00130A  EF46  F009         	goto	l6509
  4510  00130E                     u8820:
  4511  00130E                     
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4514  00130E  07A6               	decf	efgtoa@i& (0+255),f,b
  4515  001310  A0D8               	btfss	status,0,c
  4516  001312  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  4517  001314                     
  4518                           ; BSR set to: 0
  4519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4520  001314  5196               	movf	efgtoa@sign& (0+255),w,b
  4521  001316  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4522  001318  A4D8               	btfss	status,2,c
  4523  00131A  EF91  F009         	goto	u8831
  4524  00131E  EF93  F009         	goto	u8830
  4525  001322                     u8831:
  4526  001322  EF99  F009         	goto	l6529
  4527  001326                     u8830:
  4528  001326                     
  4529                           ; BSR set to: 0
  4530  001326  0E00               	movlw	0
  4531  001328  6F87               	movwf	(_efgtoa$498+1)& (0+255),b
  4532  00132A  0E2B               	movlw	43
  4533  00132C  6F86               	movwf	_efgtoa$498& (0+255),b
  4534  00132E  EF9D  F009         	goto	l6531
  4535  001332                     l6529:
  4536                           
  4537                           ; BSR set to: 0
  4538  001332  0E00               	movlw	0
  4539  001334  6F87               	movwf	(_efgtoa$498+1)& (0+255),b
  4540  001336  0E2D               	movlw	45
  4541  001338  6F86               	movwf	_efgtoa$498& (0+255),b
  4542  00133A                     l6531:
  4543                           
  4544                           ; BSR set to: 0
  4545  00133A  0E16               	movlw	low _dbuf
  4546  00133C  25A6               	addwf	efgtoa@i& (0+255),w,b
  4547  00133E  6ED9               	movwf	fsr2l,c
  4548  001340  0E01               	movlw	high _dbuf
  4549  001342  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4550  001344  6EDA               	movwf	fsr2h,c
  4551  001346  C086  FFDF         	movff	_efgtoa$498,indf2
  4552  00134A                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4555  00134A  079B               	decf	efgtoa@w& (0+255),f,b
  4556  00134C  A0D8               	btfss	status,0,c
  4557  00134E  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4558  001350                     
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4561  001350  07A6               	decf	efgtoa@i& (0+255),f,b
  4562  001352  A0D8               	btfss	status,0,c
  4563  001354  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
  4564  001356                     
  4565                           ; BSR set to: 0
  4566  001356  0EBF               	movlw	191
  4567  001358  6F77               	movwf	??_efgtoa& (0+255),b
  4568  00135A  0EFF               	movlw	255
  4569  00135C  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  4570  00135E  5176               	movf	efgtoa@c& (0+255),w,b
  4571  001360  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  4572  001362  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  4573  001364  5177               	movf	??_efgtoa& (0+255),w,b
  4574  001366  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  4575  001368  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  4576  00136A  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4577  00136C  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  4578  00136E  E10A               	bnz	u8840
  4579  001370  0E1A               	movlw	26
  4580  001372  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  4581  001374  A0D8               	btfss	status,0,c
  4582  001376  EFBF  F009         	goto	u8841
  4583  00137A  EFC2  F009         	goto	u8840
  4584  00137E                     u8841:
  4585  00137E  0E01               	movlw	1
  4586  001380  EFC3  F009         	goto	u8850
  4587  001384                     u8840:
  4588  001384  0E00               	movlw	0
  4589  001386                     u8850:
  4590  001386  6F8A               	movwf	_efgtoa$500& (0+255),b
  4591  001388  6B8B               	clrf	(_efgtoa$500+1)& (0+255),b
  4592  00138A                     
  4593                           ; BSR set to: 0
  4594  00138A  518A               	movf	_efgtoa$500& (0+255),w,b
  4595  00138C  118B               	iorwf	(_efgtoa$500+1)& (0+255),w,b
  4596  00138E  A4D8               	btfss	status,2,c
  4597  001390  EFCC  F009         	goto	u8861
  4598  001394  EFCE  F009         	goto	u8860
  4599  001398                     u8861:
  4600  001398  EFD4  F009         	goto	l6545
  4601  00139C                     u8860:
  4602  00139C                     
  4603                           ; BSR set to: 0
  4604  00139C  0E00               	movlw	0
  4605  00139E  6F89               	movwf	(_efgtoa$499+1)& (0+255),b
  4606  0013A0  0E65               	movlw	101
  4607  0013A2  6F88               	movwf	_efgtoa$499& (0+255),b
  4608  0013A4  EFD8  F009         	goto	l6547
  4609  0013A8                     l6545:
  4610                           
  4611                           ; BSR set to: 0
  4612  0013A8  0E00               	movlw	0
  4613  0013AA  6F89               	movwf	(_efgtoa$499+1)& (0+255),b
  4614  0013AC  0E45               	movlw	69
  4615  0013AE  6F88               	movwf	_efgtoa$499& (0+255),b
  4616  0013B0                     l6547:
  4617                           
  4618                           ; BSR set to: 0
  4619  0013B0  0E16               	movlw	low _dbuf
  4620  0013B2  25A6               	addwf	efgtoa@i& (0+255),w,b
  4621  0013B4  6ED9               	movwf	fsr2l,c
  4622  0013B6  0E01               	movlw	high _dbuf
  4623  0013B8  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4624  0013BA  6EDA               	movwf	fsr2h,c
  4625  0013BC  C088  FFDF         	movff	_efgtoa$499,indf2
  4626  0013C0                     
  4627                           ; BSR set to: 0
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4629  0013C0  079B               	decf	efgtoa@w& (0+255),f,b
  4630  0013C2  A0D8               	btfss	status,0,c
  4631  0013C4  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  4632  0013C6                     
  4633                           ; BSR set to: 0
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4635  0013C6  0E16               	movlw	low _dbuf
  4636  0013C8  25AE               	addwf	efgtoa@n& (0+255),w,b
  4637  0013CA  6E04               	movwf	strcpy@dest^0,c
  4638  0013CC  0E01               	movlw	high _dbuf
  4639  0013CE  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4640  0013D0  6E05               	movwf	(strcpy@dest+1)^0,c
  4641  0013D2  0E16               	movlw	low _dbuf
  4642  0013D4  25A6               	addwf	efgtoa@i& (0+255),w,b
  4643  0013D6  6E06               	movwf	strcpy@src^0,c
  4644  0013D8  0E01               	movlw	high _dbuf
  4645  0013DA  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4646  0013DC  6E07               	movwf	(strcpy@src+1)^0,c
  4647  0013DE  EC8A  F024         	call	_strcpy	;wreg free
  4648  0013E2  EFCE  F004         	goto	l6303
  4649  0013E6                     l365:
  4650  0013E6  0012               	return		;funcret
  4651  0013E8                     __end_of_efgtoa:
  4652                           	opt callstack 0
  4653                           
  4654 ;; *************** function _tolower *****************
  4655 ;; Defined at:
  4656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  c               2    9[COMRAM] int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2    9[COMRAM] int 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         2       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        8 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		_isupper
  4679 ;; This function is called by:
  4680 ;;		_efgtoa
  4681 ;;		_vfpfcnvrt
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text10
  4686  0048B4                     __ptext10:
  4687                           	opt callstack 0
  4688  0048B4                     _tolower:
  4689                           	opt callstack 24
  4690  0048B4  0EBF               	movlw	191
  4691  0048B6  6E0C               	movwf	??_tolower^0,c
  4692  0048B8  0EFF               	movlw	255
  4693  0048BA  6E0D               	movwf	(??_tolower+1)^0,c
  4694  0048BC  C00A  F00E         	movff	tolower@c,??_tolower+2
  4695  0048C0  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4696  0048C4  500C               	movf	??_tolower^0,w,c
  4697  0048C6  260E               	addwf	(??_tolower+2)^0,f,c
  4698  0048C8  500D               	movf	(??_tolower+1)^0,w,c
  4699  0048CA  220F               	addwfc	(??_tolower+3)^0,f,c
  4700  0048CC  500F               	movf	(??_tolower+3)^0,w,c
  4701  0048CE  E10A               	bnz	u7070
  4702  0048D0  0E1A               	movlw	26
  4703  0048D2  5C0E               	subwf	(??_tolower+2)^0,w,c
  4704  0048D4  A0D8               	btfss	status,0,c
  4705  0048D6  EF6F  F024         	goto	u7071
  4706  0048DA  EF72  F024         	goto	u7070
  4707  0048DE                     u7071:
  4708  0048DE  0E01               	movlw	1
  4709  0048E0  EF73  F024         	goto	u7080
  4710  0048E4                     u7070:
  4711  0048E4  0E00               	movlw	0
  4712  0048E6                     u7080:
  4713  0048E6  6E10               	movwf	_tolower$1176^0,c
  4714  0048E8  6A11               	clrf	(_tolower$1176+1)^0,c
  4715  0048EA  5010               	movf	_tolower$1176^0,w,c
  4716  0048EC  1011               	iorwf	(_tolower$1176+1)^0,w,c
  4717  0048EE  B4D8               	btfsc	status,2,c
  4718  0048F0  EF7C  F024         	goto	u7091
  4719  0048F4  EF7E  F024         	goto	u7090
  4720  0048F8                     u7091:
  4721  0048F8  EF85  F024         	goto	l1358
  4722  0048FC                     u7090:
  4723  0048FC  0E20               	movlw	32
  4724  0048FE  100A               	iorwf	tolower@c^0,w,c
  4725  004900  6E0A               	movwf	?_tolower^0,c
  4726  004902  500B               	movf	(tolower@c+1)^0,w,c
  4727  004904  6E0B               	movwf	(?_tolower+1)^0,c
  4728  004906  EF89  F024         	goto	l1363
  4729  00490A                     l1358:
  4730  00490A  C00A  F00A         	movff	tolower@c,?_tolower
  4731  00490E  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4732  004912                     l1363:
  4733  004912  0012               	return		;funcret
  4734  004914                     __end_of_tolower:
  4735                           	opt callstack 0
  4736                           
  4737 ;; *************** function _isupper *****************
  4738 ;; Defined at:
  4739 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  c               2    3[COMRAM] int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  2    3[COMRAM] int 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         2       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4755 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4756 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        6 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_efgtoa
  4764 ;;		_vfpfcnvrt
  4765 ;;		_tolower
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text11
  4770  004B9C                     __ptext11:
  4771                           	opt callstack 0
  4772  004B9C                     _isupper:
  4773                           	opt callstack 24
  4774  004B9C  0EBF               	movlw	191
  4775  004B9E  6E06               	movwf	??_isupper^0,c
  4776  004BA0  0EFF               	movlw	255
  4777  004BA2  6E07               	movwf	(??_isupper+1)^0,c
  4778  004BA4  C004  F008         	movff	isupper@c,??_isupper+2
  4779  004BA8  C005  F009         	movff	isupper@c+1,??_isupper+3
  4780  004BAC  5006               	movf	??_isupper^0,w,c
  4781  004BAE  2608               	addwf	(??_isupper+2)^0,f,c
  4782  004BB0  5007               	movf	(??_isupper+1)^0,w,c
  4783  004BB2  2209               	addwfc	(??_isupper+3)^0,f,c
  4784  004BB4  5009               	movf	(??_isupper+3)^0,w,c
  4785  004BB6  E10A               	bnz	u6520
  4786  004BB8  0E1A               	movlw	26
  4787  004BBA  5C08               	subwf	(??_isupper+2)^0,w,c
  4788  004BBC  A0D8               	btfss	status,0,c
  4789  004BBE  EFE3  F025         	goto	u6521
  4790  004BC2  EFE6  F025         	goto	u6520
  4791  004BC6                     u6521:
  4792  004BC6  0E01               	movlw	1
  4793  004BC8  EFE7  F025         	goto	u6530
  4794  004BCC                     u6520:
  4795  004BCC  0E00               	movlw	0
  4796  004BCE                     u6530:
  4797  004BCE  6E04               	movwf	?_isupper^0,c
  4798  004BD0  6A05               	clrf	(?_isupper+1)^0,c
  4799  004BD2  0012               	return		;funcret
  4800  004BD4                     __end_of_isupper:
  4801                           	opt callstack 0
  4802                           
  4803 ;; *************** function _strcpy *****************
  4804 ;; Defined at:
  4805 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4808 ;;		 -> dbuf(80), 
  4809 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4810 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4811 ;;		 -> dbuf(80), 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  d               2   11[COMRAM] PTR unsigned char 
  4814 ;;		 -> dbuf(80), 
  4815 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4816 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4817 ;;		 -> dbuf(80), 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  2    3[COMRAM] PTR unsigned char 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         4       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4830 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:       10 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_efgtoa
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text12
  4842  004914                     __ptext12:
  4843                           	opt callstack 0
  4844  004914                     _strcpy:
  4845                           	opt callstack 24
  4846  004914  C006  F00A         	movff	strcpy@src,strcpy@s
  4847  004918  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4848  00491C  C004  F00C         	movff	strcpy@dest,strcpy@d
  4849  004920  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4850  004924                     l5567:
  4851  004924  500A               	movf	strcpy@s^0,w,c
  4852  004926  6E08               	movwf	??_strcpy^0,c
  4853  004928  500B               	movf	(strcpy@s+1)^0,w,c
  4854  00492A  6E09               	movwf	(??_strcpy+1)^0,c
  4855  00492C  4A0A               	infsnz	strcpy@s^0,f,c
  4856  00492E  2A0B               	incf	(strcpy@s+1)^0,f,c
  4857  004930  C008  FFF6         	movff	??_strcpy,tblptrl
  4858  004934  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4859  004938  6AF8               	clrf	tblptru,c
  4860  00493A  C00C  FFD9         	movff	strcpy@d,fsr2l
  4861  00493E  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4862  004942  4A0C               	infsnz	strcpy@d^0,f,c
  4863  004944  2A0D               	incf	(strcpy@d+1)^0,f,c
  4864  004946  0E07               	movlw	(high __ramtop+-1)
  4865  004948  64F7               	cpfsgt	tblptrh,c
  4866  00494A  D003               	bra	u7057
  4867  00494C  0008               	tblrd		*
  4868  00494E  50F5               	movf	tablat,w,c
  4869  004950  D005               	bra	u7050
  4870  004952                     u7057:
  4871  004952  CFF6 FFE1          	movff	tblptrl,fsr1l
  4872  004956  CFF7 FFE2          	movff	tblptrh,fsr1h
  4873  00495A  50E7               	movf	indf1,w,c
  4874  00495C                     u7050:
  4875  00495C  6EDF               	movwf	indf2,c
  4876  00495E  50DF               	movf	indf2,w,c
  4877  004960  A4D8               	btfss	status,2,c
  4878  004962  EFB5  F024         	goto	u7061
  4879  004966  EFB7  F024         	goto	u7060
  4880  00496A                     u7061:
  4881  00496A  EF92  F024         	goto	l5567
  4882  00496E                     u7060:
  4883  00496E  0012               	return		;funcret
  4884  004970                     __end_of_strcpy:
  4885                           	opt callstack 0
  4886                           
  4887 ;; *************** function _floorf *****************
  4888 ;; Defined at:
  4889 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  x               4   85[COMRAM] float 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  u               4   12[BANK0 ] struct .
  4894 ;;  m               4    6[BANK0 ] unsigned long 
  4895 ;;  e               2   10[BANK0 ] int 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  4   85[COMRAM] float 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4905 ;;      Params:         4       0       0       0       0       0       0       0       0
  4906 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4907 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4908 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4909 ;;Total ram usage:       20 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    2
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_efgtoa
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text13
  4920  0031F0                     __ptext13:
  4921                           	opt callstack 0
  4922  0031F0                     _floorf:
  4923                           	opt callstack 24
  4924  0031F0  C100  F06C         	movff	floorf@F524,floorf@u
  4925  0031F4  C101  F06D         	movff	floorf@F524+1,floorf@u+1
  4926  0031F8  C102  F06E         	movff	floorf@F524+2,floorf@u+2
  4927  0031FC  C103  F06F         	movff	floorf@F524+3,floorf@u+3
  4928  003200  C056  F06C         	movff	floorf@x,floorf@u
  4929  003204  C057  F06D         	movff	floorf@x+1,floorf@u+1
  4930  003208  C058  F06E         	movff	floorf@x+2,floorf@u+2
  4931  00320C  C059  F06F         	movff	floorf@x+3,floorf@u+3
  4932  003210  0E81               	movlw	129
  4933  003212  0100               	movlb	0	; () banked
  4934  003214  6F60               	movwf	??_floorf& (0+255),b
  4935  003216  0EFF               	movlw	255
  4936  003218  6F61               	movwf	(??_floorf+1)& (0+255),b
  4937  00321A  C06C  F062         	movff	floorf@u,??_floorf+2
  4938  00321E  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4939  003222  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4940  003226  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4941  00322A  0E18               	movlw	24
  4942  00322C  EF1D  F019         	goto	u7100
  4943  003230                     u7105:
  4944  003230  90D8               	bcf	status,0,c
  4945  003232  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4946  003234  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4947  003236  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4948  003238  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4949  00323A                     u7100:
  4950  00323A  2EE8               	decfsz	wreg,f,c
  4951  00323C  EF18  F019         	goto	u7105
  4952  003240  5162               	movf	(??_floorf+2)& (0+255),w,b
  4953  003242  2560               	addwf	??_floorf& (0+255),w,b
  4954  003244  6F6A               	movwf	floorf@e& (0+255),b
  4955  003246  0E00               	movlw	0
  4956  003248  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4957  00324A  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4958  00324C  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4959  00324E  EF32  F019         	goto	u7111
  4960  003252  516B               	movf	(floorf@e+1)& (0+255),w,b
  4961  003254  E109               	bnz	u7110
  4962  003256  0E17               	movlw	23
  4963  003258  5D6A               	subwf	floorf@e& (0+255),w,b
  4964  00325A  A0D8               	btfss	status,0,c
  4965  00325C  EF32  F019         	goto	u7111
  4966  003260  EF34  F019         	goto	u7110
  4967  003264                     u7111:
  4968  003264  EF3E  F019         	goto	l5585
  4969  003268                     u7110:
  4970  003268                     l5583:
  4971                           
  4972                           ; BSR set to: 0
  4973  003268  C056  F056         	movff	floorf@x,?_floorf
  4974  00326C  C057  F057         	movff	floorf@x+1,?_floorf+1
  4975  003270  C058  F058         	movff	floorf@x+2,?_floorf+2
  4976  003274  C059  F059         	movff	floorf@x+3,?_floorf+3
  4977  003278  EF02  F01A         	goto	l1245
  4978  00327C                     l5585:
  4979                           
  4980                           ; BSR set to: 0
  4981  00327C  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4982  00327E  EF43  F019         	goto	u7121
  4983  003282  EF45  F019         	goto	u7120
  4984  003286                     u7121:
  4985  003286  EFB6  F019         	goto	l5595
  4986  00328A                     u7120:
  4987  00328A                     
  4988                           ; BSR set to: 0
  4989  00328A  C06A  F060         	movff	floorf@e,??_floorf
  4990  00328E  0EFF               	movlw	255
  4991  003290  6F61               	movwf	(??_floorf+1)& (0+255),b
  4992  003292  0EFF               	movlw	255
  4993  003294  6F62               	movwf	(??_floorf+2)& (0+255),b
  4994  003296  0E7F               	movlw	127
  4995  003298  6F63               	movwf	(??_floorf+3)& (0+255),b
  4996  00329A  0E00               	movlw	0
  4997  00329C  6F64               	movwf	(??_floorf+4)& (0+255),b
  4998  00329E                     u7135:
  4999  00329E  6760               	tstfsz	??_floorf& (0+255),b
  5000  0032A0  EF54  F019         	goto	u7136
  5001  0032A4  EF5C  F019         	goto	u7137
  5002  0032A8                     u7136:
  5003  0032A8  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  5004  0032AA  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5005  0032AC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5006  0032AE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5007  0032B0  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5008  0032B2  2F60               	decfsz	??_floorf& (0+255),f,b
  5009  0032B4  EF4F  F019         	goto	u7135
  5010  0032B8                     u7137:
  5011  0032B8  C061  F066         	movff	??_floorf+1,floorf@m
  5012  0032BC  C062  F067         	movff	??_floorf+2,floorf@m+1
  5013  0032C0  C063  F068         	movff	??_floorf+3,floorf@m+2
  5014  0032C4  C064  F069         	movff	??_floorf+4,floorf@m+3
  5015  0032C8  0100               	movlb	0	; () banked
  5016  0032CA  5166               	movf	floorf@m& (0+255),w,b
  5017  0032CC  156C               	andwf	floorf@u& (0+255),w,b
  5018  0032CE  6F60               	movwf	??_floorf& (0+255),b
  5019  0032D0  5167               	movf	(floorf@m+1)& (0+255),w,b
  5020  0032D2  156D               	andwf	(floorf@u+1)& (0+255),w,b
  5021  0032D4  6F61               	movwf	(??_floorf+1)& (0+255),b
  5022  0032D6  5168               	movf	(floorf@m+2)& (0+255),w,b
  5023  0032D8  156E               	andwf	(floorf@u+2)& (0+255),w,b
  5024  0032DA  6F62               	movwf	(??_floorf+2)& (0+255),b
  5025  0032DC  5169               	movf	(floorf@m+3)& (0+255),w,b
  5026  0032DE  156F               	andwf	(floorf@u+3)& (0+255),w,b
  5027  0032E0  6F63               	movwf	(??_floorf+3)& (0+255),b
  5028  0032E2  5160               	movf	??_floorf& (0+255),w,b
  5029  0032E4  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5030  0032E6  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5031  0032E8  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5032  0032EA  A4D8               	btfss	status,2,c
  5033  0032EC  EF7A  F019         	goto	u7141
  5034  0032F0  EF7C  F019         	goto	u7140
  5035  0032F4                     u7141:
  5036  0032F4  EF7E  F019         	goto	l5591
  5037  0032F8                     u7140:
  5038  0032F8  EF34  F019         	goto	l5583
  5039  0032FC                     l5591:
  5040                           
  5041                           ; BSR set to: 0
  5042  0032FC  C06C  F060         	movff	floorf@u,??_floorf
  5043  003300  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5044  003304  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5045  003308  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5046  00330C  0E20               	movlw	32
  5047  00330E  EF8E  F019         	goto	u7150
  5048  003312                     u7155:
  5049  003312  90D8               	bcf	status,0,c
  5050  003314  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5051  003316  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5052  003318  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5053  00331A  3360               	rrcf	??_floorf& (0+255),f,b
  5054  00331C                     u7150:
  5055  00331C  2EE8               	decfsz	wreg,f,c
  5056  00331E  EF89  F019         	goto	u7155
  5057  003322  5160               	movf	??_floorf& (0+255),w,b
  5058  003324  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5059  003326  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5060  003328  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5061  00332A  B4D8               	btfsc	status,2,c
  5062  00332C  EF9A  F019         	goto	u7161
  5063  003330  EF9C  F019         	goto	u7160
  5064  003334                     u7161:
  5065  003334  EFA4  F019         	goto	l1248
  5066  003338                     u7160:
  5067  003338                     
  5068                           ; BSR set to: 0
  5069  003338  5166               	movf	floorf@m& (0+255),w,b
  5070  00333A  276C               	addwf	floorf@u& (0+255),f,b
  5071  00333C  5167               	movf	(floorf@m+1)& (0+255),w,b
  5072  00333E  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  5073  003340  5168               	movf	(floorf@m+2)& (0+255),w,b
  5074  003342  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  5075  003344  5169               	movf	(floorf@m+3)& (0+255),w,b
  5076  003346  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  5077  003348                     l1248:
  5078                           
  5079                           ; BSR set to: 0
  5080  003348  1D66               	comf	floorf@m& (0+255),w,b
  5081  00334A  6F60               	movwf	??_floorf& (0+255),b
  5082  00334C  1D67               	comf	(floorf@m+1)& (0+255),w,b
  5083  00334E  6F61               	movwf	(??_floorf+1)& (0+255),b
  5084  003350  1D68               	comf	(floorf@m+2)& (0+255),w,b
  5085  003352  6F62               	movwf	(??_floorf+2)& (0+255),b
  5086  003354  1D69               	comf	(floorf@m+3)& (0+255),w,b
  5087  003356  6F63               	movwf	(??_floorf+3)& (0+255),b
  5088  003358  5160               	movf	??_floorf& (0+255),w,b
  5089  00335A  176C               	andwf	floorf@u& (0+255),f,b
  5090  00335C  5161               	movf	(??_floorf+1)& (0+255),w,b
  5091  00335E  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5092  003360  5162               	movf	(??_floorf+2)& (0+255),w,b
  5093  003362  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5094  003364  5163               	movf	(??_floorf+3)& (0+255),w,b
  5095  003366  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5096  003368  EFFA  F019         	goto	l5603
  5097  00336C                     l5595:
  5098                           
  5099                           ; BSR set to: 0
  5100  00336C  C06C  F060         	movff	floorf@u,??_floorf
  5101  003370  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5102  003374  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5103  003378  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5104  00337C  0E20               	movlw	32
  5105  00337E  EFC6  F019         	goto	u7170
  5106  003382                     u7175:
  5107  003382  90D8               	bcf	status,0,c
  5108  003384  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5109  003386  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5110  003388  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5111  00338A  3360               	rrcf	??_floorf& (0+255),f,b
  5112  00338C                     u7170:
  5113  00338C  2EE8               	decfsz	wreg,f,c
  5114  00338E  EFC1  F019         	goto	u7175
  5115  003392  5160               	movf	??_floorf& (0+255),w,b
  5116  003394  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5117  003396  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5118  003398  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5119  00339A  A4D8               	btfss	status,2,c
  5120  00339C  EFD2  F019         	goto	u7181
  5121  0033A0  EFD4  F019         	goto	u7180
  5122  0033A4                     u7181:
  5123  0033A4  EFDE  F019         	goto	l5599
  5124  0033A8                     u7180:
  5125  0033A8                     
  5126                           ; BSR set to: 0
  5127  0033A8  0E00               	movlw	0
  5128  0033AA  6F6C               	movwf	floorf@u& (0+255),b
  5129  0033AC  0E00               	movlw	0
  5130  0033AE  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5131  0033B0  0E00               	movlw	0
  5132  0033B2  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5133  0033B4  0E00               	movlw	0
  5134  0033B6  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5135  0033B8  EFFA  F019         	goto	l5603
  5136  0033BC                     l5599:
  5137                           
  5138                           ; BSR set to: 0
  5139  0033BC  90D8               	bcf	status,0,c
  5140  0033BE  356C               	rlcf	floorf@u& (0+255),w,b
  5141  0033C0  6F60               	movwf	??_floorf& (0+255),b
  5142  0033C2  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5143  0033C4  6F61               	movwf	(??_floorf+1)& (0+255),b
  5144  0033C6  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5145  0033C8  6F62               	movwf	(??_floorf+2)& (0+255),b
  5146  0033CA  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5147  0033CC  6F63               	movwf	(??_floorf+3)& (0+255),b
  5148  0033CE  5160               	movf	??_floorf& (0+255),w,b
  5149  0033D0  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5150  0033D2  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5151  0033D4  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5152  0033D6  B4D8               	btfsc	status,2,c
  5153  0033D8  EFF0  F019         	goto	u7191
  5154  0033DC  EFF2  F019         	goto	u7190
  5155  0033E0                     u7191:
  5156  0033E0  EFFA  F019         	goto	l5603
  5157  0033E4                     u7190:
  5158  0033E4                     
  5159                           ; BSR set to: 0
  5160  0033E4  0E00               	movlw	0
  5161  0033E6  6F6C               	movwf	floorf@u& (0+255),b
  5162  0033E8  0E00               	movlw	0
  5163  0033EA  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5164  0033EC  0E80               	movlw	128
  5165  0033EE  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5166  0033F0  0EBF               	movlw	191
  5167  0033F2  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5168  0033F4                     l5603:
  5169                           
  5170                           ; BSR set to: 0
  5171  0033F4  C06C  F056         	movff	floorf@u,?_floorf
  5172  0033F8  C06D  F057         	movff	floorf@u+1,?_floorf+1
  5173  0033FC  C06E  F058         	movff	floorf@u+2,?_floorf+2
  5174  003400  C06F  F059         	movff	floorf@u+3,?_floorf+3
  5175  003404                     l1245:
  5176                           
  5177                           ; BSR set to: 0
  5178  003404  0012               	return		;funcret
  5179  003406                     __end_of_floorf:
  5180                           	opt callstack 0
  5181                           
  5182 ;; *************** function ___fpclassifyf *****************
  5183 ;; Defined at:
  5184 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  x               4    3[COMRAM] float 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  u               4   13[COMRAM] struct .
  5189 ;;  e               2   11[COMRAM] int 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2    3[COMRAM] int 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5199 ;;      Params:         4       0       0       0       0       0       0       0       0
  5200 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5201 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5202 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5203 ;;Total ram usage:       14 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_efgtoa
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text14
  5214  0040AE                     __ptext14:
  5215                           	opt callstack 0
  5216  0040AE                     ___fpclassifyf:
  5217                           	opt callstack 24
  5218  0040AE  C108  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5219  0040B2  C109  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5220  0040B6  C10A  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5221  0040BA  C10B  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5222  0040BE  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5223  0040C2  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5224  0040C6  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5225  0040CA  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5226  0040CE  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5227  0040D2  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5228  0040D6  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5229  0040DA  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5230  0040DE  0E18               	movlw	24
  5231  0040E0  EF77  F020         	goto	u6980
  5232  0040E4                     u6985:
  5233  0040E4  90D8               	bcf	status,0,c
  5234  0040E6  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5235  0040E8  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5236  0040EA  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  5237  0040EC  3208               	rrcf	??___fpclassifyf^0,f,c
  5238  0040EE                     u6980:
  5239  0040EE  2EE8               	decfsz	wreg,f,c
  5240  0040F0  EF72  F020         	goto	u6985
  5241  0040F4  5008               	movf	??___fpclassifyf^0,w,c
  5242  0040F6  6E0C               	movwf	___fpclassifyf@e^0,c
  5243  0040F8  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  5244  0040FA  500C               	movf	___fpclassifyf@e^0,w,c
  5245  0040FC  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5246  0040FE  A4D8               	btfss	status,2,c
  5247  004100  EF84  F020         	goto	u6991
  5248  004104  EF86  F020         	goto	u6990
  5249  004108                     u6991:
  5250  004108  EFA6  F020         	goto	l5555
  5251  00410C                     u6990:
  5252  00410C  90D8               	bcf	status,0,c
  5253  00410E  340E               	rlcf	___fpclassifyf@u^0,w,c
  5254  004110  6E08               	movwf	??___fpclassifyf^0,c
  5255  004112  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5256  004114  6E09               	movwf	(??___fpclassifyf+1)^0,c
  5257  004116  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5258  004118  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  5259  00411A  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5260  00411C  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  5261  00411E  5008               	movf	??___fpclassifyf^0,w,c
  5262  004120  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5263  004122  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5264  004124  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5265  004126  A4D8               	btfss	status,2,c
  5266  004128  EF98  F020         	goto	u7001
  5267  00412C  EF9A  F020         	goto	u7000
  5268  004130                     u7001:
  5269  004130  EFA0  F020         	goto	l5551
  5270  004134                     u7000:
  5271  004134  0E00               	movlw	0
  5272  004136  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5273  004138  0E02               	movlw	2
  5274  00413A  6E04               	movwf	?___fpclassifyf^0,c
  5275  00413C  EFD5  F020         	goto	l1168
  5276  004140                     l5551:
  5277  004140  0E00               	movlw	0
  5278  004142  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5279  004144  0E03               	movlw	3
  5280  004146  6E04               	movwf	?___fpclassifyf^0,c
  5281  004148  EFD5  F020         	goto	l1168
  5282  00414C                     l5555:
  5283  00414C  280C               	incf	___fpclassifyf@e^0,w,c
  5284  00414E  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5285  004150  A4D8               	btfss	status,2,c
  5286  004152  EFAD  F020         	goto	u7011
  5287  004156  EFAF  F020         	goto	u7010
  5288  00415A                     u7011:
  5289  00415A  EFD1  F020         	goto	l5561
  5290  00415E                     u7010:
  5291  00415E  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5292  004162  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5293  004166  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5294  00416A  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5295  00416E  0E09               	movlw	9
  5296  004170                     u7025:
  5297  004170  90D8               	bcf	status,0,c
  5298  004172  3608               	rlcf	??___fpclassifyf^0,f,c
  5299  004174  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  5300  004176  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5301  004178  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5302  00417A  2EE8               	decfsz	wreg,f,c
  5303  00417C  EFB8  F020         	goto	u7025
  5304  004180  5008               	movf	??___fpclassifyf^0,w,c
  5305  004182  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5306  004184  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5307  004186  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5308  004188  B4D8               	btfsc	status,2,c
  5309  00418A  EFC9  F020         	goto	u7031
  5310  00418E  EFCC  F020         	goto	u7030
  5311  004192                     u7031:
  5312  004192  0E01               	movlw	1
  5313  004194  EFCD  F020         	goto	u7040
  5314  004198                     u7030:
  5315  004198  0E00               	movlw	0
  5316  00419A                     u7040:
  5317  00419A  6E04               	movwf	?___fpclassifyf^0,c
  5318  00419C  6A05               	clrf	(?___fpclassifyf+1)^0,c
  5319  00419E  EFD5  F020         	goto	l1168
  5320  0041A2                     l5561:
  5321  0041A2  0E00               	movlw	0
  5322  0041A4  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5323  0041A6  0E04               	movlw	4
  5324  0041A8  6E04               	movwf	?___fpclassifyf^0,c
  5325  0041AA                     l1168:
  5326  0041AA  0012               	return		;funcret
  5327  0041AC                     __end_of___fpclassifyf:
  5328                           	opt callstack 0
  5329                           
  5330 ;; *************** function ___fltol *****************
  5331 ;; Defined at:
  5332 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  f1              4    3[COMRAM] int 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  exp1            1   12[COMRAM] unsigned char 
  5337 ;;  sign1           1   11[COMRAM] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  4    3[COMRAM] long 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5347 ;;      Params:         4       0       0       0       0       0       0       0       0
  5348 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5349 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5350 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5351 ;;Total ram usage:       10 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    2
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;;		_efgtoa
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text15
  5363  003EA4                     __ptext15:
  5364                           	opt callstack 0
  5365  003EA4                     ___fltol:
  5366                           	opt callstack 24
  5367  003EA4  3406               	rlcf	(___fltol@f1+2)^0,w,c
  5368  003EA6  3407               	rlcf	(___fltol@f1+3)^0,w,c
  5369  003EA8  6E0D               	movwf	___fltol@exp1^0,c
  5370  003EAA  500D               	movf	___fltol@exp1^0,w,c
  5371  003EAC  A4D8               	btfss	status,2,c
  5372  003EAE  EF5B  F01F         	goto	u7981
  5373  003EB2  EF5D  F01F         	goto	u7980
  5374  003EB6                     u7981:
  5375  003EB6  EF67  F01F         	goto	l6103
  5376  003EBA                     u7980:
  5377  003EBA                     l6099:
  5378  003EBA  0E00               	movlw	0
  5379  003EBC  6E04               	movwf	?___fltol^0,c
  5380  003EBE  0E00               	movlw	0
  5381  003EC0  6E05               	movwf	(?___fltol+1)^0,c
  5382  003EC2  0E00               	movlw	0
  5383  003EC4  6E06               	movwf	(?___fltol+2)^0,c
  5384  003EC6  0E00               	movlw	0
  5385  003EC8  6E07               	movwf	(?___fltol+3)^0,c
  5386  003ECA  EFD4  F01F         	goto	l784
  5387  003ECE                     l6103:
  5388  003ECE  C004  F008         	movff	___fltol@f1,??___fltol
  5389  003ED2  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5390  003ED6  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5391  003EDA  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5392  003EDE  0E20               	movlw	32
  5393  003EE0  EF77  F01F         	goto	u7990
  5394  003EE4                     u7995:
  5395  003EE4  90D8               	bcf	status,0,c
  5396  003EE6  320B               	rrcf	(??___fltol+3)^0,f,c
  5397  003EE8  320A               	rrcf	(??___fltol+2)^0,f,c
  5398  003EEA  3209               	rrcf	(??___fltol+1)^0,f,c
  5399  003EEC  3208               	rrcf	??___fltol^0,f,c
  5400  003EEE                     u7990:
  5401  003EEE  2EE8               	decfsz	wreg,f,c
  5402  003EF0  EF72  F01F         	goto	u7995
  5403  003EF4  5008               	movf	??___fltol^0,w,c
  5404  003EF6  6E0C               	movwf	___fltol@sign1^0,c
  5405  003EF8  8E06               	bsf	(___fltol@f1+2)^0,7,c
  5406  003EFA  0EFF               	movlw	255
  5407  003EFC  1604               	andwf	___fltol@f1^0,f,c
  5408  003EFE  0EFF               	movlw	255
  5409  003F00  1605               	andwf	(___fltol@f1+1)^0,f,c
  5410  003F02  0EFF               	movlw	255
  5411  003F04  1606               	andwf	(___fltol@f1+2)^0,f,c
  5412  003F06  0E00               	movlw	0
  5413  003F08  1607               	andwf	(___fltol@f1+3)^0,f,c
  5414  003F0A  0E96               	movlw	150
  5415  003F0C  5E0D               	subwf	___fltol@exp1^0,f,c
  5416  003F0E  BE0D               	btfsc	___fltol@exp1^0,7,c
  5417  003F10  EF8E  F01F         	goto	u8000
  5418  003F14  EF8C  F01F         	goto	u8001
  5419  003F18                     u8001:
  5420  003F18  EFA4  F01F         	goto	l6123
  5421  003F1C                     u8000:
  5422  003F1C  500D               	movf	___fltol@exp1^0,w,c
  5423  003F1E  0A80               	xorlw	128
  5424  003F20  0F97               	addlw	151
  5425  003F22  B0D8               	btfsc	status,0,c
  5426  003F24  EF96  F01F         	goto	u8011
  5427  003F28  EF98  F01F         	goto	u8010
  5428  003F2C                     u8011:
  5429  003F2C  EF9A  F01F         	goto	l6119
  5430  003F30                     u8010:
  5431  003F30  EF5D  F01F         	goto	l6099
  5432  003F34                     l6119:
  5433  003F34  90D8               	bcf	status,0,c
  5434  003F36  3207               	rrcf	(___fltol@f1+3)^0,f,c
  5435  003F38  3206               	rrcf	(___fltol@f1+2)^0,f,c
  5436  003F3A  3205               	rrcf	(___fltol@f1+1)^0,f,c
  5437  003F3C  3204               	rrcf	___fltol@f1^0,f,c
  5438  003F3E  3E0D               	incfsz	___fltol@exp1^0,f,c
  5439  003F40  EF9A  F01F         	goto	l6119
  5440  003F44  EFBC  F01F         	goto	l6133
  5441  003F48                     l6123:
  5442  003F48  0E1F               	movlw	31
  5443  003F4A  640D               	cpfsgt	___fltol@exp1^0,c
  5444  003F4C  EFAA  F01F         	goto	u8021
  5445  003F50  EFAC  F01F         	goto	u8020
  5446  003F54                     u8021:
  5447  003F54  EFB4  F01F         	goto	l6131
  5448  003F58                     u8020:
  5449  003F58  EF5D  F01F         	goto	l6099
  5450  003F5C                     l6129:
  5451  003F5C  90D8               	bcf	status,0,c
  5452  003F5E  3604               	rlcf	___fltol@f1^0,f,c
  5453  003F60  3605               	rlcf	(___fltol@f1+1)^0,f,c
  5454  003F62  3606               	rlcf	(___fltol@f1+2)^0,f,c
  5455  003F64  3607               	rlcf	(___fltol@f1+3)^0,f,c
  5456  003F66  060D               	decf	___fltol@exp1^0,f,c
  5457  003F68                     l6131:
  5458  003F68  500D               	movf	___fltol@exp1^0,w,c
  5459  003F6A  A4D8               	btfss	status,2,c
  5460  003F6C  EFBA  F01F         	goto	u8031
  5461  003F70  EFBC  F01F         	goto	u8030
  5462  003F74                     u8031:
  5463  003F74  EFAE  F01F         	goto	l6129
  5464  003F78                     u8030:
  5465  003F78                     l6133:
  5466  003F78  500C               	movf	___fltol@sign1^0,w,c
  5467  003F7A  B4D8               	btfsc	status,2,c
  5468  003F7C  EFC2  F01F         	goto	u8041
  5469  003F80  EFC4  F01F         	goto	u8040
  5470  003F84                     u8041:
  5471  003F84  EFCC  F01F         	goto	l6137
  5472  003F88                     u8040:
  5473  003F88  1E07               	comf	(___fltol@f1+3)^0,f,c
  5474  003F8A  1E06               	comf	(___fltol@f1+2)^0,f,c
  5475  003F8C  1E05               	comf	(___fltol@f1+1)^0,f,c
  5476  003F8E  6C04               	negf	___fltol@f1^0,c
  5477  003F90  0E00               	movlw	0
  5478  003F92  2205               	addwfc	(___fltol@f1+1)^0,f,c
  5479  003F94  2206               	addwfc	(___fltol@f1+2)^0,f,c
  5480  003F96  2207               	addwfc	(___fltol@f1+3)^0,f,c
  5481  003F98                     l6137:
  5482  003F98  C004  F004         	movff	___fltol@f1,?___fltol
  5483  003F9C  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5484  003FA0  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5485  003FA4  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5486  003FA8                     l784:
  5487  003FA8  0012               	return		;funcret
  5488  003FAA                     __end_of___fltol:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function ___fleq *****************
  5492 ;; Defined at:
  5493 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  ff1             4    3[COMRAM] long 
  5496 ;;  ff2             4    7[COMRAM] long 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;		None               void
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5508 ;;      Params:         8       0       0       0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5510 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5511 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5512 ;;Total ram usage:       12 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    2
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_efgtoa
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text16
  5523  004582                     __ptext16:
  5524                           	opt callstack 0
  5525  004582                     ___fleq:
  5526                           	opt callstack 24
  5527  004582  0E00               	movlw	0
  5528  004584  1404               	andwf	___fleq@ff1^0,w,c
  5529  004586  6E0C               	movwf	??___fleq^0,c
  5530  004588  0E00               	movlw	0
  5531  00458A  1405               	andwf	(___fleq@ff1+1)^0,w,c
  5532  00458C  6E0D               	movwf	(??___fleq+1)^0,c
  5533  00458E  0E80               	movlw	128
  5534  004590  1406               	andwf	(___fleq@ff1+2)^0,w,c
  5535  004592  6E0E               	movwf	(??___fleq+2)^0,c
  5536  004594  0E7F               	movlw	127
  5537  004596  1407               	andwf	(___fleq@ff1+3)^0,w,c
  5538  004598  6E0F               	movwf	(??___fleq+3)^0,c
  5539  00459A  500C               	movf	??___fleq^0,w,c
  5540  00459C  100D               	iorwf	(??___fleq+1)^0,w,c
  5541  00459E  100E               	iorwf	(??___fleq+2)^0,w,c
  5542  0045A0  100F               	iorwf	(??___fleq+3)^0,w,c
  5543  0045A2  A4D8               	btfss	status,2,c
  5544  0045A4  EFD6  F022         	goto	u7891
  5545  0045A8  EFD8  F022         	goto	u7890
  5546  0045AC                     u7891:
  5547  0045AC  EFE0  F022         	goto	l6055
  5548  0045B0                     u7890:
  5549  0045B0  0E00               	movlw	0
  5550  0045B2  6E04               	movwf	___fleq@ff1^0,c
  5551  0045B4  0E00               	movlw	0
  5552  0045B6  6E05               	movwf	(___fleq@ff1+1)^0,c
  5553  0045B8  0E00               	movlw	0
  5554  0045BA  6E06               	movwf	(___fleq@ff1+2)^0,c
  5555  0045BC  0E00               	movlw	0
  5556  0045BE  6E07               	movwf	(___fleq@ff1+3)^0,c
  5557  0045C0                     l6055:
  5558  0045C0  0E00               	movlw	0
  5559  0045C2  1408               	andwf	___fleq@ff2^0,w,c
  5560  0045C4  6E0C               	movwf	??___fleq^0,c
  5561  0045C6  0E00               	movlw	0
  5562  0045C8  1409               	andwf	(___fleq@ff2+1)^0,w,c
  5563  0045CA  6E0D               	movwf	(??___fleq+1)^0,c
  5564  0045CC  0E80               	movlw	128
  5565  0045CE  140A               	andwf	(___fleq@ff2+2)^0,w,c
  5566  0045D0  6E0E               	movwf	(??___fleq+2)^0,c
  5567  0045D2  0E7F               	movlw	127
  5568  0045D4  140B               	andwf	(___fleq@ff2+3)^0,w,c
  5569  0045D6  6E0F               	movwf	(??___fleq+3)^0,c
  5570  0045D8  500C               	movf	??___fleq^0,w,c
  5571  0045DA  100D               	iorwf	(??___fleq+1)^0,w,c
  5572  0045DC  100E               	iorwf	(??___fleq+2)^0,w,c
  5573  0045DE  100F               	iorwf	(??___fleq+3)^0,w,c
  5574  0045E0  A4D8               	btfss	status,2,c
  5575  0045E2  EFF5  F022         	goto	u7901
  5576  0045E6  EFF7  F022         	goto	u7900
  5577  0045EA                     u7901:
  5578  0045EA  EFFF  F022         	goto	l6059
  5579  0045EE                     u7900:
  5580  0045EE  0E00               	movlw	0
  5581  0045F0  6E08               	movwf	___fleq@ff2^0,c
  5582  0045F2  0E00               	movlw	0
  5583  0045F4  6E09               	movwf	(___fleq@ff2+1)^0,c
  5584  0045F6  0E00               	movlw	0
  5585  0045F8  6E0A               	movwf	(___fleq@ff2+2)^0,c
  5586  0045FA  0E00               	movlw	0
  5587  0045FC  6E0B               	movwf	(___fleq@ff2+3)^0,c
  5588  0045FE                     l6059:
  5589  0045FE  5008               	movf	___fleq@ff2^0,w,c
  5590  004600  1804               	xorwf	___fleq@ff1^0,w,c
  5591  004602  E10F               	bnz	u7910
  5592  004604  5009               	movf	(___fleq@ff2+1)^0,w,c
  5593  004606  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  5594  004608  E10C               	bnz	u7910
  5595  00460A  500A               	movf	(___fleq@ff2+2)^0,w,c
  5596  00460C  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  5597  00460E  E109               	bnz	u7910
  5598  004610  500B               	movf	(___fleq@ff2+3)^0,w,c
  5599  004612  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  5600  004614  B4D8               	btfsc	status,2,c
  5601  004616  EF0F  F023         	goto	u7911
  5602  00461A  EF11  F023         	goto	u7910
  5603  00461E                     u7911:
  5604  00461E  EF14  F023         	goto	l6063
  5605  004622                     u7910:
  5606  004622  90D8               	bcf	status,0,c
  5607  004624  EF15  F023         	goto	l746
  5608  004628                     l6063:
  5609  004628  80D8               	bsf	status,0,c
  5610  00462A                     l746:
  5611  00462A  0012               	return		;funcret
  5612  00462C                     __end_of___fleq:
  5613                           	opt callstack 0
  5614                           
  5615 ;; *************** function ___awmod *****************
  5616 ;; Defined at:
  5617 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  dividend        2    3[COMRAM] int 
  5620 ;;  divisor         2    5[COMRAM] int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  sign            1    8[COMRAM] unsigned char 
  5623 ;;  counter         1    7[COMRAM] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2    3[COMRAM] int 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5633 ;;      Params:         4       0       0       0       0       0       0       0       0
  5634 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5636 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5637 ;;Total ram usage:        6 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    2
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_efgtoa
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text17
  5648  0044D2                     __ptext17:
  5649                           	opt callstack 0
  5650  0044D2                     ___awmod:
  5651                           	opt callstack 24
  5652  0044D2  0E00               	movlw	0
  5653  0044D4  6E09               	movwf	___awmod@sign^0,c
  5654  0044D6  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  5655  0044D8  EF72  F022         	goto	u7830
  5656  0044DC  EF70  F022         	goto	u7831
  5657  0044E0                     u7831:
  5658  0044E0  EF78  F022         	goto	l6023
  5659  0044E4                     u7830:
  5660  0044E4  6C04               	negf	___awmod@dividend^0,c
  5661  0044E6  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5662  0044E8  B0D8               	btfsc	status,0,c
  5663  0044EA  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5664  0044EC  0E01               	movlw	1
  5665  0044EE  6E09               	movwf	___awmod@sign^0,c
  5666  0044F0                     l6023:
  5667  0044F0  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  5668  0044F2  EF7F  F022         	goto	u7840
  5669  0044F6  EF7D  F022         	goto	u7841
  5670  0044FA                     u7841:
  5671  0044FA  EF83  F022         	goto	l6027
  5672  0044FE                     u7840:
  5673  0044FE  6C06               	negf	___awmod@divisor^0,c
  5674  004500  1E07               	comf	(___awmod@divisor+1)^0,f,c
  5675  004502  B0D8               	btfsc	status,0,c
  5676  004504  2A07               	incf	(___awmod@divisor+1)^0,f,c
  5677  004506                     l6027:
  5678  004506  5006               	movf	___awmod@divisor^0,w,c
  5679  004508  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  5680  00450A  B4D8               	btfsc	status,2,c
  5681  00450C  EF8A  F022         	goto	u7851
  5682  004510  EF8C  F022         	goto	u7850
  5683  004514                     u7851:
  5684  004514  EFB0  F022         	goto	l6043
  5685  004518                     u7850:
  5686  004518  0E01               	movlw	1
  5687  00451A  6E08               	movwf	___awmod@counter^0,c
  5688  00451C  EF94  F022         	goto	l6033
  5689  004520                     l6031:
  5690  004520  90D8               	bcf	status,0,c
  5691  004522  3606               	rlcf	___awmod@divisor^0,f,c
  5692  004524  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  5693  004526  2A08               	incf	___awmod@counter^0,f,c
  5694  004528                     l6033:
  5695  004528  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5696  00452A  EF99  F022         	goto	u7861
  5697  00452E  EF9B  F022         	goto	u7860
  5698  004532                     u7861:
  5699  004532  EF90  F022         	goto	l6031
  5700  004536                     u7860:
  5701  004536                     l6035:
  5702  004536  5006               	movf	___awmod@divisor^0,w,c
  5703  004538  5C04               	subwf	___awmod@dividend^0,w,c
  5704  00453A  5007               	movf	(___awmod@divisor+1)^0,w,c
  5705  00453C  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  5706  00453E  A0D8               	btfss	status,0,c
  5707  004540  EFA4  F022         	goto	u7871
  5708  004544  EFA6  F022         	goto	u7870
  5709  004548                     u7871:
  5710  004548  EFAA  F022         	goto	l6039
  5711  00454C                     u7870:
  5712  00454C  5006               	movf	___awmod@divisor^0,w,c
  5713  00454E  5E04               	subwf	___awmod@dividend^0,f,c
  5714  004550  5007               	movf	(___awmod@divisor+1)^0,w,c
  5715  004552  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  5716  004554                     l6039:
  5717  004554  90D8               	bcf	status,0,c
  5718  004556  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  5719  004558  3206               	rrcf	___awmod@divisor^0,f,c
  5720  00455A  2E08               	decfsz	___awmod@counter^0,f,c
  5721  00455C  EF9B  F022         	goto	l6035
  5722  004560                     l6043:
  5723  004560  5009               	movf	___awmod@sign^0,w,c
  5724  004562  B4D8               	btfsc	status,2,c
  5725  004564  EFB6  F022         	goto	u7881
  5726  004568  EFB8  F022         	goto	u7880
  5727  00456C                     u7881:
  5728  00456C  EFBC  F022         	goto	l6047
  5729  004570                     u7880:
  5730  004570  6C04               	negf	___awmod@dividend^0,c
  5731  004572  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5732  004574  B0D8               	btfsc	status,0,c
  5733  004576  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5734  004578                     l6047:
  5735  004578  C004  F004         	movff	___awmod@dividend,?___awmod
  5736  00457C  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  5737  004580  0012               	return		;funcret
  5738  004582                     __end_of___awmod:
  5739                           	opt callstack 0
  5740                           
  5741 ;; *************** function ___awdiv *****************
  5742 ;; Defined at:
  5743 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  dividend        2    3[COMRAM] int 
  5746 ;;  divisor         2    5[COMRAM] int 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  quotient        2    9[COMRAM] int 
  5749 ;;  sign            1    8[COMRAM] unsigned char 
  5750 ;;  counter         1    7[COMRAM] unsigned char 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  2    3[COMRAM] int 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5760 ;;      Params:         4       0       0       0       0       0       0       0       0
  5761 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5763 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5764 ;;Total ram usage:        8 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    2
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_efgtoa
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text18
  5775  00434C                     __ptext18:
  5776                           	opt callstack 0
  5777  00434C                     ___awdiv:
  5778                           	opt callstack 24
  5779  00434C  0E00               	movlw	0
  5780  00434E  6E09               	movwf	___awdiv@sign^0,c
  5781  004350  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  5782  004352  EFAF  F021         	goto	u7770
  5783  004356  EFAD  F021         	goto	u7771
  5784  00435A                     u7771:
  5785  00435A  EFB5  F021         	goto	l5979
  5786  00435E                     u7770:
  5787  00435E  6C06               	negf	___awdiv@divisor^0,c
  5788  004360  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  5789  004362  B0D8               	btfsc	status,0,c
  5790  004364  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  5791  004366  0E01               	movlw	1
  5792  004368  6E09               	movwf	___awdiv@sign^0,c
  5793  00436A                     l5979:
  5794  00436A  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  5795  00436C  EFBC  F021         	goto	u7780
  5796  004370  EFBA  F021         	goto	u7781
  5797  004374                     u7781:
  5798  004374  EFC2  F021         	goto	l5985
  5799  004378                     u7780:
  5800  004378  6C04               	negf	___awdiv@dividend^0,c
  5801  00437A  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  5802  00437C  B0D8               	btfsc	status,0,c
  5803  00437E  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  5804  004380  0E01               	movlw	1
  5805  004382  1A09               	xorwf	___awdiv@sign^0,f,c
  5806  004384                     l5985:
  5807  004384  0E00               	movlw	0
  5808  004386  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  5809  004388  0E00               	movlw	0
  5810  00438A  6E0A               	movwf	___awdiv@quotient^0,c
  5811  00438C  5006               	movf	___awdiv@divisor^0,w,c
  5812  00438E  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  5813  004390  B4D8               	btfsc	status,2,c
  5814  004392  EFCD  F021         	goto	u7791
  5815  004396  EFCF  F021         	goto	u7790
  5816  00439A                     u7791:
  5817  00439A  EFF7  F021         	goto	l6007
  5818  00439E                     u7790:
  5819  00439E  0E01               	movlw	1
  5820  0043A0  6E08               	movwf	___awdiv@counter^0,c
  5821  0043A2  EFD7  F021         	goto	l5993
  5822  0043A6                     l5991:
  5823  0043A6  90D8               	bcf	status,0,c
  5824  0043A8  3606               	rlcf	___awdiv@divisor^0,f,c
  5825  0043AA  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  5826  0043AC  2A08               	incf	___awdiv@counter^0,f,c
  5827  0043AE                     l5993:
  5828  0043AE  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  5829  0043B0  EFDC  F021         	goto	u7801
  5830  0043B4  EFDE  F021         	goto	u7800
  5831  0043B8                     u7801:
  5832  0043B8  EFD3  F021         	goto	l5991
  5833  0043BC                     u7800:
  5834  0043BC                     l5995:
  5835  0043BC  90D8               	bcf	status,0,c
  5836  0043BE  360A               	rlcf	___awdiv@quotient^0,f,c
  5837  0043C0  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  5838  0043C2  5006               	movf	___awdiv@divisor^0,w,c
  5839  0043C4  5C04               	subwf	___awdiv@dividend^0,w,c
  5840  0043C6  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5841  0043C8  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  5842  0043CA  A0D8               	btfss	status,0,c
  5843  0043CC  EFEA  F021         	goto	u7811
  5844  0043D0  EFEC  F021         	goto	u7810
  5845  0043D4                     u7811:
  5846  0043D4  EFF1  F021         	goto	l6003
  5847  0043D8                     u7810:
  5848  0043D8  5006               	movf	___awdiv@divisor^0,w,c
  5849  0043DA  5E04               	subwf	___awdiv@dividend^0,f,c
  5850  0043DC  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5851  0043DE  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  5852  0043E0  800A               	bsf	___awdiv@quotient^0,0,c
  5853  0043E2                     l6003:
  5854  0043E2  90D8               	bcf	status,0,c
  5855  0043E4  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  5856  0043E6  3206               	rrcf	___awdiv@divisor^0,f,c
  5857  0043E8  2E08               	decfsz	___awdiv@counter^0,f,c
  5858  0043EA  EFDE  F021         	goto	l5995
  5859  0043EE                     l6007:
  5860  0043EE  5009               	movf	___awdiv@sign^0,w,c
  5861  0043F0  B4D8               	btfsc	status,2,c
  5862  0043F2  EFFD  F021         	goto	u7821
  5863  0043F6  EFFF  F021         	goto	u7820
  5864  0043FA                     u7821:
  5865  0043FA  EF03  F022         	goto	l6011
  5866  0043FE                     u7820:
  5867  0043FE  6C0A               	negf	___awdiv@quotient^0,c
  5868  004400  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  5869  004402  B0D8               	btfsc	status,0,c
  5870  004404  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  5871  004406                     l6011:
  5872  004406  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  5873  00440A  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  5874  00440E  0012               	return		;funcret
  5875  004410                     __end_of___awdiv:
  5876                           	opt callstack 0
  5877                           
  5878 ;; *************** function _dtoa *****************
  5879 ;; Defined at:
  5880 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5883 ;;		 -> sprintf@f(6), 
  5884 ;;  d               8   32[COMRAM] long long 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  n               8   56[COMRAM] long long 
  5887 ;;  i               2   64[COMRAM] int 
  5888 ;;  s               2   54[COMRAM] int 
  5889 ;;  w               2   52[COMRAM] int 
  5890 ;;  p               2   50[COMRAM] int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2   30[COMRAM] int 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:        10       0       0       0       0       0       0       0       0
  5901 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5902 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5903 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:       36 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    6
  5907 ;; This function calls:
  5908 ;;		___aodiv
  5909 ;;		___aomod
  5910 ;;		_abs
  5911 ;;		_pad
  5912 ;; This function is called by:
  5913 ;;		_vfpfcnvrt
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text19
  5918  002F10                     __ptext19:
  5919                           	opt callstack 0
  5920  002F10                     _dtoa:
  5921                           	opt callstack 21
  5922  002F10                     
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5924  002F10  C021  F039         	movff	dtoa@d,dtoa@n
  5925  002F14  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5926  002F18  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5927  002F1C  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5928  002F20  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5929  002F24  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5930  002F28  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5931  002F2C  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5932  002F30                     
  5933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5934  002F30  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5935  002F32  EF9D  F017         	goto	u8201
  5936  002F36  EFA0  F017         	goto	u8200
  5937  002F3A                     u8201:
  5938  002F3A  0E01               	movlw	1
  5939  002F3C  EFA1  F017         	goto	u8210
  5940  002F40                     u8200:
  5941  002F40  0E00               	movlw	0
  5942  002F42                     u8210:
  5943  002F42  6E37               	movwf	dtoa@s^0,c
  5944  002F44  6A38               	clrf	(dtoa@s+1)^0,c
  5945                           
  5946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5947  002F46  5037               	movf	dtoa@s^0,w,c
  5948  002F48  1038               	iorwf	(dtoa@s+1)^0,w,c
  5949  002F4A  B4D8               	btfsc	status,2,c
  5950  002F4C  EFAA  F017         	goto	u8221
  5951  002F50  EFAC  F017         	goto	u8220
  5952  002F54                     u8221:
  5953  002F54  EFBC  F017         	goto	l6203
  5954  002F58                     u8220:
  5955  002F58                     
  5956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5957  002F58  1E40               	comf	(dtoa@n+7)^0,f,c
  5958  002F5A  1E3F               	comf	(dtoa@n+6)^0,f,c
  5959  002F5C  1E3E               	comf	(dtoa@n+5)^0,f,c
  5960  002F5E  1E3D               	comf	(dtoa@n+4)^0,f,c
  5961  002F60  1E3C               	comf	(dtoa@n+3)^0,f,c
  5962  002F62  1E3B               	comf	(dtoa@n+2)^0,f,c
  5963  002F64  1E3A               	comf	(dtoa@n+1)^0,f,c
  5964  002F66  6C39               	negf	dtoa@n^0,c
  5965  002F68  0E00               	movlw	0
  5966  002F6A  223A               	addwfc	(dtoa@n+1)^0,f,c
  5967  002F6C  223B               	addwfc	(dtoa@n+2)^0,f,c
  5968  002F6E  223C               	addwfc	(dtoa@n+3)^0,f,c
  5969  002F70  223D               	addwfc	(dtoa@n+4)^0,f,c
  5970  002F72  223E               	addwfc	(dtoa@n+5)^0,f,c
  5971  002F74  223F               	addwfc	(dtoa@n+6)^0,f,c
  5972  002F76  2240               	addwfc	(dtoa@n+7)^0,f,c
  5973  002F78                     l6203:
  5974                           
  5975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5976  002F78  0100               	movlb	0	; () banked
  5977  002F7A  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  5978  002F7C  EFC2  F017         	goto	u8231
  5979  002F80  EFC4  F017         	goto	u8230
  5980  002F84                     u8231:
  5981  002F84  EFC5  F017         	goto	l6207
  5982  002F88                     u8230:
  5983  002F88                     
  5984                           ; BSR set to: 0
  5985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5986  002F88  925A               	bcf	_flags^0,1,c
  5987  002F8A                     l6207:
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5991  002F8A  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  5992  002F8C  EFD2  F017         	goto	u8240
  5993  002F90  51F6               	movf	(_prec+1)& (0+255),w,b
  5994  002F92  E106               	bnz	u8241
  5995  002F94  05F5               	decf	_prec& (0+255),w,b
  5996  002F96  B0D8               	btfsc	status,0,c
  5997  002F98  EFD0  F017         	goto	u8241
  5998  002F9C  EFD2  F017         	goto	u8240
  5999  002FA0                     u8241:
  6000  002FA0  EFD8  F017         	goto	l327
  6001  002FA4                     u8240:
  6002  002FA4                     
  6003                           ; BSR set to: 0
  6004  002FA4  0E00               	movlw	0
  6005  002FA6  6E34               	movwf	(dtoa@p+1)^0,c
  6006  002FA8  0E01               	movlw	1
  6007  002FAA  6E33               	movwf	dtoa@p^0,c
  6008  002FAC  EFDC  F017         	goto	l329
  6009  002FB0                     l327:
  6010                           
  6011                           ; BSR set to: 0
  6012  002FB0  C0F5  F033         	movff	_prec,dtoa@p
  6013  002FB4  C0F6  F034         	movff	_prec+1,dtoa@p+1
  6014  002FB8                     l329:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6018  002FB8  C0F3  F035         	movff	_width,dtoa@w
  6019  002FBC  C0F4  F036         	movff	_width+1,dtoa@w+1
  6020  002FC0                     
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6023  002FC0  5037               	movf	dtoa@s^0,w,c
  6024  002FC2  1038               	iorwf	(dtoa@s+1)^0,w,c
  6025  002FC4  A4D8               	btfss	status,2,c
  6026  002FC6  EFE7  F017         	goto	u8251
  6027  002FCA  EFE9  F017         	goto	u8250
  6028  002FCE                     u8251:
  6029  002FCE  EFF0  F017         	goto	l6215
  6030  002FD2                     u8250:
  6031  002FD2                     
  6032                           ; BSR set to: 0
  6033  002FD2  A45A               	btfss	_flags^0,2,c
  6034  002FD4  EFEE  F017         	goto	u8261
  6035  002FD8  EFF0  F017         	goto	u8260
  6036  002FDC                     u8261:
  6037  002FDC  EFF3  F017         	goto	l6217
  6038  002FE0                     u8260:
  6039  002FE0                     l6215:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6043  002FE0  0635               	decf	dtoa@w^0,f,c
  6044  002FE2  A0D8               	btfss	status,0,c
  6045  002FE4  0636               	decf	(dtoa@w+1)^0,f,c
  6046  002FE6                     l6217:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6050  002FE6  0E00               	movlw	0
  6051  002FE8  6E42               	movwf	(dtoa@i+1)^0,c
  6052  002FEA  0E4F               	movlw	79
  6053  002FEC  6E41               	movwf	dtoa@i^0,c
  6054  002FEE                     
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6057  002FEE  0E00               	movlw	0
  6058  002FF0  0101               	movlb	1	; () banked
  6059  002FF2  6F65               	movwf	(_dbuf+79)& (0+255),b
  6060                           
  6061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6062  002FF4  EF78  F018         	goto	l6231
  6063  002FF8                     l6221:
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6066  002FF8  0641               	decf	dtoa@i^0,f,c
  6067  002FFA  A0D8               	btfss	status,0,c
  6068  002FFC  0642               	decf	(dtoa@i+1)^0,f,c
  6069  002FFE                     
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6071  002FFE  0E16               	movlw	low _dbuf
  6072  003000  2441               	addwf	dtoa@i^0,w,c
  6073  003002  6ED9               	movwf	fsr2l,c
  6074  003004  0E01               	movlw	high _dbuf
  6075  003006  2042               	addwfc	(dtoa@i+1)^0,w,c
  6076  003008  6EDA               	movwf	fsr2h,c
  6077  00300A  C039  F004         	movff	dtoa@n,___aomod@dividend
  6078  00300E  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  6079  003012  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  6080  003016  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  6081  00301A  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  6082  00301E  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  6083  003022  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  6084  003026  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  6085  00302A  0E0A               	movlw	10
  6086  00302C  6E0C               	movwf	___aomod@divisor^0,c
  6087  00302E  0E00               	movlw	0
  6088  003030  6E0D               	movwf	(___aomod@divisor+1)^0,c
  6089  003032  0E00               	movlw	0
  6090  003034  6E0E               	movwf	(___aomod@divisor+2)^0,c
  6091  003036  0E00               	movlw	0
  6092  003038  6E0F               	movwf	(___aomod@divisor+3)^0,c
  6093  00303A  0E00               	movlw	0
  6094  00303C  6E10               	movwf	(___aomod@divisor+4)^0,c
  6095  00303E  0E00               	movlw	0
  6096  003040  6E11               	movwf	(___aomod@divisor+5)^0,c
  6097  003042  0E00               	movlw	0
  6098  003044  6E12               	movwf	(___aomod@divisor+6)^0,c
  6099  003046  0E00               	movlw	0
  6100  003048  6E13               	movwf	(___aomod@divisor+7)^0,c
  6101  00304A  EC1C  F01E         	call	___aomod	;wreg free
  6102  00304E  C004  F029         	movff	?___aomod,??_dtoa
  6103  003052  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  6104  003056  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  6105  00305A  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  6106  00305E  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  6107  003062  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  6108  003066  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  6109  00306A  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  6110  00306E  C029  F016         	movff	??_dtoa,abs@a
  6111  003072  C02B  F017         	movff	??_dtoa+2,abs@a+1
  6112  003076  EC91  F025         	call	_abs	;wreg free
  6113  00307A  5016               	movf	?_abs^0,w,c
  6114  00307C  0F30               	addlw	48
  6115  00307E  6EDF               	movwf	indf2,c
  6116  003080                     
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6118  003080  0633               	decf	dtoa@p^0,f,c
  6119  003082  A0D8               	btfss	status,0,c
  6120  003084  0634               	decf	(dtoa@p+1)^0,f,c
  6121  003086                     
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6123  003086  0635               	decf	dtoa@w^0,f,c
  6124  003088  A0D8               	btfss	status,0,c
  6125  00308A  0636               	decf	(dtoa@w+1)^0,f,c
  6126  00308C                     
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6128  00308C  C039  F004         	movff	dtoa@n,___aodiv@dividend
  6129  003090  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  6130  003094  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  6131  003098  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  6132  00309C  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  6133  0030A0  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  6134  0030A4  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  6135  0030A8  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  6136  0030AC  0E0A               	movlw	10
  6137  0030AE  6E0C               	movwf	___aodiv@divisor^0,c
  6138  0030B0  0E00               	movlw	0
  6139  0030B2  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  6140  0030B4  0E00               	movlw	0
  6141  0030B6  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  6142  0030B8  0E00               	movlw	0
  6143  0030BA  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  6144  0030BC  0E00               	movlw	0
  6145  0030BE  6E10               	movwf	(___aodiv@divisor+4)^0,c
  6146  0030C0  0E00               	movlw	0
  6147  0030C2  6E11               	movwf	(___aodiv@divisor+5)^0,c
  6148  0030C4  0E00               	movlw	0
  6149  0030C6  6E12               	movwf	(___aodiv@divisor+6)^0,c
  6150  0030C8  0E00               	movlw	0
  6151  0030CA  6E13               	movwf	(___aodiv@divisor+7)^0,c
  6152  0030CC  EC9F  F01C         	call	___aodiv	;wreg free
  6153  0030D0  C004  F039         	movff	?___aodiv,dtoa@n
  6154  0030D4  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  6155  0030D8  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  6156  0030DC  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  6157  0030E0  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  6158  0030E4  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  6159  0030E8  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  6160  0030EC  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  6161  0030F0                     l6231:
  6162                           
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6164  0030F0  BE42               	btfsc	(dtoa@i+1)^0,7,c
  6165  0030F2  EF83  F018         	goto	u8271
  6166  0030F6  5042               	movf	(dtoa@i+1)^0,w,c
  6167  0030F8  E108               	bnz	u8270
  6168  0030FA  0441               	decf	dtoa@i^0,w,c
  6169  0030FC  A0D8               	btfss	status,0,c
  6170  0030FE  EF83  F018         	goto	u8271
  6171  003102  EF85  F018         	goto	u8270
  6172  003106                     u8271:
  6173  003106  EFB5  F018         	goto	l6241
  6174  00310A                     u8270:
  6175  00310A  5039               	movf	dtoa@n^0,w,c
  6176  00310C  103A               	iorwf	(dtoa@n+1)^0,w,c
  6177  00310E  103B               	iorwf	(dtoa@n+2)^0,w,c
  6178  003110  103C               	iorwf	(dtoa@n+3)^0,w,c
  6179  003112  103D               	iorwf	(dtoa@n+4)^0,w,c
  6180  003114  103E               	iorwf	(dtoa@n+5)^0,w,c
  6181  003116  103F               	iorwf	(dtoa@n+6)^0,w,c
  6182  003118  1040               	iorwf	(dtoa@n+7)^0,w,c
  6183  00311A  A4D8               	btfss	status,2,c
  6184  00311C  EF92  F018         	goto	u8281
  6185  003120  EF94  F018         	goto	u8280
  6186  003124                     u8281:
  6187  003124  EFFC  F017         	goto	l6221
  6188  003128                     u8280:
  6189  003128  BE34               	btfsc	(dtoa@p+1)^0,7,c
  6190  00312A  EFA1  F018         	goto	u8290
  6191  00312E  5034               	movf	(dtoa@p+1)^0,w,c
  6192  003130  E106               	bnz	u8291
  6193  003132  0433               	decf	dtoa@p^0,w,c
  6194  003134  B0D8               	btfsc	status,0,c
  6195  003136  EF9F  F018         	goto	u8291
  6196  00313A  EFA1  F018         	goto	u8290
  6197  00313E                     u8291:
  6198  00313E  EFFC  F017         	goto	l6221
  6199  003142                     u8290:
  6200  003142  BE36               	btfsc	(dtoa@w+1)^0,7,c
  6201  003144  EFAC  F018         	goto	u8301
  6202  003148  5036               	movf	(dtoa@w+1)^0,w,c
  6203  00314A  E108               	bnz	u8300
  6204  00314C  0435               	decf	dtoa@w^0,w,c
  6205  00314E  A0D8               	btfss	status,0,c
  6206  003150  EFAC  F018         	goto	u8301
  6207  003154  EFAE  F018         	goto	u8300
  6208  003158                     u8301:
  6209  003158  EFB5  F018         	goto	l6241
  6210  00315C                     u8300:
  6211  00315C  B25A               	btfsc	_flags^0,1,c
  6212  00315E  EFB3  F018         	goto	u8311
  6213  003162  EFB5  F018         	goto	u8310
  6214  003166                     u8311:
  6215  003166  EFFC  F017         	goto	l6221
  6216  00316A                     u8310:
  6217  00316A                     l6241:
  6218                           
  6219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6220  00316A  5037               	movf	dtoa@s^0,w,c
  6221  00316C  1038               	iorwf	(dtoa@s+1)^0,w,c
  6222  00316E  A4D8               	btfss	status,2,c
  6223  003170  EFBC  F018         	goto	u8321
  6224  003174  EFBE  F018         	goto	u8320
  6225  003178                     u8321:
  6226  003178  EFC5  F018         	goto	l6245
  6227  00317C                     u8320:
  6228  00317C  A45A               	btfss	_flags^0,2,c
  6229  00317E  EFC3  F018         	goto	u8331
  6230  003182  EFC5  F018         	goto	u8330
  6231  003186                     u8331:
  6232  003186  EFE3  F018         	goto	l6255
  6233  00318A                     u8330:
  6234  00318A                     l6245:
  6235                           
  6236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6237  00318A  0641               	decf	dtoa@i^0,f,c
  6238  00318C  A0D8               	btfss	status,0,c
  6239  00318E  0642               	decf	(dtoa@i+1)^0,f,c
  6240  003190                     
  6241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6242  003190  5037               	movf	dtoa@s^0,w,c
  6243  003192  1038               	iorwf	(dtoa@s+1)^0,w,c
  6244  003194  A4D8               	btfss	status,2,c
  6245  003196  EFCF  F018         	goto	u8341
  6246  00319A  EFD1  F018         	goto	u8340
  6247  00319E                     u8341:
  6248  00319E  EFD7  F018         	goto	l6251
  6249  0031A2                     u8340:
  6250  0031A2  0E00               	movlw	0
  6251  0031A4  6E32               	movwf	(_dtoa$465+1)^0,c
  6252  0031A6  0E2B               	movlw	43
  6253  0031A8  6E31               	movwf	_dtoa$465^0,c
  6254  0031AA  EFDB  F018         	goto	l6253
  6255  0031AE                     l6251:
  6256  0031AE  0E00               	movlw	0
  6257  0031B0  6E32               	movwf	(_dtoa$465+1)^0,c
  6258  0031B2  0E2D               	movlw	45
  6259  0031B4  6E31               	movwf	_dtoa$465^0,c
  6260  0031B6                     l6253:
  6261  0031B6  0E16               	movlw	low _dbuf
  6262  0031B8  2441               	addwf	dtoa@i^0,w,c
  6263  0031BA  6ED9               	movwf	fsr2l,c
  6264  0031BC  0E01               	movlw	high _dbuf
  6265  0031BE  2042               	addwfc	(dtoa@i+1)^0,w,c
  6266  0031C0  6EDA               	movwf	fsr2h,c
  6267  0031C2  C031  FFDF         	movff	_dtoa$465,indf2
  6268  0031C6                     l6255:
  6269                           
  6270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6271  0031C6  C01F  F014         	movff	dtoa@fp,pad@fp
  6272  0031CA  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  6273  0031CE  0E16               	movlw	low _dbuf
  6274  0031D0  2441               	addwf	dtoa@i^0,w,c
  6275  0031D2  6E16               	movwf	pad@buf^0,c
  6276  0031D4  0E01               	movlw	high _dbuf
  6277  0031D6  2042               	addwfc	(dtoa@i+1)^0,w,c
  6278  0031D8  6E17               	movwf	(pad@buf+1)^0,c
  6279  0031DA  C035  F018         	movff	dtoa@w,pad@p
  6280  0031DE  C036  F019         	movff	dtoa@w+1,pad@p+1
  6281  0031E2  EC08  F022         	call	_pad	;wreg free
  6282  0031E6  C014  F01F         	movff	?_pad,?_dtoa
  6283  0031EA  C015  F020         	movff	?_pad+1,?_dtoa+1
  6284  0031EE  0012               	return		;funcret
  6285  0031F0                     __end_of_dtoa:
  6286                           	opt callstack 0
  6287                           
  6288 ;; *************** function _pad *****************
  6289 ;; Defined at:
  6290 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  6293 ;;		 -> sprintf@f(6), 
  6294 ;;  buf             2   21[COMRAM] PTR unsigned char 
  6295 ;;		 -> dbuf(80), 
  6296 ;;  p               2   23[COMRAM] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  w               2   28[COMRAM] int 
  6299 ;;  i               2   26[COMRAM] int 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  2   19[COMRAM] int 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6309 ;;      Params:         6       0       0       0       0       0       0       0       0
  6310 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6311 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6312 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6313 ;;Total ram usage:       11 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    5
  6316 ;; This function calls:
  6317 ;;		_fputc
  6318 ;;		_fputs
  6319 ;;		_strlen
  6320 ;; This function is called by:
  6321 ;;		_dtoa
  6322 ;;		_efgtoa
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text20
  6327  004410                     __ptext20:
  6328                           	opt callstack 0
  6329  004410                     _pad:
  6330                           	opt callstack 21
  6331  004410                     
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6333  004410  A05A               	btfss	_flags^0,0,c
  6334  004412  EF0D  F022         	goto	u6931
  6335  004416  EF0F  F022         	goto	u6930
  6336  00441A                     u6931:
  6337  00441A  EF19  F022         	goto	l5521
  6338  00441E                     u6930:
  6339  00441E                     
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6341  00441E  C016  F00D         	movff	pad@buf,fputs@s
  6342  004422  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6343  004426  C014  F00F         	movff	pad@fp,fputs@fp
  6344  00442A  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6345  00442E  EC2D  F025         	call	_fputs	;wreg free
  6346  004432                     l5521:
  6347                           
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6349  004432  BE19               	btfsc	(pad@p+1)^0,7,c
  6350  004434  EF1E  F022         	goto	u6941
  6351  004438  EF20  F022         	goto	u6940
  6352  00443C                     u6941:
  6353  00443C  EF26  F022         	goto	l5525
  6354  004440                     u6940:
  6355  004440  C018  F01D         	movff	pad@p,pad@w
  6356  004444  C019  F01E         	movff	pad@p+1,pad@w+1
  6357  004448  EF2A  F022         	goto	l316
  6358  00444C                     l5525:
  6359  00444C  0E00               	movlw	0
  6360  00444E  6E1E               	movwf	(pad@w+1)^0,c
  6361  004450  0E00               	movlw	0
  6362  004452  6E1D               	movwf	pad@w^0,c
  6363  004454                     l316:
  6364                           
  6365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6366  004454  0E00               	movlw	0
  6367  004456  6E1C               	movwf	(pad@i+1)^0,c
  6368  004458  0E00               	movlw	0
  6369  00445A  6E1B               	movwf	pad@i^0,c
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6372  00445C  EF3C  F022         	goto	l5531
  6373  004460                     l5527:
  6374                           
  6375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6376  004460  0E00               	movlw	0
  6377  004462  6E05               	movwf	(fputc@c+1)^0,c
  6378  004464  0E20               	movlw	32
  6379  004466  6E04               	movwf	fputc@c^0,c
  6380  004468  C014  F006         	movff	pad@fp,fputc@fp
  6381  00446C  C015  F007         	movff	pad@fp+1,fputc@fp+1
  6382  004470  EC41  F021         	call	_fputc	;wreg free
  6383  004474                     
  6384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6385  004474  4A1B               	infsnz	pad@i^0,f,c
  6386  004476  2A1C               	incf	(pad@i+1)^0,f,c
  6387  004478                     l5531:
  6388                           
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6390  004478  501D               	movf	pad@w^0,w,c
  6391  00447A  5C1B               	subwf	pad@i^0,w,c
  6392  00447C  501C               	movf	(pad@i+1)^0,w,c
  6393  00447E  0A80               	xorlw	128
  6394  004480  6E1A               	movwf	??_pad^0,c
  6395  004482  501E               	movf	(pad@w+1)^0,w,c
  6396  004484  0A80               	xorlw	128
  6397  004486  581A               	subwfb	??_pad^0,w,c
  6398  004488  A0D8               	btfss	status,0,c
  6399  00448A  EF49  F022         	goto	u6951
  6400  00448E  EF4B  F022         	goto	u6950
  6401  004492                     u6951:
  6402  004492  EF30  F022         	goto	l5527
  6403  004496                     u6950:
  6404  004496                     
  6405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6406  004496  B05A               	btfsc	_flags^0,0,c
  6407  004498  EF50  F022         	goto	u6961
  6408  00449C  EF52  F022         	goto	u6960
  6409  0044A0                     u6961:
  6410  0044A0  EF5C  F022         	goto	l5535
  6411  0044A4                     u6960:
  6412  0044A4                     
  6413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6414  0044A4  C016  F00D         	movff	pad@buf,fputs@s
  6415  0044A8  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6416  0044AC  C014  F00F         	movff	pad@fp,fputs@fp
  6417  0044B0  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6418  0044B4  EC2D  F025         	call	_fputs	;wreg free
  6419  0044B8                     l5535:
  6420                           
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6422  0044B8  C016  F004         	movff	pad@buf,strlen@s
  6423  0044BC  C017  F005         	movff	pad@buf+1,strlen@s+1
  6424  0044C0  EC22  F026         	call	_strlen	;wreg free
  6425  0044C4  501D               	movf	pad@w^0,w,c
  6426  0044C6  2404               	addwf	?_strlen^0,w,c
  6427  0044C8  6E14               	movwf	?_pad^0,c
  6428  0044CA  501E               	movf	(pad@w+1)^0,w,c
  6429  0044CC  2005               	addwfc	(?_strlen+1)^0,w,c
  6430  0044CE  6E15               	movwf	(?_pad+1)^0,c
  6431  0044D0  0012               	return		;funcret
  6432  0044D2                     __end_of_pad:
  6433                           	opt callstack 0
  6434                           
  6435 ;; *************** function _strlen *****************
  6436 ;; Defined at:
  6437 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  s               2    3[COMRAM] PTR const unsigned char 
  6440 ;;		 -> dbuf(80), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  a               2    5[COMRAM] PTR const unsigned char 
  6443 ;;		 -> dbuf(80), 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    3[COMRAM] unsigned int 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6453 ;;      Params:         2       0       0       0       0       0       0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6456 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6457 ;;Total ram usage:        4 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    2
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_pad
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text21
  6468  004C44                     __ptext21:
  6469                           	opt callstack 0
  6470  004C44                     _strlen:
  6471                           	opt callstack 23
  6472  004C44  C004  F006         	movff	strlen@s,strlen@a
  6473  004C48  C005  F007         	movff	strlen@s+1,strlen@a+1
  6474  004C4C  EF2A  F026         	goto	l5305
  6475  004C50                     l5303:
  6476  004C50  4A04               	infsnz	strlen@s^0,f,c
  6477  004C52  2A05               	incf	(strlen@s+1)^0,f,c
  6478  004C54                     l5305:
  6479  004C54  C004  FFD9         	movff	strlen@s,fsr2l
  6480  004C58  C005  FFDA         	movff	strlen@s+1,fsr2h
  6481  004C5C  50DF               	movf	indf2,w,c
  6482  004C5E  A4D8               	btfss	status,2,c
  6483  004C60  EF34  F026         	goto	u6511
  6484  004C64  EF36  F026         	goto	u6510
  6485  004C68                     u6511:
  6486  004C68  EF28  F026         	goto	l5303
  6487  004C6C                     u6510:
  6488  004C6C  5006               	movf	strlen@a^0,w,c
  6489  004C6E  5C04               	subwf	strlen@s^0,w,c
  6490  004C70  6E04               	movwf	?_strlen^0,c
  6491  004C72  5007               	movf	(strlen@a+1)^0,w,c
  6492  004C74  5805               	subwfb	(strlen@s+1)^0,w,c
  6493  004C76  6E05               	movwf	(?_strlen+1)^0,c
  6494  004C78  0012               	return		;funcret
  6495  004C7A                     __end_of_strlen:
  6496                           	opt callstack 0
  6497                           
  6498 ;; *************** function _fputs *****************
  6499 ;; Defined at:
  6500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6503 ;;		 -> dbuf(80), 
  6504 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  6505 ;;		 -> sprintf@f(6), 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  i               2   17[COMRAM] int 
  6508 ;;  c               1   16[COMRAM] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2   12[COMRAM] int 
  6511 ;; Registers used:
  6512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6518 ;;      Params:         4       0       0       0       0       0       0       0       0
  6519 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6521 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6522 ;;Total ram usage:        7 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    4
  6525 ;; This function calls:
  6526 ;;		_fputc
  6527 ;; This function is called by:
  6528 ;;		_pad
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text22
  6533  004A5A                     __ptext22:
  6534                           	opt callstack 0
  6535  004A5A                     _fputs:
  6536                           	opt callstack 21
  6537  004A5A  0E00               	movlw	0
  6538  004A5C  6E13               	movwf	(fputs@i+1)^0,c
  6539  004A5E  0E00               	movlw	0
  6540  004A60  6E12               	movwf	fputs@i^0,c
  6541  004A62  EF3E  F025         	goto	l5299
  6542  004A66                     l5295:
  6543  004A66  C011  F004         	movff	fputs@c,fputc@c
  6544  004A6A  6A05               	clrf	(fputc@c+1)^0,c
  6545  004A6C  C00F  F006         	movff	fputs@fp,fputc@fp
  6546  004A70  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  6547  004A74  EC41  F021         	call	_fputc	;wreg free
  6548  004A78  4A12               	infsnz	fputs@i^0,f,c
  6549  004A7A  2A13               	incf	(fputs@i+1)^0,f,c
  6550  004A7C                     l5299:
  6551  004A7C  5012               	movf	fputs@i^0,w,c
  6552  004A7E  240D               	addwf	fputs@s^0,w,c
  6553  004A80  6ED9               	movwf	fsr2l,c
  6554  004A82  5013               	movf	(fputs@i+1)^0,w,c
  6555  004A84  200E               	addwfc	(fputs@s+1)^0,w,c
  6556  004A86  6EDA               	movwf	fsr2h,c
  6557  004A88  50DF               	movf	indf2,w,c
  6558  004A8A  6E11               	movwf	fputs@c^0,c
  6559  004A8C  5011               	movf	fputs@c^0,w,c
  6560  004A8E  A4D8               	btfss	status,2,c
  6561  004A90  EF4C  F025         	goto	u6501
  6562  004A94  EF4E  F025         	goto	u6500
  6563  004A98                     u6501:
  6564  004A98  EF33  F025         	goto	l5295
  6565  004A9C                     u6500:
  6566  004A9C  0012               	return		;funcret
  6567  004A9E                     __end_of_fputs:
  6568                           	opt callstack 0
  6569                           
  6570 ;; *************** function _fputc *****************
  6571 ;; Defined at:
  6572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  c               2    3[COMRAM] int 
  6575 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6576 ;;		 -> sprintf@f(6), 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  2    3[COMRAM] int 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6588 ;;      Params:         4       0       0       0       0       0       0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6590 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6591 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6592 ;;Total ram usage:        9 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    3
  6595 ;; This function calls:
  6596 ;;		_putch
  6597 ;; This function is called by:
  6598 ;;		_pad
  6599 ;;		_vfpfcnvrt
  6600 ;;		_fputs
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text23
  6605  004282                     __ptext23:
  6606                           	opt callstack 0
  6607  004282                     _fputc:
  6608                           	opt callstack 24
  6609  004282  5006               	movf	fputc@fp^0,w,c
  6610  004284  1007               	iorwf	(fputc@fp+1)^0,w,c
  6611  004286  B4D8               	btfsc	status,2,c
  6612  004288  EF48  F021         	goto	u6461
  6613  00428C  EF4A  F021         	goto	u6460
  6614  004290                     u6461:
  6615  004290  EF53  F021         	goto	l5283
  6616  004294                     u6460:
  6617  004294  5006               	movf	fputc@fp^0,w,c
  6618  004296  1007               	iorwf	(fputc@fp+1)^0,w,c
  6619  004298  A4D8               	btfss	status,2,c
  6620  00429A  EF51  F021         	goto	u6471
  6621  00429E  EF53  F021         	goto	u6470
  6622  0042A2                     u6471:
  6623  0042A2  EF58  F021         	goto	l5285
  6624  0042A6                     u6470:
  6625  0042A6                     l5283:
  6626  0042A6  5004               	movf	fputc@c^0,w,c
  6627  0042A8  EC07  F027         	call	_putch
  6628  0042AC  EFA5  F021         	goto	l1284
  6629  0042B0                     l5285:
  6630  0042B0  EE20 F004          	lfsr	2,4
  6631  0042B4  5006               	movf	fputc@fp^0,w,c
  6632  0042B6  26D9               	addwf	fsr2l,f,c
  6633  0042B8  5007               	movf	(fputc@fp+1)^0,w,c
  6634  0042BA  22DA               	addwfc	fsr2h,f,c
  6635  0042BC  50DE               	movf	postinc2,w,c
  6636  0042BE  10DE               	iorwf	postinc2,w,c
  6637  0042C0  B4D8               	btfsc	status,2,c
  6638  0042C2  EF65  F021         	goto	u6481
  6639  0042C6  EF67  F021         	goto	u6480
  6640  0042CA                     u6481:
  6641  0042CA  EF82  F021         	goto	l5289
  6642  0042CE                     u6480:
  6643  0042CE  EE20 F004          	lfsr	2,4
  6644  0042D2  5006               	movf	fputc@fp^0,w,c
  6645  0042D4  26D9               	addwf	fsr2l,f,c
  6646  0042D6  5007               	movf	(fputc@fp+1)^0,w,c
  6647  0042D8  22DA               	addwfc	fsr2h,f,c
  6648  0042DA  EE10 F002          	lfsr	1,2
  6649  0042DE  5006               	movf	fputc@fp^0,w,c
  6650  0042E0  26E1               	addwf	fsr1l,f,c
  6651  0042E2  5007               	movf	(fputc@fp+1)^0,w,c
  6652  0042E4  22E2               	addwfc	fsr1h,f,c
  6653  0042E6  50DE               	movf	postinc2,w,c
  6654  0042E8  5CE6               	subwf	postinc1,w,c
  6655  0042EA  50E6               	movf	postinc1,w,c
  6656  0042EC  0A80               	xorlw	128
  6657  0042EE  6E0C               	movwf	(??_fputc+4)^0,c
  6658  0042F0  50DE               	movf	postinc2,w,c
  6659  0042F2  0A80               	xorlw	128
  6660  0042F4  580C               	subwfb	(??_fputc+4)^0,w,c
  6661  0042F6  B0D8               	btfsc	status,0,c
  6662  0042F8  EF80  F021         	goto	u6491
  6663  0042FC  EF82  F021         	goto	u6490
  6664  004300                     u6491:
  6665  004300  EFA5  F021         	goto	l1284
  6666  004304                     u6490:
  6667  004304                     l5289:
  6668  004304  EE20 F002          	lfsr	2,2
  6669  004308  5006               	movf	fputc@fp^0,w,c
  6670  00430A  26D9               	addwf	fsr2l,f,c
  6671  00430C  5007               	movf	(fputc@fp+1)^0,w,c
  6672  00430E  22DA               	addwfc	fsr2h,f,c
  6673  004310  CFDE F008          	movff	postinc2,??_fputc
  6674  004314  CFDD F009          	movff	postdec2,??_fputc+1
  6675  004318  C006  FFD9         	movff	fputc@fp,fsr2l
  6676  00431C  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6677  004320  CFDE F00A          	movff	postinc2,??_fputc+2
  6678  004324  CFDD F00B          	movff	postdec2,??_fputc+3
  6679  004328  5008               	movf	??_fputc^0,w,c
  6680  00432A  240A               	addwf	(??_fputc+2)^0,w,c
  6681  00432C  6ED9               	movwf	fsr2l,c
  6682  00432E  5009               	movf	(??_fputc+1)^0,w,c
  6683  004330  200B               	addwfc	(??_fputc+3)^0,w,c
  6684  004332  6EDA               	movwf	fsr2h,c
  6685  004334  C004  FFDF         	movff	fputc@c,indf2
  6686  004338  EE20 F002          	lfsr	2,2
  6687  00433C  5006               	movf	fputc@fp^0,w,c
  6688  00433E  26D9               	addwf	fsr2l,f,c
  6689  004340  5007               	movf	(fputc@fp+1)^0,w,c
  6690  004342  22DA               	addwfc	fsr2h,f,c
  6691  004344  2ADE               	incf	postinc2,f,c
  6692  004346  0E00               	movlw	0
  6693  004348  22DD               	addwfc	postdec2,f,c
  6694  00434A                     l1284:
  6695  00434A  0012               	return		;funcret
  6696  00434C                     __end_of_fputc:
  6697                           	opt callstack 0
  6698                           
  6699 ;; *************** function _putch *****************
  6700 ;; Defined at:
  6701 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  c               1    wreg     unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  c               1    0[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6719 ;;Total ram usage:        0 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    2
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_fputc
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text24
  6730  004E0E                     __ptext24:
  6731                           	opt callstack 0
  6732  004E0E                     _putch:
  6733                           	opt callstack 24
  6734  004E0E  0012               	return		;funcret
  6735  004E10                     __end_of_putch:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _abs *****************
  6739 ;; Defined at:
  6740 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  a               2   21[COMRAM] int 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  2   21[COMRAM] int 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6754 ;;      Params:         2       0       0       0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6756 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6757 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6758 ;;Total ram usage:        4 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    2
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_dtoa
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text25
  6769  004B22                     __ptext25:
  6770                           	opt callstack 0
  6771  004B22                     _abs:
  6772                           	opt callstack 24
  6773  004B22  BE17               	btfsc	(abs@a+1)^0,7,c
  6774  004B24  EF9E  F025         	goto	u6970
  6775  004B28  5017               	movf	(abs@a+1)^0,w,c
  6776  004B2A  E106               	bnz	u6971
  6777  004B2C  0416               	decf	abs@a^0,w,c
  6778  004B2E  B0D8               	btfsc	status,0,c
  6779  004B30  EF9C  F025         	goto	u6971
  6780  004B34  EF9E  F025         	goto	u6970
  6781  004B38                     u6971:
  6782  004B38  EFAC  F025         	goto	l1173
  6783  004B3C                     u6970:
  6784  004B3C  C016  F018         	movff	abs@a,??_abs
  6785  004B40  C017  F019         	movff	abs@a+1,??_abs+1
  6786  004B44  1E18               	comf	??_abs^0,f,c
  6787  004B46  1E19               	comf	(??_abs+1)^0,f,c
  6788  004B48  4A18               	infsnz	??_abs^0,f,c
  6789  004B4A  2A19               	incf	(??_abs+1)^0,f,c
  6790  004B4C  C018  F016         	movff	??_abs,?_abs
  6791  004B50  C019  F017         	movff	??_abs+1,?_abs+1
  6792  004B54  EFB0  F025         	goto	l1176
  6793  004B58                     l1173:
  6794  004B58  C016  F016         	movff	abs@a,?_abs
  6795  004B5C  C017  F017         	movff	abs@a+1,?_abs+1
  6796  004B60                     l1176:
  6797  004B60  0012               	return		;funcret
  6798  004B62                     __end_of_abs:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function ___aomod *****************
  6802 ;; Defined at:
  6803 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  dividend        8    3[COMRAM] long long 
  6806 ;;  divisor         8   11[COMRAM] long long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  sign            1   20[COMRAM] unsigned char 
  6809 ;;  counter         1   19[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  8    3[COMRAM] long long 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6819 ;;      Params:        16       0       0       0       0       0       0       0       0
  6820 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6822 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6823 ;;Total ram usage:       18 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    2
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_dtoa
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text26
  6834  003C38                     __ptext26:
  6835                           	opt callstack 0
  6836  003C38                     ___aomod:
  6837                           	opt callstack 24
  6838  003C38  0E00               	movlw	0
  6839  003C3A  6E15               	movwf	___aomod@sign^0,c
  6840  003C3C  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6841  003C3E  EF25  F01E         	goto	u7290
  6842  003C42  EF23  F01E         	goto	u7291
  6843  003C46                     u7291:
  6844  003C46  EF37  F01E         	goto	l5669
  6845  003C4A                     u7290:
  6846  003C4A  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6847  003C4C  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6848  003C4E  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6849  003C50  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6850  003C52  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6851  003C54  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6852  003C56  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6853  003C58  6C04               	negf	___aomod@dividend^0,c
  6854  003C5A  0E00               	movlw	0
  6855  003C5C  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6856  003C5E  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6857  003C60  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6858  003C62  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6859  003C64  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6860  003C66  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6861  003C68  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6862  003C6A  0E01               	movlw	1
  6863  003C6C  6E15               	movwf	___aomod@sign^0,c
  6864  003C6E                     l5669:
  6865  003C6E  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6866  003C70  EF3E  F01E         	goto	u7300
  6867  003C74  EF3C  F01E         	goto	u7301
  6868  003C78                     u7301:
  6869  003C78  EF4E  F01E         	goto	l5673
  6870  003C7C                     u7300:
  6871  003C7C  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6872  003C7E  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6873  003C80  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6874  003C82  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6875  003C84  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6876  003C86  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6877  003C88  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6878  003C8A  6C0C               	negf	___aomod@divisor^0,c
  6879  003C8C  0E00               	movlw	0
  6880  003C8E  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6881  003C90  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6882  003C92  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6883  003C94  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6884  003C96  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6885  003C98  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6886  003C9A  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6887  003C9C                     l5673:
  6888  003C9C  500C               	movf	___aomod@divisor^0,w,c
  6889  003C9E  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6890  003CA0  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6891  003CA2  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6892  003CA4  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6893  003CA6  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6894  003CA8  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6895  003CAA  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6896  003CAC  B4D8               	btfsc	status,2,c
  6897  003CAE  EF5B  F01E         	goto	u7311
  6898  003CB2  EF5D  F01E         	goto	u7310
  6899  003CB6                     u7311:
  6900  003CB6  EFA5  F01E         	goto	l5689
  6901  003CBA                     u7310:
  6902  003CBA  0E01               	movlw	1
  6903  003CBC  6E14               	movwf	___aomod@counter^0,c
  6904  003CBE  EF6B  F01E         	goto	l5679
  6905  003CC2                     l5677:
  6906  003CC2  90D8               	bcf	status,0,c
  6907  003CC4  360C               	rlcf	___aomod@divisor^0,f,c
  6908  003CC6  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6909  003CC8  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6910  003CCA  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6911  003CCC  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6912  003CCE  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6913  003CD0  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6914  003CD2  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6915  003CD4  2A14               	incf	___aomod@counter^0,f,c
  6916  003CD6                     l5679:
  6917  003CD6  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6918  003CD8  EF70  F01E         	goto	u7321
  6919  003CDC  EF72  F01E         	goto	u7320
  6920  003CE0                     u7321:
  6921  003CE0  EF61  F01E         	goto	l5677
  6922  003CE4                     u7320:
  6923  003CE4                     l5681:
  6924  003CE4  500C               	movf	___aomod@divisor^0,w,c
  6925  003CE6  5C04               	subwf	___aomod@dividend^0,w,c
  6926  003CE8  500D               	movf	(___aomod@divisor+1)^0,w,c
  6927  003CEA  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6928  003CEC  500E               	movf	(___aomod@divisor+2)^0,w,c
  6929  003CEE  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6930  003CF0  500F               	movf	(___aomod@divisor+3)^0,w,c
  6931  003CF2  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6932  003CF4  5010               	movf	(___aomod@divisor+4)^0,w,c
  6933  003CF6  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6934  003CF8  5011               	movf	(___aomod@divisor+5)^0,w,c
  6935  003CFA  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6936  003CFC  5012               	movf	(___aomod@divisor+6)^0,w,c
  6937  003CFE  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6938  003D00  5013               	movf	(___aomod@divisor+7)^0,w,c
  6939  003D02  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6940  003D04  A0D8               	btfss	status,0,c
  6941  003D06  EF87  F01E         	goto	u7331
  6942  003D0A  EF89  F01E         	goto	u7330
  6943  003D0E                     u7331:
  6944  003D0E  EF99  F01E         	goto	l5685
  6945  003D12                     u7330:
  6946  003D12  500C               	movf	___aomod@divisor^0,w,c
  6947  003D14  5E04               	subwf	___aomod@dividend^0,f,c
  6948  003D16  500D               	movf	(___aomod@divisor+1)^0,w,c
  6949  003D18  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6950  003D1A  500E               	movf	(___aomod@divisor+2)^0,w,c
  6951  003D1C  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6952  003D1E  500F               	movf	(___aomod@divisor+3)^0,w,c
  6953  003D20  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6954  003D22  5010               	movf	(___aomod@divisor+4)^0,w,c
  6955  003D24  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6956  003D26  5011               	movf	(___aomod@divisor+5)^0,w,c
  6957  003D28  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6958  003D2A  5012               	movf	(___aomod@divisor+6)^0,w,c
  6959  003D2C  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6960  003D2E  5013               	movf	(___aomod@divisor+7)^0,w,c
  6961  003D30  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6962  003D32                     l5685:
  6963  003D32  90D8               	bcf	status,0,c
  6964  003D34  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6965  003D36  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6966  003D38  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6967  003D3A  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6968  003D3C  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6969  003D3E  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6970  003D40  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6971  003D42  320C               	rrcf	___aomod@divisor^0,f,c
  6972  003D44  2E14               	decfsz	___aomod@counter^0,f,c
  6973  003D46  EF72  F01E         	goto	l5681
  6974  003D4A                     l5689:
  6975  003D4A  5015               	movf	___aomod@sign^0,w,c
  6976  003D4C  B4D8               	btfsc	status,2,c
  6977  003D4E  EFAB  F01E         	goto	u7341
  6978  003D52  EFAD  F01E         	goto	u7340
  6979  003D56                     u7341:
  6980  003D56  EFBD  F01E         	goto	l5693
  6981  003D5A                     u7340:
  6982  003D5A  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6983  003D5C  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6984  003D5E  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6985  003D60  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6986  003D62  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6987  003D64  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6988  003D66  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6989  003D68  6C04               	negf	___aomod@dividend^0,c
  6990  003D6A  0E00               	movlw	0
  6991  003D6C  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6992  003D6E  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6993  003D70  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6994  003D72  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6995  003D74  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6996  003D76  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6997  003D78  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6998  003D7A                     l5693:
  6999  003D7A  C004  F004         	movff	___aomod@dividend,?___aomod
  7000  003D7E  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  7001  003D82  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  7002  003D86  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  7003  003D8A  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  7004  003D8E  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  7005  003D92  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  7006  003D96  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  7007  003D9A  0012               	return		;funcret
  7008  003D9C                     __end_of___aomod:
  7009                           	opt callstack 0
  7010                           
  7011 ;; *************** function ___aodiv *****************
  7012 ;; Defined at:
  7013 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  dividend        8    3[COMRAM] long long 
  7016 ;;  divisor         8   11[COMRAM] long long 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  quotient        8   21[COMRAM] long long 
  7019 ;;  sign            1   20[COMRAM] unsigned char 
  7020 ;;  counter         1   19[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  8    3[COMRAM] long long 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7030 ;;      Params:        16       0       0       0       0       0       0       0       0
  7031 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7033 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7034 ;;Total ram usage:       26 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    2
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_dtoa
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text27
  7045  00393E                     __ptext27:
  7046                           	opt callstack 0
  7047  00393E                     ___aodiv:
  7048                           	opt callstack 24
  7049  00393E  0E00               	movlw	0
  7050  003940  6E15               	movwf	___aodiv@sign^0,c
  7051  003942  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  7052  003944  EFA8  F01C         	goto	u7220
  7053  003948  EFA6  F01C         	goto	u7221
  7054  00394C                     u7221:
  7055  00394C  EFBA  F01C         	goto	l5625
  7056  003950                     u7220:
  7057  003950  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  7058  003952  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  7059  003954  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  7060  003956  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  7061  003958  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  7062  00395A  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  7063  00395C  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  7064  00395E  6C0C               	negf	___aodiv@divisor^0,c
  7065  003960  0E00               	movlw	0
  7066  003962  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  7067  003964  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  7068  003966  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  7069  003968  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  7070  00396A  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  7071  00396C  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  7072  00396E  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  7073  003970  0E01               	movlw	1
  7074  003972  6E15               	movwf	___aodiv@sign^0,c
  7075  003974                     l5625:
  7076  003974  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  7077  003976  EFC1  F01C         	goto	u7230
  7078  00397A  EFBF  F01C         	goto	u7231
  7079  00397E                     u7231:
  7080  00397E  EFD3  F01C         	goto	l5631
  7081  003982                     u7230:
  7082  003982  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  7083  003984  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  7084  003986  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  7085  003988  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  7086  00398A  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  7087  00398C  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  7088  00398E  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  7089  003990  6C04               	negf	___aodiv@dividend^0,c
  7090  003992  0E00               	movlw	0
  7091  003994  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  7092  003996  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  7093  003998  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  7094  00399A  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  7095  00399C  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  7096  00399E  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  7097  0039A0  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  7098  0039A2  0E01               	movlw	1
  7099  0039A4  1A15               	xorwf	___aodiv@sign^0,f,c
  7100  0039A6                     l5631:
  7101  0039A6  EE20  F016         	lfsr	2,___aodiv@quotient
  7102  0039AA  0E07               	movlw	7
  7103  0039AC                     u7241:
  7104  0039AC  6ADE               	clrf	postinc2,c
  7105  0039AE  06E8               	decf	wreg,f,c
  7106  0039B0  E2FD               	bc	u7241
  7107  0039B2  500C               	movf	___aodiv@divisor^0,w,c
  7108  0039B4  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  7109  0039B6  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  7110  0039B8  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  7111  0039BA  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  7112  0039BC  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  7113  0039BE  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  7114  0039C0  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  7115  0039C2  B4D8               	btfsc	status,2,c
  7116  0039C4  EFE6  F01C         	goto	u7251
  7117  0039C8  EFE8  F01C         	goto	u7250
  7118  0039CC                     u7251:
  7119  0039CC  EF3A  F01D         	goto	l5653
  7120  0039D0                     u7250:
  7121  0039D0  0E01               	movlw	1
  7122  0039D2  6E14               	movwf	___aodiv@counter^0,c
  7123  0039D4  EFF6  F01C         	goto	l5639
  7124  0039D8                     l5637:
  7125  0039D8  90D8               	bcf	status,0,c
  7126  0039DA  360C               	rlcf	___aodiv@divisor^0,f,c
  7127  0039DC  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  7128  0039DE  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  7129  0039E0  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  7130  0039E2  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  7131  0039E4  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  7132  0039E6  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  7133  0039E8  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  7134  0039EA  2A14               	incf	___aodiv@counter^0,f,c
  7135  0039EC                     l5639:
  7136  0039EC  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  7137  0039EE  EFFB  F01C         	goto	u7261
  7138  0039F2  EFFD  F01C         	goto	u7260
  7139  0039F6                     u7261:
  7140  0039F6  EFEC  F01C         	goto	l5637
  7141  0039FA                     u7260:
  7142  0039FA                     l5641:
  7143  0039FA  90D8               	bcf	status,0,c
  7144  0039FC  3616               	rlcf	___aodiv@quotient^0,f,c
  7145  0039FE  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  7146  003A00  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  7147  003A02  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  7148  003A04  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  7149  003A06  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  7150  003A08  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  7151  003A0A  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  7152  003A0C  500C               	movf	___aodiv@divisor^0,w,c
  7153  003A0E  5C04               	subwf	___aodiv@dividend^0,w,c
  7154  003A10  500D               	movf	(___aodiv@divisor+1)^0,w,c
  7155  003A12  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  7156  003A14  500E               	movf	(___aodiv@divisor+2)^0,w,c
  7157  003A16  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  7158  003A18  500F               	movf	(___aodiv@divisor+3)^0,w,c
  7159  003A1A  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  7160  003A1C  5010               	movf	(___aodiv@divisor+4)^0,w,c
  7161  003A1E  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  7162  003A20  5011               	movf	(___aodiv@divisor+5)^0,w,c
  7163  003A22  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  7164  003A24  5012               	movf	(___aodiv@divisor+6)^0,w,c
  7165  003A26  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  7166  003A28  5013               	movf	(___aodiv@divisor+7)^0,w,c
  7167  003A2A  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  7168  003A2C  A0D8               	btfss	status,0,c
  7169  003A2E  EF1B  F01D         	goto	u7271
  7170  003A32  EF1D  F01D         	goto	u7270
  7171  003A36                     u7271:
  7172  003A36  EF2E  F01D         	goto	l5649
  7173  003A3A                     u7270:
  7174  003A3A  500C               	movf	___aodiv@divisor^0,w,c
  7175  003A3C  5E04               	subwf	___aodiv@dividend^0,f,c
  7176  003A3E  500D               	movf	(___aodiv@divisor+1)^0,w,c
  7177  003A40  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  7178  003A42  500E               	movf	(___aodiv@divisor+2)^0,w,c
  7179  003A44  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  7180  003A46  500F               	movf	(___aodiv@divisor+3)^0,w,c
  7181  003A48  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  7182  003A4A  5010               	movf	(___aodiv@divisor+4)^0,w,c
  7183  003A4C  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  7184  003A4E  5011               	movf	(___aodiv@divisor+5)^0,w,c
  7185  003A50  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  7186  003A52  5012               	movf	(___aodiv@divisor+6)^0,w,c
  7187  003A54  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  7188  003A56  5013               	movf	(___aodiv@divisor+7)^0,w,c
  7189  003A58  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  7190  003A5A  8016               	bsf	___aodiv@quotient^0,0,c
  7191  003A5C                     l5649:
  7192  003A5C  90D8               	bcf	status,0,c
  7193  003A5E  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  7194  003A60  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  7195  003A62  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  7196  003A64  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  7197  003A66  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  7198  003A68  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  7199  003A6A  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  7200  003A6C  320C               	rrcf	___aodiv@divisor^0,f,c
  7201  003A6E  2E14               	decfsz	___aodiv@counter^0,f,c
  7202  003A70  EFFD  F01C         	goto	l5641
  7203  003A74                     l5653:
  7204  003A74  5015               	movf	___aodiv@sign^0,w,c
  7205  003A76  B4D8               	btfsc	status,2,c
  7206  003A78  EF40  F01D         	goto	u7281
  7207  003A7C  EF42  F01D         	goto	u7280
  7208  003A80                     u7281:
  7209  003A80  EF52  F01D         	goto	l5657
  7210  003A84                     u7280:
  7211  003A84  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  7212  003A86  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  7213  003A88  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  7214  003A8A  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  7215  003A8C  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  7216  003A8E  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  7217  003A90  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  7218  003A92  6C16               	negf	___aodiv@quotient^0,c
  7219  003A94  0E00               	movlw	0
  7220  003A96  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  7221  003A98  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  7222  003A9A  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  7223  003A9C  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  7224  003A9E  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  7225  003AA0  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  7226  003AA2  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  7227  003AA4                     l5657:
  7228  003AA4  C016  F004         	movff	___aodiv@quotient,?___aodiv
  7229  003AA8  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  7230  003AAC  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  7231  003AB0  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  7232  003AB4  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  7233  003AB8  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  7234  003ABC  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  7235  003AC0  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  7236  003AC4  0012               	return		;funcret
  7237  003AC6                     __end_of___aodiv:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _atoi *****************
  7241 ;; Defined at:
  7242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7245 ;;		 -> uart_ler_string@dado(6), STR_1(9), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  n               2   23[COMRAM] int 
  7248 ;;  neg             2   16[COMRAM] int 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  2   10[COMRAM] int 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7258 ;;      Params:         2       0       0       0       0       0       0       0       0
  7259 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7260 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7261 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7262 ;;Total ram usage:       15 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    3
  7265 ;; This function calls:
  7266 ;;		___wmul
  7267 ;;		_isdigit
  7268 ;;		_isspace
  7269 ;; This function is called by:
  7270 ;;		_uart_ler_string
  7271 ;;		_vfpfcnvrt
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text28
  7276  003406                     __ptext28:
  7277                           	opt callstack 0
  7278  003406                     _atoi:
  7279                           	opt callstack 26
  7280  003406  0E00               	movlw	0
  7281  003408  6E19               	movwf	(atoi@n+1)^0,c
  7282  00340A  0E00               	movlw	0
  7283  00340C  6E18               	movwf	atoi@n^0,c
  7284  00340E  0E00               	movlw	0
  7285  003410  6E12               	movwf	(atoi@neg+1)^0,c
  7286  003412  0E00               	movlw	0
  7287  003414  6E11               	movwf	atoi@neg^0,c
  7288  003416  EF0F  F01A         	goto	l6157
  7289  00341A                     l6155:
  7290  00341A  4A0B               	infsnz	atoi@s^0,f,c
  7291  00341C  2A0C               	incf	(atoi@s+1)^0,f,c
  7292  00341E                     l6157:
  7293  00341E  0E01               	movlw	1
  7294  003420  6E17               	movwf	_atoi$1025^0,c
  7295  003422  C00B  FFF6         	movff	atoi@s,tblptrl
  7296  003426  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7297  00342A  6AF8               	clrf	tblptru,c
  7298  00342C  0E07               	movlw	(high __ramtop+-1)
  7299  00342E  64F7               	cpfsgt	tblptrh,c
  7300  003430  D003               	bra	u8077
  7301  003432  0008               	tblrd		*
  7302  003434  50F5               	movf	tablat,w,c
  7303  003436  D005               	bra	u8070
  7304  003438                     u8077:
  7305  003438  CFF6 FFE1          	movff	tblptrl,fsr1l
  7306  00343C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7307  003440  50E7               	movf	indf1,w,c
  7308  003442                     u8070:
  7309  003442  0A20               	xorlw	32
  7310  003444  B4D8               	btfsc	status,2,c
  7311  003446  EF27  F01A         	goto	u8081
  7312  00344A  EF29  F01A         	goto	u8080
  7313  00344E                     u8081:
  7314  00344E  EF50  F01A         	goto	l6165
  7315  003452                     u8080:
  7316  003452  0EF7               	movlw	247
  7317  003454  6E0D               	movwf	??_atoi^0,c
  7318  003456  0EFF               	movlw	255
  7319  003458  6E0E               	movwf	(??_atoi+1)^0,c
  7320  00345A  C00B  FFF6         	movff	atoi@s,tblptrl
  7321  00345E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7322  003462  6AF8               	clrf	tblptru,c
  7323  003464  0E07               	movlw	(high __ramtop+-1)
  7324  003466  64F7               	cpfsgt	tblptrh,c
  7325  003468  D003               	bra	u8097
  7326  00346A  0008               	tblrd		*
  7327  00346C  50F5               	movf	tablat,w,c
  7328  00346E  D005               	bra	u8090
  7329  003470                     u8097:
  7330  003470  CFF6 FFE1          	movff	tblptrl,fsr1l
  7331  003474  CFF7 FFE2          	movff	tblptrh,fsr1h
  7332  003478  50E7               	movf	indf1,w,c
  7333  00347A                     u8090:
  7334  00347A  6E0F               	movwf	(??_atoi+2)^0,c
  7335  00347C  6A10               	clrf	(??_atoi+3)^0,c
  7336  00347E  500D               	movf	??_atoi^0,w,c
  7337  003480  260F               	addwf	(??_atoi+2)^0,f,c
  7338  003482  500E               	movf	(??_atoi+1)^0,w,c
  7339  003484  2210               	addwfc	(??_atoi+3)^0,f,c
  7340  003486  5010               	movf	(??_atoi+3)^0,w,c
  7341  003488  E109               	bnz	u8100
  7342  00348A  0E05               	movlw	5
  7343  00348C  5C0F               	subwf	(??_atoi+2)^0,w,c
  7344  00348E  A0D8               	btfss	status,0,c
  7345  003490  EF4C  F01A         	goto	u8101
  7346  003494  EF4E  F01A         	goto	u8100
  7347  003498                     u8101:
  7348  003498  EF50  F01A         	goto	l6165
  7349  00349C                     u8100:
  7350  00349C  0E00               	movlw	0
  7351  00349E  6E17               	movwf	_atoi$1025^0,c
  7352  0034A0                     l6165:
  7353  0034A0  C017  F013         	movff	_atoi$1025,_atoi$1024
  7354  0034A4  6A14               	clrf	(_atoi$1024+1)^0,c
  7355  0034A6  5013               	movf	_atoi$1024^0,w,c
  7356  0034A8  1014               	iorwf	(_atoi$1024+1)^0,w,c
  7357  0034AA  A4D8               	btfss	status,2,c
  7358  0034AC  EF5A  F01A         	goto	u8111
  7359  0034B0  EF5C  F01A         	goto	u8110
  7360  0034B4                     u8111:
  7361  0034B4  EF0D  F01A         	goto	l6155
  7362  0034B8                     u8110:
  7363  0034B8  EF66  F01A         	goto	l6175
  7364  0034BC                     l6171:
  7365  0034BC  0E00               	movlw	0
  7366  0034BE  6E12               	movwf	(atoi@neg+1)^0,c
  7367  0034C0  0E01               	movlw	1
  7368  0034C2  6E11               	movwf	atoi@neg^0,c
  7369  0034C4                     l6173:
  7370  0034C4  4A0B               	infsnz	atoi@s^0,f,c
  7371  0034C6  2A0C               	incf	(atoi@s+1)^0,f,c
  7372  0034C8  EFB1  F01A         	goto	l6181
  7373  0034CC                     l6175:
  7374  0034CC  C00B  FFF6         	movff	atoi@s,tblptrl
  7375  0034D0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7376  0034D4  6AF8               	clrf	tblptru,c
  7377  0034D6  0E07               	movlw	(high __ramtop+-1)
  7378  0034D8  64F7               	cpfsgt	tblptrh,c
  7379  0034DA  D003               	bra	u8127
  7380  0034DC  0008               	tblrd		*
  7381  0034DE  50F5               	movf	tablat,w,c
  7382  0034E0  D005               	bra	u8120
  7383  0034E2                     u8127:
  7384  0034E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7385  0034E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7386  0034EA  50E7               	movf	indf1,w,c
  7387  0034EC                     u8120:
  7388  0034EC  6E0D               	movwf	??_atoi^0,c
  7389  0034EE  6A0E               	clrf	(??_atoi+1)^0,c
  7390                           
  7391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7392                           ; Switch size 1, requested type "simple"
  7393                           ; Number of cases is 1, Range of values is 0 to 0
  7394                           ; switch strategies available:
  7395                           ; Name         Instructions Cycles
  7396                           ; simple_byte            4     3 (average)
  7397                           ;	Chosen strategy is simple_byte
  7398  0034F0  500E               	movf	(??_atoi+1)^0,w,c
  7399  0034F2  0A00               	xorlw	0	; case 0
  7400  0034F4  B4D8               	btfsc	status,2,c
  7401  0034F6  EF7F  F01A         	goto	l7199
  7402  0034FA  EFB1  F01A         	goto	l6181
  7403  0034FE                     l7199:
  7404                           
  7405                           ; Switch size 1, requested type "simple"
  7406                           ; Number of cases is 2, Range of values is 43 to 45
  7407                           ; switch strategies available:
  7408                           ; Name         Instructions Cycles
  7409                           ; simple_byte            7     4 (average)
  7410                           ;	Chosen strategy is simple_byte
  7411  0034FE  500D               	movf	??_atoi^0,w,c
  7412  003500  0A2B               	xorlw	43	; case 43
  7413  003502  B4D8               	btfsc	status,2,c
  7414  003504  EF62  F01A         	goto	l6173
  7415  003508  0A06               	xorlw	6	; case 45
  7416  00350A  B4D8               	btfsc	status,2,c
  7417  00350C  EF5E  F01A         	goto	l6171
  7418  003510  EFB1  F01A         	goto	l6181
  7419  003514                     l6177:
  7420  003514  C018  F004         	movff	atoi@n,___wmul@multiplier
  7421  003518  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7422  00351C  0E00               	movlw	0
  7423  00351E  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7424  003520  0E0A               	movlw	10
  7425  003522  6E06               	movwf	___wmul@multiplicand^0,c
  7426  003524  EC6E  F026         	call	___wmul	;wreg free
  7427  003528  C00B  FFF6         	movff	atoi@s,tblptrl
  7428  00352C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7429  003530  6AF8               	clrf	tblptru,c
  7430  003532  0E07               	movlw	(high __ramtop+-1)
  7431  003534  64F7               	cpfsgt	tblptrh,c
  7432  003536  D003               	bra	u8137
  7433  003538  0008               	tblrd		*
  7434  00353A  50F5               	movf	tablat,w,c
  7435  00353C  D005               	bra	u8130
  7436  00353E                     u8137:
  7437  00353E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7438  003542  CFF7 FFE2          	movff	tblptrh,fsr1h
  7439  003546  50E7               	movf	indf1,w,c
  7440  003548                     u8130:
  7441  003548  6E0D               	movwf	??_atoi^0,c
  7442  00354A  500D               	movf	??_atoi^0,w,c
  7443  00354C  5E04               	subwf	?___wmul^0,f,c
  7444  00354E  0E00               	movlw	0
  7445  003550  5A05               	subwfb	(?___wmul+1)^0,f,c
  7446  003552  0E30               	movlw	48
  7447  003554  2404               	addwf	?___wmul^0,w,c
  7448  003556  6E18               	movwf	atoi@n^0,c
  7449  003558  0E00               	movlw	0
  7450  00355A  2005               	addwfc	(?___wmul+1)^0,w,c
  7451  00355C  6E19               	movwf	(atoi@n+1)^0,c
  7452  00355E  EF62  F01A         	goto	l6173
  7453  003562                     l6181:
  7454  003562  0ED0               	movlw	208
  7455  003564  6E0D               	movwf	??_atoi^0,c
  7456  003566  0EFF               	movlw	255
  7457  003568  6E0E               	movwf	(??_atoi+1)^0,c
  7458  00356A  C00B  FFF6         	movff	atoi@s,tblptrl
  7459  00356E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7460  003572  6AF8               	clrf	tblptru,c
  7461  003574  0E07               	movlw	(high __ramtop+-1)
  7462  003576  64F7               	cpfsgt	tblptrh,c
  7463  003578  D003               	bra	u8147
  7464  00357A  0008               	tblrd		*
  7465  00357C  50F5               	movf	tablat,w,c
  7466  00357E  D005               	bra	u8140
  7467  003580                     u8147:
  7468  003580  CFF6 FFE1          	movff	tblptrl,fsr1l
  7469  003584  CFF7 FFE2          	movff	tblptrh,fsr1h
  7470  003588  50E7               	movf	indf1,w,c
  7471  00358A                     u8140:
  7472  00358A  6E0F               	movwf	(??_atoi+2)^0,c
  7473  00358C  6A10               	clrf	(??_atoi+3)^0,c
  7474  00358E  500D               	movf	??_atoi^0,w,c
  7475  003590  260F               	addwf	(??_atoi+2)^0,f,c
  7476  003592  500E               	movf	(??_atoi+1)^0,w,c
  7477  003594  2210               	addwfc	(??_atoi+3)^0,f,c
  7478  003596  5010               	movf	(??_atoi+3)^0,w,c
  7479  003598  E10A               	bnz	u8150
  7480  00359A  0E0A               	movlw	10
  7481  00359C  5C0F               	subwf	(??_atoi+2)^0,w,c
  7482  00359E  A0D8               	btfss	status,0,c
  7483  0035A0  EFD4  F01A         	goto	u8151
  7484  0035A4  EFD7  F01A         	goto	u8150
  7485  0035A8                     u8151:
  7486  0035A8  0E01               	movlw	1
  7487  0035AA  EFD8  F01A         	goto	u8160
  7488  0035AE                     u8150:
  7489  0035AE  0E00               	movlw	0
  7490  0035B0                     u8160:
  7491  0035B0  6E15               	movwf	_atoi$1026^0,c
  7492  0035B2  6A16               	clrf	(_atoi$1026+1)^0,c
  7493  0035B4  5015               	movf	_atoi$1026^0,w,c
  7494  0035B6  1016               	iorwf	(_atoi$1026+1)^0,w,c
  7495  0035B8  A4D8               	btfss	status,2,c
  7496  0035BA  EFE1  F01A         	goto	u8171
  7497  0035BE  EFE3  F01A         	goto	u8170
  7498  0035C2                     u8171:
  7499  0035C2  EF8A  F01A         	goto	l6177
  7500  0035C6                     u8170:
  7501  0035C6  5011               	movf	atoi@neg^0,w,c
  7502  0035C8  1012               	iorwf	(atoi@neg+1)^0,w,c
  7503  0035CA  A4D8               	btfss	status,2,c
  7504  0035CC  EFEA  F01A         	goto	u8181
  7505  0035D0  EFEC  F01A         	goto	u8180
  7506  0035D4                     u8181:
  7507  0035D4  EFFA  F01A         	goto	l1231
  7508  0035D8                     u8180:
  7509  0035D8  C018  F00D         	movff	atoi@n,??_atoi
  7510  0035DC  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7511  0035E0  1E0D               	comf	??_atoi^0,f,c
  7512  0035E2  1E0E               	comf	(??_atoi+1)^0,f,c
  7513  0035E4  4A0D               	infsnz	??_atoi^0,f,c
  7514  0035E6  2A0E               	incf	(??_atoi+1)^0,f,c
  7515  0035E8  C00D  F00B         	movff	??_atoi,?_atoi
  7516  0035EC  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7517  0035F0  EFFE  F01A         	goto	l1234
  7518  0035F4                     l1231:
  7519  0035F4  C018  F00B         	movff	atoi@n,?_atoi
  7520  0035F8  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7521  0035FC                     l1234:
  7522  0035FC  0012               	return		;funcret
  7523  0035FE                     __end_of_atoi:
  7524                           	opt callstack 0
  7525                           
  7526 ;; *************** function _isspace *****************
  7527 ;; Defined at:
  7528 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  c               2    3[COMRAM] int 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  2    3[COMRAM] int 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7542 ;;      Params:         2       0       0       0       0       0       0       0       0
  7543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7544 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7545 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7546 ;;Total ram usage:        7 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    2
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_atoi
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text29
  7557  0049C2                     __ptext29:
  7558                           	opt callstack 0
  7559  0049C2                     _isspace:
  7560                           	opt callstack 26
  7561  0049C2  0E01               	movlw	1
  7562  0049C4  6E0A               	movwf	_isspace$1066^0,c
  7563  0049C6  0E20               	movlw	32
  7564  0049C8  1804               	xorwf	isspace@c^0,w,c
  7565  0049CA  1005               	iorwf	(isspace@c+1)^0,w,c
  7566  0049CC  B4D8               	btfsc	status,2,c
  7567  0049CE  EFEB  F024         	goto	u8051
  7568  0049D2  EFED  F024         	goto	u8050
  7569  0049D6                     u8051:
  7570  0049D6  EF06  F025         	goto	l6149
  7571  0049DA                     u8050:
  7572  0049DA  0EF7               	movlw	247
  7573  0049DC  6E06               	movwf	??_isspace^0,c
  7574  0049DE  0EFF               	movlw	255
  7575  0049E0  6E07               	movwf	(??_isspace+1)^0,c
  7576  0049E2  C004  F008         	movff	isspace@c,??_isspace+2
  7577  0049E6  C005  F009         	movff	isspace@c+1,??_isspace+3
  7578  0049EA  5006               	movf	??_isspace^0,w,c
  7579  0049EC  2608               	addwf	(??_isspace+2)^0,f,c
  7580  0049EE  5007               	movf	(??_isspace+1)^0,w,c
  7581  0049F0  2209               	addwfc	(??_isspace+3)^0,f,c
  7582  0049F2  5009               	movf	(??_isspace+3)^0,w,c
  7583  0049F4  E109               	bnz	u8060
  7584  0049F6  0E05               	movlw	5
  7585  0049F8  5C08               	subwf	(??_isspace+2)^0,w,c
  7586  0049FA  A0D8               	btfss	status,0,c
  7587  0049FC  EF02  F025         	goto	u8061
  7588  004A00  EF04  F025         	goto	u8060
  7589  004A04                     u8061:
  7590  004A04  EF06  F025         	goto	l6149
  7591  004A08                     u8060:
  7592  004A08  0E00               	movlw	0
  7593  004A0A  6E0A               	movwf	_isspace$1066^0,c
  7594  004A0C                     l6149:
  7595  004A0C  C00A  F004         	movff	_isspace$1066,?_isspace
  7596  004A10  6A05               	clrf	(?_isspace+1)^0,c
  7597  004A12  0012               	return		;funcret
  7598  004A14                     __end_of_isspace:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _isdigit *****************
  7602 ;; Defined at:
  7603 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  c               2    3[COMRAM] int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2    3[COMRAM] int 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7617 ;;      Params:         2       0       0       0       0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7619 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7620 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7621 ;;Total ram usage:        6 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    2
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_vfpfcnvrt
  7628 ;;		_atoi
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text30
  7633  004BD4                     __ptext30:
  7634                           	opt callstack 0
  7635  004BD4                     _isdigit:
  7636                           	opt callstack 26
  7637  004BD4  0ED0               	movlw	208
  7638  004BD6  6E06               	movwf	??_isdigit^0,c
  7639  004BD8  0EFF               	movlw	255
  7640  004BDA  6E07               	movwf	(??_isdigit+1)^0,c
  7641  004BDC  C004  F008         	movff	isdigit@c,??_isdigit+2
  7642  004BE0  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7643  004BE4  5006               	movf	??_isdigit^0,w,c
  7644  004BE6  2608               	addwf	(??_isdigit+2)^0,f,c
  7645  004BE8  5007               	movf	(??_isdigit+1)^0,w,c
  7646  004BEA  2209               	addwfc	(??_isdigit+3)^0,f,c
  7647  004BEC  5009               	movf	(??_isdigit+3)^0,w,c
  7648  004BEE  E10A               	bnz	u7200
  7649  004BF0  0E0A               	movlw	10
  7650  004BF2  5C08               	subwf	(??_isdigit+2)^0,w,c
  7651  004BF4  A0D8               	btfss	status,0,c
  7652  004BF6  EFFF  F025         	goto	u7201
  7653  004BFA  EF02  F026         	goto	u7200
  7654  004BFE                     u7201:
  7655  004BFE  0E01               	movlw	1
  7656  004C00  EF03  F026         	goto	u7210
  7657  004C04                     u7200:
  7658  004C04  0E00               	movlw	0
  7659  004C06                     u7210:
  7660  004C06  6E04               	movwf	?_isdigit^0,c
  7661  004C08  6A05               	clrf	(?_isdigit+1)^0,c
  7662  004C0A  0012               	return		;funcret
  7663  004C0C                     __end_of_isdigit:
  7664                           	opt callstack 0
  7665                           
  7666 ;; *************** function ___wmul *****************
  7667 ;; Defined at:
  7668 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  multiplier      2    3[COMRAM] unsigned int 
  7671 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  product         2    7[COMRAM] unsigned int 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  2    3[COMRAM] unsigned int 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0, prodl, prodh
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7683 ;;      Params:         4       0       0       0       0       0       0       0       0
  7684 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7686 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7687 ;;Total ram usage:        6 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    2
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_atoi
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text31
  7698  004CDC                     __ptext31:
  7699                           	opt callstack 0
  7700  004CDC                     ___wmul:
  7701                           	opt callstack 26
  7702  004CDC  5004               	movf	___wmul@multiplier^0,w,c
  7703  004CDE  0206               	mulwf	___wmul@multiplicand^0,c
  7704  004CE0  CFF3 F008          	movff	prodl,___wmul@product
  7705  004CE4  CFF4 F009          	movff	prodh,___wmul@product+1
  7706  004CE8  5004               	movf	___wmul@multiplier^0,w,c
  7707  004CEA  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7708  004CEC  50F3               	movf	243,w,c
  7709  004CEE  2609               	addwf	(___wmul@product+1)^0,f,c
  7710  004CF0  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7711  004CF2  0206               	mulwf	___wmul@multiplicand^0,c
  7712  004CF4  50F3               	movf	243,w,c
  7713  004CF6  2609               	addwf	(___wmul@product+1)^0,f,c
  7714  004CF8  C008  F004         	movff	___wmul@product,?___wmul
  7715  004CFC  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7716  004D00  0012               	return		;funcret
  7717  004D02                     __end_of___wmul:
  7718                           	opt callstack 0
  7719                           
  7720 ;; *************** function _pwm_config *****************
  7721 ;; Defined at:
  7722 ;;		line 4 in file "pwm_funct.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    2
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_main
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text32
  7751  004D60                     __ptext32:
  7752                           	opt callstack 0
  7753  004D60                     _pwm_config:
  7754                           	opt callstack 28
  7755  004D60                     
  7756                           ;pwm_funct.c: 6: TRISB&=(0<<5);
  7757  004D60  0E00               	movlw	0
  7758  004D62  6E93               	movwf	147,c	;volatile
  7759                           
  7760                           ;pwm_funct.c: 7: PORTB=0b00000000;
  7761  004D64  0E00               	movlw	0
  7762  004D66  6E81               	movwf	129,c	;volatile
  7763                           
  7764                           ;pwm_funct.c: 9: T0CON=0b10000000;
  7765  004D68  0E80               	movlw	128
  7766  004D6A  6ED5               	movwf	213,c	;volatile
  7767  004D6C                     
  7768                           ;pwm_funct.c: 10: TMR0IE=1;
  7769  004D6C  8AF2               	bsf	4082,5,c	;volatile
  7770                           
  7771                           ;pwm_funct.c: 11: TMR0L=0xFE;
  7772  004D6E  0EFE               	movlw	254
  7773  004D70  6ED6               	movwf	214,c	;volatile
  7774  004D72                     
  7775                           ;pwm_funct.c: 12: TMR0H=0xFF;
  7776  004D72  68D7               	setf	215,c	;volatile
  7777  004D74                     
  7778                           ;pwm_funct.c: 13: TMR0IF=0;
  7779  004D74  94F2               	bcf	4082,2,c	;volatile
  7780  004D76  0012               	return		;funcret
  7781  004D78                     __end_of_pwm_config:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function _mpu_ler *****************
  7785 ;; Defined at:
  7786 ;;		line 51 in file "mpu.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  ay              4   92[BANK0 ] float 
  7791 ;;  Ay              2  100[BANK0 ] int 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  4   84[BANK0 ] float 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7801 ;;      Params:         0       4       0       0       0       0       0       0       0
  7802 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7803 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7804 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7805 ;;Total ram usage:       18 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    5
  7808 ;; This function calls:
  7809 ;;		___fldiv
  7810 ;;		___flmul
  7811 ;;		___xxtofl
  7812 ;;		_asinf
  7813 ;;		_i2c_init
  7814 ;;		_i2c_init_aguarda
  7815 ;;		_i2c_ler
  7816 ;;		_i2c_mestre_escreve
  7817 ;;		_i2c_mestre_para
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text33
  7824  003D9C                     __ptext33:
  7825                           	opt callstack 0
  7826  003D9C                     _mpu_ler:
  7827                           	opt callstack 25
  7828  003D9C                     
  7829                           ;mpu.c: 55:   int Ay;;mpu.c: 57:   float ay;;mpu.c: 59:   i2c_init_aguarda(0xD0);
  7830  003D9C  0ED0               	movlw	208
  7831  003D9E  EC4F  F025         	call	_i2c_init_aguarda
  7832  003DA2                     
  7833                           ;mpu.c: 60:   i2c_mestre_escreve(0x3D);
  7834  003DA2  0E3D               	movlw	61
  7835  003DA4  EC92  F026         	call	_i2c_mestre_escreve
  7836  003DA8                     
  7837                           ;mpu.c: 61:   i2c_mestre_para();
  7838  003DA8  ECD3  F026         	call	_i2c_mestre_para	;wreg free
  7839                           
  7840                           ;mpu.c: 62:   i2c_init(0xD1);
  7841  003DAC  0ED1               	movlw	209
  7842  003DAE  EC57  F026         	call	_i2c_init
  7843  003DB2                     
  7844                           ;mpu.c: 64:   Ay = ((int)i2c_ler(0)<<8) | (int)i2c_ler(1);
  7845  003DB2  0E00               	movlw	0
  7846  003DB4  ECB1  F025         	call	_i2c_ler
  7847  003DB8  0100               	movlb	0	; () banked
  7848  003DBA  6FB8               	movwf	??_mpu_ler& (0+255),b
  7849  003DBC  51B8               	movf	??_mpu_ler& (0+255),w,b
  7850  003DBE  6FBA               	movwf	(??_mpu_ler+2)& (0+255),b
  7851  003DC0  6BB9               	clrf	(??_mpu_ler+1)& (0+255),b
  7852  003DC2  0E01               	movlw	1
  7853  003DC4  ECB1  F025         	call	_i2c_ler
  7854  003DC8  0100               	movlb	0	; () banked
  7855  003DCA  6FBB               	movwf	(??_mpu_ler+3)& (0+255),b
  7856  003DCC  51BB               	movf	(??_mpu_ler+3)& (0+255),w,b
  7857  003DCE  11B9               	iorwf	(??_mpu_ler+1)& (0+255),w,b
  7858  003DD0  6FC4               	movwf	mpu_ler@Ay& (0+255),b
  7859  003DD2  51BA               	movf	(??_mpu_ler+2)& (0+255),w,b
  7860  003DD4  6FC5               	movwf	(mpu_ler@Ay+1)& (0+255),b
  7861  003DD6                     
  7862                           ; BSR set to: 0
  7863                           ;mpu.c: 70:   i2c_mestre_para();
  7864  003DD6  ECD3  F026         	call	_i2c_mestre_para	;wreg free
  7865  003DDA                     
  7866                           ;mpu.c: 73:   ay=(float)Ay/16384.0;
  7867  003DDA  C0C4  F004         	movff	mpu_ler@Ay,___xxtofl@val
  7868  003DDE  C0C5  F005         	movff	mpu_ler@Ay+1,___xxtofl@val+1
  7869  003DE2  0E00               	movlw	0
  7870  003DE4  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  7871  003DE6  0EFF               	movlw	-1
  7872  003DE8  6E06               	movwf	(___xxtofl@val+2)^0,c
  7873  003DEA  6E07               	movwf	(___xxtofl@val+3)^0,c
  7874  003DEC  0E01               	movlw	1
  7875  003DEE  ECFF  F01A         	call	___xxtofl
  7876  003DF2  C004  F03D         	movff	?___xxtofl,___fldiv@b
  7877  003DF6  C005  F03E         	movff	?___xxtofl+1,___fldiv@b+1
  7878  003DFA  C006  F03F         	movff	?___xxtofl+2,___fldiv@b+2
  7879  003DFE  C007  F040         	movff	?___xxtofl+3,___fldiv@b+3
  7880  003E02  0E00               	movlw	0
  7881  003E04  6E41               	movwf	___fldiv@a^0,c
  7882  003E06  0E00               	movlw	0
  7883  003E08  6E42               	movwf	(___fldiv@a+1)^0,c
  7884  003E0A  0E80               	movlw	128
  7885  003E0C  6E43               	movwf	(___fldiv@a+2)^0,c
  7886  003E0E  0E46               	movlw	70
  7887  003E10  6E44               	movwf	(___fldiv@a+3)^0,c
  7888  003E12  ECBB  F015         	call	___fldiv	;wreg free
  7889  003E16  C03D  F0BC         	movff	?___fldiv,mpu_ler@ay
  7890  003E1A  C03E  F0BD         	movff	?___fldiv+1,mpu_ler@ay+1
  7891  003E1E  C03F  F0BE         	movff	?___fldiv+2,mpu_ler@ay+2
  7892  003E22  C040  F0BF         	movff	?___fldiv+3,mpu_ler@ay+3
  7893  003E26                     
  7894                           ;mpu.c: 84:   return((180*asinf(ay))/3.14159265358979323846);
  7895  003E26  C0BC  F088         	movff	mpu_ler@ay,asinf@x
  7896  003E2A  C0BD  F089         	movff	mpu_ler@ay+1,asinf@x+1
  7897  003E2E  C0BE  F08A         	movff	mpu_ler@ay+2,asinf@x+2
  7898  003E32  C0BF  F08B         	movff	mpu_ler@ay+3,asinf@x+3
  7899  003E36  ECC2  F013         	call	_asinf	;wreg free
  7900  003E3A  C088  F0C0         	movff	?_asinf,_mpu_ler$1406
  7901  003E3E  C089  F0C1         	movff	?_asinf+1,_mpu_ler$1406+1
  7902  003E42  C08A  F0C2         	movff	?_asinf+2,_mpu_ler$1406+2
  7903  003E46  C08B  F0C3         	movff	?_asinf+3,_mpu_ler$1406+3
  7904  003E4A                     
  7905                           ;mpu.c: 84:   return((180*asinf(ay))/3.14159265358979323846);
  7906  003E4A  0E00               	movlw	0
  7907  003E4C  6E10               	movwf	___flmul@a^0,c
  7908  003E4E  0E00               	movlw	0
  7909  003E50  6E11               	movwf	(___flmul@a+1)^0,c
  7910  003E52  0E34               	movlw	52
  7911  003E54  6E12               	movwf	(___flmul@a+2)^0,c
  7912  003E56  0E43               	movlw	67
  7913  003E58  6E13               	movwf	(___flmul@a+3)^0,c
  7914  003E5A  C0C0  F00C         	movff	_mpu_ler$1406,___flmul@b
  7915  003E5E  C0C1  F00D         	movff	_mpu_ler$1406+1,___flmul@b+1
  7916  003E62  C0C2  F00E         	movff	_mpu_ler$1406+2,___flmul@b+2
  7917  003E66  C0C3  F00F         	movff	_mpu_ler$1406+3,___flmul@b+3
  7918  003E6A  ECAD  F011         	call	___flmul	;wreg free
  7919  003E6E  C00C  F03D         	movff	?___flmul,___fldiv@b
  7920  003E72  C00D  F03E         	movff	?___flmul+1,___fldiv@b+1
  7921  003E76  C00E  F03F         	movff	?___flmul+2,___fldiv@b+2
  7922  003E7A  C00F  F040         	movff	?___flmul+3,___fldiv@b+3
  7923  003E7E  0EDB               	movlw	219
  7924  003E80  6E41               	movwf	___fldiv@a^0,c
  7925  003E82  0E0F               	movlw	15
  7926  003E84  6E42               	movwf	(___fldiv@a+1)^0,c
  7927  003E86  0E49               	movlw	73
  7928  003E88  6E43               	movwf	(___fldiv@a+2)^0,c
  7929  003E8A  0E40               	movlw	64
  7930  003E8C  6E44               	movwf	(___fldiv@a+3)^0,c
  7931  003E8E  ECBB  F015         	call	___fldiv	;wreg free
  7932  003E92  C03D  F0B4         	movff	?___fldiv,?_mpu_ler
  7933  003E96  C03E  F0B5         	movff	?___fldiv+1,?_mpu_ler+1
  7934  003E9A  C03F  F0B6         	movff	?___fldiv+2,?_mpu_ler+2
  7935  003E9E  C040  F0B7         	movff	?___fldiv+3,?_mpu_ler+3
  7936  003EA2  0012               	return		;funcret
  7937  003EA4                     __end_of_mpu_ler:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _i2c_ler *****************
  7941 ;; Defined at:
  7942 ;;		line 124 in file "I2C.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  ACK_NACK        1    wreg     unsigned char 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  ACK_NACK        1    3[COMRAM] unsigned char 
  7947 ;;  dado            1    4[COMRAM] unsigned char 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      unsigned char 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7957 ;;      Params:         0       0       0       0       0       0       0       0       0
  7958 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7960 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7961 ;;Total ram usage:        2 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    3
  7964 ;; This function calls:
  7965 ;;		_i2c_ack
  7966 ;;		_i2c_nack
  7967 ;;		_i2c_pronto
  7968 ;; This function is called by:
  7969 ;;		_mpu_ler
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text34
  7974  004B62                     __ptext34:
  7975                           	opt callstack 0
  7976  004B62                     _i2c_ler:
  7977                           	opt callstack 26
  7978                           
  7979                           ;incstack = 0
  7980                           ;i2c_ler@ACK_NACK stored from wreg
  7981  004B62  6E04               	movwf	i2c_ler@ACK_NACK^0,c
  7982  004B64                     
  7983                           ;I2C.c: 124: char i2c_ler(char ACK_NACK);I2C.c: 125: {;I2C.c: 127:     char dado;;I2C.c:
      +                           128:     RCEN = 1;
  7984  004B64  86C5               	bsf	4037,3,c	;volatile
  7985  004B66                     l222:
  7986  004B66  A0C7               	btfss	4039,0,c	;volatile
  7987  004B68  EFB8  F025         	goto	u9341
  7988  004B6C  EFBA  F025         	goto	u9340
  7989  004B70                     u9341:
  7990  004B70  EFB3  F025         	goto	l222
  7991  004B74                     u9340:
  7992  004B74                     
  7993                           ;I2C.c: 130:     dado = SSPBUF;
  7994  004B74  CFC9 F005          	movff	4041,i2c_ler@dado	;volatile
  7995  004B78                     
  7996                           ;I2C.c: 131:     if(ACK_NACK==0){
  7997  004B78  5004               	movf	i2c_ler@ACK_NACK^0,w,c
  7998  004B7A  A4D8               	btfss	status,2,c
  7999  004B7C  EFC2  F025         	goto	u9351
  8000  004B80  EFC4  F025         	goto	u9350
  8001  004B84                     u9351:
  8002  004B84  EFC8  F025         	goto	l6863
  8003  004B88                     u9350:
  8004  004B88                     
  8005                           ;I2C.c: 132:         i2c_ack(); }
  8006  004B88  ECE8  F026         	call	_i2c_ack	;wreg free
  8007  004B8C  EFCA  F025         	goto	l226
  8008  004B90                     l6863:
  8009                           
  8010                           ;I2C.c: 134:         i2c_nack();}
  8011  004B90  ECDE  F026         	call	_i2c_nack	;wreg free
  8012  004B94                     l226:
  8013                           
  8014                           ;I2C.c: 135:     i2c_pronto();
  8015  004B94  ECFB  F026         	call	_i2c_pronto	;wreg free
  8016  004B98                     
  8017                           ;I2C.c: 136:     return dado;
  8018  004B98  5005               	movf	i2c_ler@dado^0,w,c
  8019  004B9A  0012               	return		;funcret
  8020  004B9C                     __end_of_i2c_ler:
  8021                           	opt callstack 0
  8022                           
  8023 ;; *************** function _i2c_nack *****************
  8024 ;; Defined at:
  8025 ;;		line 91 in file "I2C.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;		None
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		None
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0
  8040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8042 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8043 ;;Total ram usage:        0 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    2
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_i2c_ler
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text35
  8054  004DBC                     __ptext35:
  8055                           	opt callstack 0
  8056  004DBC                     _i2c_nack:
  8057                           	opt callstack 26
  8058  004DBC                     
  8059                           ;I2C.c: 92:     ACKDT=1;
  8060  004DBC  8AC5               	bsf	4037,5,c	;volatile
  8061                           
  8062                           ;I2C.c: 93:     ACKEN=1;
  8063  004DBE  88C5               	bsf	4037,4,c	;volatile
  8064  004DC0                     l207:
  8065  004DC0  B8C5               	btfsc	4037,4,c	;volatile
  8066  004DC2  EFE5  F026         	goto	u8951
  8067  004DC6  EFE7  F026         	goto	u8950
  8068  004DCA                     u8951:
  8069  004DCA  EFE0  F026         	goto	l207
  8070  004DCE                     u8950:
  8071  004DCE  0012               	return		;funcret
  8072  004DD0                     __end_of_i2c_nack:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _i2c_ack *****************
  8076 ;; Defined at:
  8077 ;;		line 86 in file "I2C.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;		None
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		None
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8091 ;;      Params:         0       0       0       0       0       0       0       0       0
  8092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8095 ;;Total ram usage:        0 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    2
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_i2c_ler
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text36
  8106  004DD0                     __ptext36:
  8107                           	opt callstack 0
  8108  004DD0                     _i2c_ack:
  8109                           	opt callstack 26
  8110  004DD0                     
  8111                           ;I2C.c: 87:     ACKDT=0;
  8112  004DD0  9AC5               	bcf	4037,5,c	;volatile
  8113                           
  8114                           ;I2C.c: 88:     ACKEN=1;
  8115  004DD2  88C5               	bsf	4037,4,c	;volatile
  8116  004DD4                     l201:
  8117  004DD4  B8C5               	btfsc	4037,4,c	;volatile
  8118  004DD6  EFEF  F026         	goto	u8941
  8119  004DDA  EFF1  F026         	goto	u8940
  8120  004DDE                     u8941:
  8121  004DDE  EFEA  F026         	goto	l201
  8122  004DE2                     u8940:
  8123  004DE2  0012               	return		;funcret
  8124  004DE4                     __end_of_i2c_ack:
  8125                           	opt callstack 0
  8126                           
  8127 ;; *************** function _i2c_init *****************
  8128 ;; Defined at:
  8129 ;;		line 36 in file "I2C.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  end             1    wreg     unsigned char 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  end             1    4[COMRAM] unsigned char 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      unsigned char 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0
  8144 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8147 ;;Total ram usage:        1 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    4
  8150 ;; This function calls:
  8151 ;;		_i2c_mestre_escreve
  8152 ;; This function is called by:
  8153 ;;		_mpu_ler
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text37
  8158  004CAE                     __ptext37:
  8159                           	opt callstack 0
  8160  004CAE                     _i2c_init:
  8161                           	opt callstack 25
  8162                           
  8163                           ;incstack = 0
  8164                           ;i2c_init@end stored from wreg
  8165  004CAE  6E05               	movwf	i2c_init@end^0,c
  8166  004CB0                     
  8167                           ;I2C.c: 36: char i2c_init(char end);I2C.c: 37: {;I2C.c: 38:     SEN = 1;
  8168  004CB0  80C5               	bsf	4037,0,c	;volatile
  8169  004CB2                     l171:
  8170  004CB2  B0C5               	btfsc	4037,0,c	;volatile
  8171  004CB4  EF5E  F026         	goto	u9291
  8172  004CB8  EF60  F026         	goto	u9290
  8173  004CBC                     u9291:
  8174  004CBC  EF59  F026         	goto	l171
  8175  004CC0                     u9290:
  8176  004CC0                     
  8177                           ;I2C.c: 40:     SSPIF=0;
  8178  004CC0  969E               	bcf	3998,3,c	;volatile
  8179                           
  8180                           ;I2C.c: 41:     if(!SSPSTATbits.S){
  8181  004CC2  B6C7               	btfsc	199,3,c	;volatile
  8182  004CC4  EF66  F026         	goto	u9301
  8183  004CC8  EF68  F026         	goto	u9300
  8184  004CCC                     u9301:
  8185  004CCC  EF6A  F026         	goto	l6845
  8186  004CD0                     u9300:
  8187  004CD0  EF6D  F026         	goto	l175
  8188  004CD4                     l6845:
  8189                           
  8190                           ;I2C.c: 43:     return (i2c_mestre_escreve(end));;	Return value of _i2c_init is never us
      +                          ed
  8191  004CD4  5005               	movf	i2c_init@end^0,w,c
  8192  004CD6  EC92  F026         	call	_i2c_mestre_escreve
  8193  004CDA                     l175:
  8194  004CDA  0012               	return		;funcret
  8195  004CDC                     __end_of_i2c_init:
  8196                           	opt callstack 0
  8197                           
  8198 ;; *************** function _asinf *****************
  8199 ;; Defined at:
  8200 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\asinf.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  x               4   40[BANK0 ] float 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  ix              4   80[BANK0 ] unsigned long 
  8205 ;;  hx              4   76[BANK0 ] unsigned long 
  8206 ;;  z               4   72[BANK0 ] float 
  8207 ;;  s               4   68[BANK0 ] float 
  8208 ;;  __xc8_float_    4   48[BANK0 ] struct .
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  4   40[BANK0 ] float 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8218 ;;      Params:         0       4       0       0       0       0       0       0       0
  8219 ;;      Locals:         0      36       0       0       0       0       0       0       0
  8220 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8221 ;;      Totals:         0      44       0       0       0       0       0       0       0
  8222 ;;Total ram usage:       44 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    4
  8225 ;; This function calls:
  8226 ;;		_R
  8227 ;;		___fladd
  8228 ;;		___fldiv
  8229 ;;		___flmul
  8230 ;;		___flneg
  8231 ;;		___flsub
  8232 ;;		_fabsf
  8233 ;;		_sqrtf
  8234 ;; This function is called by:
  8235 ;;		_mpu_ler
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text38
  8240  002784                     __ptext38:
  8241                           	opt callstack 0
  8242  002784                     _asinf:
  8243                           	opt callstack 25
  8244  002784  C088  F090         	movff	asinf@x,asinf@__xc8_float_word
  8245  002788  C089  F091         	movff	asinf@x+1,asinf@__xc8_float_word+1
  8246  00278C  C08A  F092         	movff	asinf@x+2,asinf@__xc8_float_word+2
  8247  002790  C08B  F093         	movff	asinf@x+3,asinf@__xc8_float_word+3
  8248  002794  C090  F0AC         	movff	asinf@__xc8_float_word,asinf@hx
  8249  002798  C091  F0AD         	movff	asinf@__xc8_float_word+1,asinf@hx+1
  8250  00279C  C092  F0AE         	movff	asinf@__xc8_float_word+2,asinf@hx+2
  8251  0027A0  C093  F0AF         	movff	asinf@__xc8_float_word+3,asinf@hx+3
  8252  0027A4  0EFF               	movlw	255
  8253  0027A6  0100               	movlb	0	; () banked
  8254  0027A8  15AC               	andwf	asinf@hx& (0+255),w,b
  8255  0027AA  6FB0               	movwf	asinf@ix& (0+255),b
  8256  0027AC  0EFF               	movlw	255
  8257  0027AE  15AD               	andwf	(asinf@hx+1)& (0+255),w,b
  8258  0027B0  6FB1               	movwf	(asinf@ix+1)& (0+255),b
  8259  0027B2  0EFF               	movlw	255
  8260  0027B4  15AE               	andwf	(asinf@hx+2)& (0+255),w,b
  8261  0027B6  6FB2               	movwf	(asinf@ix+2)& (0+255),b
  8262  0027B8  0E7F               	movlw	127
  8263  0027BA  15AF               	andwf	(asinf@hx+3)& (0+255),w,b
  8264  0027BC  6FB3               	movwf	(asinf@ix+3)& (0+255),b
  8265  0027BE  0E80               	movlw	128
  8266  0027C0  5DB2               	subwf	(asinf@ix+2)& (0+255),w,b
  8267  0027C2  0E3F               	movlw	63
  8268  0027C4  59B3               	subwfb	(asinf@ix+3)& (0+255),w,b
  8269  0027C6  A0D8               	btfss	status,0,c
  8270  0027C8  EFE8  F013         	goto	u9361
  8271  0027CC  EFEA  F013         	goto	u9360
  8272  0027D0                     u9361:
  8273  0027D0  EF54  F014         	goto	l6881
  8274  0027D4                     u9360:
  8275  0027D4                     
  8276                           ; BSR set to: 0
  8277  0027D4  0E80               	movlw	128
  8278  0027D6  19B2               	xorwf	(asinf@ix+2)& (0+255),w,b
  8279  0027D8  E109               	bnz	u9371
  8280  0027DA  0E3F               	movlw	63
  8281  0027DC  19B3               	xorwf	(asinf@ix+3)& (0+255),w,b
  8282  0027DE  11B0               	iorwf	asinf@ix& (0+255),w,b
  8283  0027E0  11B1               	iorwf	(asinf@ix+1)& (0+255),w,b
  8284  0027E2  A4D8               	btfss	status,2,c
  8285  0027E4  EFF6  F013         	goto	u9371
  8286  0027E8  EFF8  F013         	goto	u9370
  8287  0027EC                     u9371:
  8288  0027EC  EF26  F014         	goto	l6877
  8289  0027F0                     u9370:
  8290  0027F0                     
  8291                           ; BSR set to: 0
  8292  0027F0  0EDB               	movlw	219
  8293  0027F2  6E10               	movwf	___flmul@a^0,c
  8294  0027F4  0E0F               	movlw	15
  8295  0027F6  6E11               	movwf	(___flmul@a+1)^0,c
  8296  0027F8  0EC9               	movlw	201
  8297  0027FA  6E12               	movwf	(___flmul@a+2)^0,c
  8298  0027FC  0E3F               	movlw	63
  8299  0027FE  6E13               	movwf	(___flmul@a+3)^0,c
  8300  002800  C088  F00C         	movff	asinf@x,___flmul@b
  8301  002804  C089  F00D         	movff	asinf@x+1,___flmul@b+1
  8302  002808  C08A  F00E         	movff	asinf@x+2,___flmul@b+2
  8303  00280C  C08B  F00F         	movff	asinf@x+3,___flmul@b+3
  8304  002810  ECAD  F011         	call	___flmul	;wreg free
  8305  002814  C00C  F025         	movff	?___flmul,___fladd@b
  8306  002818  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  8307  00281C  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  8308  002820  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  8309  002824  0E00               	movlw	0
  8310  002826  6E29               	movwf	___fladd@a^0,c
  8311  002828  0E00               	movlw	0
  8312  00282A  6E2A               	movwf	(___fladd@a+1)^0,c
  8313  00282C  0E80               	movlw	128
  8314  00282E  6E2B               	movwf	(___fladd@a+2)^0,c
  8315  002830  0E03               	movlw	3
  8316  002832  6E2C               	movwf	(___fladd@a+3)^0,c
  8317  002834  EC4D  F00F         	call	___fladd	;wreg free
  8318  002838  C025  F088         	movff	?___fladd,?_asinf
  8319  00283C  C026  F089         	movff	?___fladd+1,?_asinf+1
  8320  002840  C027  F08A         	movff	?___fladd+2,?_asinf+2
  8321  002844  C028  F08B         	movff	?___fladd+3,?_asinf+3
  8322  002848  EFBA  F015         	goto	l1200
  8323  00284C                     l6877:
  8324                           
  8325                           ; BSR set to: 0
  8326  00284C  0E00               	movlw	0
  8327  00284E  6E3D               	movwf	___fldiv@b^0,c
  8328  002850  0E00               	movlw	0
  8329  002852  6E3E               	movwf	(___fldiv@b+1)^0,c
  8330  002854  0E00               	movlw	0
  8331  002856  6E3F               	movwf	(___fldiv@b+2)^0,c
  8332  002858  0E00               	movlw	0
  8333  00285A  6E40               	movwf	(___fldiv@b+3)^0,c
  8334  00285C  C088  F039         	movff	asinf@x,___flsub@a
  8335  002860  C089  F03A         	movff	asinf@x+1,___flsub@a+1
  8336  002864  C08A  F03B         	movff	asinf@x+2,___flsub@a+2
  8337  002868  C08B  F03C         	movff	asinf@x+3,___flsub@a+3
  8338  00286C  C088  F035         	movff	asinf@x,___flsub@b
  8339  002870  C089  F036         	movff	asinf@x+1,___flsub@b+1
  8340  002874  C08A  F037         	movff	asinf@x+2,___flsub@b+2
  8341  002878  C08B  F038         	movff	asinf@x+3,___flsub@b+3
  8342  00287C  EC0A  F025         	call	___flsub	;wreg free
  8343  002880  C035  F041         	movff	?___flsub,___fldiv@a
  8344  002884  C036  F042         	movff	?___flsub+1,___fldiv@a+1
  8345  002888  C037  F043         	movff	?___flsub+2,___fldiv@a+2
  8346  00288C  C038  F044         	movff	?___flsub+3,___fldiv@a+3
  8347  002890  ECBB  F015         	call	___fldiv	;wreg free
  8348  002894  C03D  F088         	movff	?___fldiv,?_asinf
  8349  002898  C03E  F089         	movff	?___fldiv+1,?_asinf+1
  8350  00289C  C03F  F08A         	movff	?___fldiv+2,?_asinf+2
  8351  0028A0  C040  F08B         	movff	?___fldiv+3,?_asinf+3
  8352  0028A4  EFBA  F015         	goto	l1200
  8353  0028A8                     l6881:
  8354                           
  8355                           ; BSR set to: 0
  8356  0028A8  0E3F               	movlw	63
  8357  0028AA  5DB3               	subwf	(asinf@ix+3)& (0+255),w,b
  8358  0028AC  B0D8               	btfsc	status,0,c
  8359  0028AE  EF5B  F014         	goto	u9381
  8360  0028B2  EF5D  F014         	goto	u9380
  8361  0028B6                     u9381:
  8362  0028B6  EFD7  F014         	goto	l6893
  8363  0028BA                     u9380:
  8364  0028BA                     
  8365                           ; BSR set to: 0
  8366  0028BA  0E80               	movlw	128
  8367  0028BC  5DB2               	subwf	(asinf@ix+2)& (0+255),w,b
  8368  0028BE  0E39               	movlw	57
  8369  0028C0  59B3               	subwfb	(asinf@ix+3)& (0+255),w,b
  8370  0028C2  B0D8               	btfsc	status,0,c
  8371  0028C4  EF66  F014         	goto	u9391
  8372  0028C8  EF68  F014         	goto	u9390
  8373  0028CC                     u9391:
  8374  0028CC  EF7D  F014         	goto	l6889
  8375  0028D0                     u9390:
  8376  0028D0                     
  8377                           ; BSR set to: 0
  8378  0028D0  51B3               	movf	(asinf@ix+3)& (0+255),w,b
  8379  0028D2  E109               	bnz	u9400
  8380  0028D4  0E80               	movlw	128
  8381  0028D6  5DB2               	subwf	(asinf@ix+2)& (0+255),w,b
  8382  0028D8  A0D8               	btfss	status,0,c
  8383  0028DA  EF71  F014         	goto	u9401
  8384  0028DE  EF73  F014         	goto	u9400
  8385  0028E2                     u9401:
  8386  0028E2  EF7D  F014         	goto	l6889
  8387  0028E6                     u9400:
  8388  0028E6                     l6887:
  8389                           
  8390                           ; BSR set to: 0
  8391  0028E6  C088  F088         	movff	asinf@x,?_asinf
  8392  0028EA  C089  F089         	movff	asinf@x+1,?_asinf+1
  8393  0028EE  C08A  F08A         	movff	asinf@x+2,?_asinf+2
  8394  0028F2  C08B  F08B         	movff	asinf@x+3,?_asinf+3
  8395  0028F6  EFBA  F015         	goto	l1200
  8396  0028FA                     l6889:
  8397                           
  8398                           ; BSR set to: 0
  8399  0028FA  C088  F010         	movff	asinf@x,___flmul@a
  8400  0028FE  C089  F011         	movff	asinf@x+1,___flmul@a+1
  8401  002902  C08A  F012         	movff	asinf@x+2,___flmul@a+2
  8402  002906  C08B  F013         	movff	asinf@x+3,___flmul@a+3
  8403  00290A  C088  F00C         	movff	asinf@x,___flmul@b
  8404  00290E  C089  F00D         	movff	asinf@x+1,___flmul@b+1
  8405  002912  C08A  F00E         	movff	asinf@x+2,___flmul@b+2
  8406  002916  C08B  F00F         	movff	asinf@x+3,___flmul@b+3
  8407  00291A  ECAD  F011         	call	___flmul	;wreg free
  8408  00291E  C00C  F094         	movff	?___flmul,_asinf$1409
  8409  002922  C00D  F095         	movff	?___flmul+1,_asinf$1409+1
  8410  002926  C00E  F096         	movff	?___flmul+2,_asinf$1409+2
  8411  00292A  C00F  F097         	movff	?___flmul+3,_asinf$1409+3
  8412  00292E  C094  F056         	movff	_asinf$1409,R@z
  8413  002932  C095  F057         	movff	_asinf$1409+1,R@z+1
  8414  002936  C096  F058         	movff	_asinf$1409+2,R@z+2
  8415  00293A  C097  F059         	movff	_asinf$1409+3,R@z+3
  8416  00293E  EC63  F01D         	call	_R	;wreg free
  8417  002942  C056  F098         	movff	?_R,_asinf$1410
  8418  002946  C057  F099         	movff	?_R+1,_asinf$1410+1
  8419  00294A  C058  F09A         	movff	?_R+2,_asinf$1410+2
  8420  00294E  C059  F09B         	movff	?_R+3,_asinf$1410+3
  8421  002952  C088  F010         	movff	asinf@x,___flmul@a
  8422  002956  C089  F011         	movff	asinf@x+1,___flmul@a+1
  8423  00295A  C08A  F012         	movff	asinf@x+2,___flmul@a+2
  8424  00295E  C08B  F013         	movff	asinf@x+3,___flmul@a+3
  8425  002962  C098  F00C         	movff	_asinf$1410,___flmul@b
  8426  002966  C099  F00D         	movff	_asinf$1410+1,___flmul@b+1
  8427  00296A  C09A  F00E         	movff	_asinf$1410+2,___flmul@b+2
  8428  00296E  C09B  F00F         	movff	_asinf$1410+3,___flmul@b+3
  8429  002972  ECAD  F011         	call	___flmul	;wreg free
  8430  002976  C00C  F025         	movff	?___flmul,___fladd@b
  8431  00297A  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  8432  00297E  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  8433  002982  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  8434  002986  C088  F029         	movff	asinf@x,___fladd@a
  8435  00298A  C089  F02A         	movff	asinf@x+1,___fladd@a+1
  8436  00298E  C08A  F02B         	movff	asinf@x+2,___fladd@a+2
  8437  002992  C08B  F02C         	movff	asinf@x+3,___fladd@a+3
  8438  002996  EC4D  F00F         	call	___fladd	;wreg free
  8439  00299A  C025  F088         	movff	?___fladd,?_asinf
  8440  00299E  C026  F089         	movff	?___fladd+1,?_asinf+1
  8441  0029A2  C027  F08A         	movff	?___fladd+2,?_asinf+2
  8442  0029A6  C028  F08B         	movff	?___fladd+3,?_asinf+3
  8443  0029AA  EFBA  F015         	goto	l1200
  8444  0029AE                     l6893:
  8445                           
  8446                           ; BSR set to: 0
  8447  0029AE  C088  F004         	movff	asinf@x,fabsf@x
  8448  0029B2  C089  F005         	movff	asinf@x+1,fabsf@x+1
  8449  0029B6  C08A  F006         	movff	asinf@x+2,fabsf@x+2
  8450  0029BA  C08B  F007         	movff	asinf@x+3,fabsf@x+3
  8451  0029BE  EC3D  F026         	call	_fabsf	;wreg free
  8452  0029C2  C004  F039         	movff	?_fabsf,___flsub@a
  8453  0029C6  C005  F03A         	movff	?_fabsf+1,___flsub@a+1
  8454  0029CA  C006  F03B         	movff	?_fabsf+2,___flsub@a+2
  8455  0029CE  C007  F03C         	movff	?_fabsf+3,___flsub@a+3
  8456  0029D2  0E00               	movlw	0
  8457  0029D4  6E35               	movwf	___flsub@b^0,c
  8458  0029D6  0E00               	movlw	0
  8459  0029D8  6E36               	movwf	(___flsub@b+1)^0,c
  8460  0029DA  0E80               	movlw	128
  8461  0029DC  6E37               	movwf	(___flsub@b+2)^0,c
  8462  0029DE  0E3F               	movlw	63
  8463  0029E0  6E38               	movwf	(___flsub@b+3)^0,c
  8464  0029E2  EC0A  F025         	call	___flsub	;wreg free
  8465  0029E6  C035  F00C         	movff	?___flsub,___flmul@b
  8466  0029EA  C036  F00D         	movff	?___flsub+1,___flmul@b+1
  8467  0029EE  C037  F00E         	movff	?___flsub+2,___flmul@b+2
  8468  0029F2  C038  F00F         	movff	?___flsub+3,___flmul@b+3
  8469  0029F6  0E00               	movlw	0
  8470  0029F8  6E10               	movwf	___flmul@a^0,c
  8471  0029FA  0E00               	movlw	0
  8472  0029FC  6E11               	movwf	(___flmul@a+1)^0,c
  8473  0029FE  0E00               	movlw	0
  8474  002A00  6E12               	movwf	(___flmul@a+2)^0,c
  8475  002A02  0E3F               	movlw	63
  8476  002A04  6E13               	movwf	(___flmul@a+3)^0,c
  8477  002A06  ECAD  F011         	call	___flmul	;wreg free
  8478  002A0A  C00C  F0A8         	movff	?___flmul,asinf@z
  8479  002A0E  C00D  F0A9         	movff	?___flmul+1,asinf@z+1
  8480  002A12  C00E  F0AA         	movff	?___flmul+2,asinf@z+2
  8481  002A16  C00F  F0AB         	movff	?___flmul+3,asinf@z+3
  8482  002A1A  C0A8  F035         	movff	asinf@z,sqrtf@x
  8483  002A1E  C0A9  F036         	movff	asinf@z+1,sqrtf@x+1
  8484  002A22  C0AA  F037         	movff	asinf@z+2,sqrtf@x+2
  8485  002A26  C0AB  F038         	movff	asinf@z+3,sqrtf@x+3
  8486  002A2A  ECEC  F00C         	call	_sqrtf	;wreg free
  8487  002A2E  C035  F0A4         	movff	?_sqrtf,asinf@s
  8488  002A32  C036  F0A5         	movff	?_sqrtf+1,asinf@s+1
  8489  002A36  C037  F0A6         	movff	?_sqrtf+2,asinf@s+2
  8490  002A3A  C038  F0A7         	movff	?_sqrtf+3,asinf@s+3
  8491  002A3E  C0A8  F056         	movff	asinf@z,R@z
  8492  002A42  C0A9  F057         	movff	asinf@z+1,R@z+1
  8493  002A46  C0AA  F058         	movff	asinf@z+2,R@z+2
  8494  002A4A  C0AB  F059         	movff	asinf@z+3,R@z+3
  8495  002A4E  EC63  F01D         	call	_R	;wreg free
  8496  002A52  C056  F09C         	movff	?_R,_asinf$1411
  8497  002A56  C057  F09D         	movff	?_R+1,_asinf$1411+1
  8498  002A5A  C058  F09E         	movff	?_R+2,_asinf$1411+2
  8499  002A5E  C059  F09F         	movff	?_R+3,_asinf$1411+3
  8500  002A62  C0A4  F029         	movff	asinf@s,___fladd@a
  8501  002A66  C0A5  F02A         	movff	asinf@s+1,___fladd@a+1
  8502  002A6A  C0A6  F02B         	movff	asinf@s+2,___fladd@a+2
  8503  002A6E  C0A7  F02C         	movff	asinf@s+3,___fladd@a+3
  8504  002A72  C0A4  F010         	movff	asinf@s,___flmul@a
  8505  002A76  C0A5  F011         	movff	asinf@s+1,___flmul@a+1
  8506  002A7A  C0A6  F012         	movff	asinf@s+2,___flmul@a+2
  8507  002A7E  C0A7  F013         	movff	asinf@s+3,___flmul@a+3
  8508  002A82  C09C  F00C         	movff	_asinf$1411,___flmul@b
  8509  002A86  C09D  F00D         	movff	_asinf$1411+1,___flmul@b+1
  8510  002A8A  C09E  F00E         	movff	_asinf$1411+2,___flmul@b+2
  8511  002A8E  C09F  F00F         	movff	_asinf$1411+3,___flmul@b+3
  8512  002A92  ECAD  F011         	call	___flmul	;wreg free
  8513  002A96  C00C  F025         	movff	?___flmul,___fladd@b
  8514  002A9A  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  8515  002A9E  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  8516  002AA2  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  8517  002AA6  EC4D  F00F         	call	___fladd	;wreg free
  8518  002AAA  C025  F0A0         	movff	?___fladd,_asinf$1412
  8519  002AAE  C026  F0A1         	movff	?___fladd+1,_asinf$1412+1
  8520  002AB2  C027  F0A2         	movff	?___fladd+2,_asinf$1412+2
  8521  002AB6  C028  F0A3         	movff	?___fladd+3,_asinf$1412+3
  8522  002ABA  0EDB               	movlw	219
  8523  002ABC  6E35               	movwf	___flsub@b^0,c
  8524  002ABE  0E0F               	movlw	15
  8525  002AC0  6E36               	movwf	(___flsub@b+1)^0,c
  8526  002AC2  0EC9               	movlw	201
  8527  002AC4  6E37               	movwf	(___flsub@b+2)^0,c
  8528  002AC6  0E3F               	movlw	63
  8529  002AC8  6E38               	movwf	(___flsub@b+3)^0,c
  8530  002ACA  0E00               	movlw	0
  8531  002ACC  6E10               	movwf	___flmul@a^0,c
  8532  002ACE  0E00               	movlw	0
  8533  002AD0  6E11               	movwf	(___flmul@a+1)^0,c
  8534  002AD2  0E00               	movlw	0
  8535  002AD4  6E12               	movwf	(___flmul@a+2)^0,c
  8536  002AD6  0E40               	movlw	64
  8537  002AD8  6E13               	movwf	(___flmul@a+3)^0,c
  8538  002ADA  C0A0  F00C         	movff	_asinf$1412,___flmul@b
  8539  002ADE  C0A1  F00D         	movff	_asinf$1412+1,___flmul@b+1
  8540  002AE2  C0A2  F00E         	movff	_asinf$1412+2,___flmul@b+2
  8541  002AE6  C0A3  F00F         	movff	_asinf$1412+3,___flmul@b+3
  8542  002AEA  ECAD  F011         	call	___flmul	;wreg free
  8543  002AEE  C00C  F039         	movff	?___flmul,___flsub@a
  8544  002AF2  C00D  F03A         	movff	?___flmul+1,___flsub@a+1
  8545  002AF6  C00E  F03B         	movff	?___flmul+2,___flsub@a+2
  8546  002AFA  C00F  F03C         	movff	?___flmul+3,___flsub@a+3
  8547  002AFE  EC0A  F025         	call	___flsub	;wreg free
  8548  002B02  C035  F088         	movff	?___flsub,asinf@x
  8549  002B06  C036  F089         	movff	?___flsub+1,asinf@x+1
  8550  002B0A  C037  F08A         	movff	?___flsub+2,asinf@x+2
  8551  002B0E  C038  F08B         	movff	?___flsub+3,asinf@x+3
  8552  002B12  C0AC  F08C         	movff	asinf@hx,??_asinf
  8553  002B16  C0AD  F08D         	movff	asinf@hx+1,??_asinf+1
  8554  002B1A  C0AE  F08E         	movff	asinf@hx+2,??_asinf+2
  8555  002B1E  C0AF  F08F         	movff	asinf@hx+3,??_asinf+3
  8556  002B22  0E20               	movlw	32
  8557  002B24  EF9A  F015         	goto	u9410
  8558  002B28                     u9415:
  8559  002B28  0100               	movlb	0	; () banked
  8560  002B2A  90D8               	bcf	status,0,c
  8561  002B2C  338F               	rrcf	(??_asinf+3)& (0+255),f,b
  8562  002B2E  338E               	rrcf	(??_asinf+2)& (0+255),f,b
  8563  002B30  338D               	rrcf	(??_asinf+1)& (0+255),f,b
  8564  002B32  338C               	rrcf	??_asinf& (0+255),f,b
  8565  002B34                     u9410:
  8566  002B34  2EE8               	decfsz	wreg,f,c
  8567  002B36  EF94  F015         	goto	u9415
  8568  002B3A  518C               	movf	??_asinf& (0+255),w,b
  8569  002B3C  118D               	iorwf	(??_asinf+1)& (0+255),w,b
  8570  002B3E  118E               	iorwf	(??_asinf+2)& (0+255),w,b
  8571  002B40  118F               	iorwf	(??_asinf+3)& (0+255),w,b
  8572  002B42  B4D8               	btfsc	status,2,c
  8573  002B44  EFA6  F015         	goto	u9421
  8574  002B48  EFA8  F015         	goto	u9420
  8575  002B4C                     u9421:
  8576  002B4C  EF73  F014         	goto	l6887
  8577  002B50                     u9420:
  8578  002B50                     
  8579                           ; BSR set to: 0
  8580  002B50  C088  F004         	movff	asinf@x,___flneg@f1
  8581  002B54  C089  F005         	movff	asinf@x+1,___flneg@f1+1
  8582  002B58  C08A  F006         	movff	asinf@x+2,___flneg@f1+2
  8583  002B5C  C08B  F007         	movff	asinf@x+3,___flneg@f1+3
  8584  002B60  EC06  F026         	call	___flneg	;wreg free
  8585  002B64  C004  F088         	movff	?___flneg,?_asinf
  8586  002B68  C005  F089         	movff	?___flneg+1,?_asinf+1
  8587  002B6C  C006  F08A         	movff	?___flneg+2,?_asinf+2
  8588  002B70  C007  F08B         	movff	?___flneg+3,?_asinf+3
  8589  002B74                     l1200:
  8590  002B74  0012               	return		;funcret
  8591  002B76                     __end_of_asinf:
  8592                           	opt callstack 0
  8593                           
  8594 ;; *************** function _sqrtf *****************
  8595 ;; Defined at:
  8596 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sqrtf.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  x               4   52[COMRAM] float 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  ix              4   36[BANK0 ] long 
  8601 ;;  r               4   32[BANK0 ] unsigned long 
  8602 ;;  m               4   28[BANK0 ] long 
  8603 ;;  z               4   24[BANK0 ] float 
  8604 ;;  t               4   20[BANK0 ] long 
  8605 ;;  q               4   16[BANK0 ] long 
  8606 ;;  __xc8_float_    4   12[BANK0 ] struct .
  8607 ;;  i               4    8[BANK0 ] long 
  8608 ;;  s               4    4[BANK0 ] long 
  8609 ;;  sign            4    0        long 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  4   52[COMRAM] float 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8619 ;;      Params:         4       0       0       0       0       0       0       0       0
  8620 ;;      Locals:         0      40       0       0       0       0       0       0       0
  8621 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8622 ;;      Totals:         9      40       0       0       0       0       0       0       0
  8623 ;;Total ram usage:       49 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    3
  8626 ;; This function calls:
  8627 ;;		___fladd
  8628 ;;		___flge
  8629 ;;		___flmul
  8630 ;;		_nanf
  8631 ;; This function is called by:
  8632 ;;		_asinf
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text39
  8637  0019D8                     __ptext39:
  8638                           	opt callstack 0
  8639  0019D8                     _sqrtf:
  8640                           	opt callstack 25
  8641  0019D8  C035  F06C         	movff	sqrtf@x,sqrtf@__xc8_float_word
  8642  0019DC  C036  F06D         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  8643  0019E0  C037  F06E         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  8644  0019E4  C038  F06F         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  8645  0019E8  C06C  F084         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  8646  0019EC  C06D  F085         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  8647  0019F0  C06E  F086         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  8648  0019F4  C06F  F087         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  8649  0019F8  0E00               	movlw	0
  8650  0019FA  0100               	movlb	0	; () banked
  8651  0019FC  1584               	andwf	sqrtf@ix& (0+255),w,b
  8652  0019FE  6E39               	movwf	??_sqrtf^0,c
  8653  001A00  0E00               	movlw	0
  8654  001A02  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8655  001A04  6E3A               	movwf	(??_sqrtf+1)^0,c
  8656  001A06  0E80               	movlw	128
  8657  001A08  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8658  001A0A  6E3B               	movwf	(??_sqrtf+2)^0,c
  8659  001A0C  0E7F               	movlw	127
  8660  001A0E  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8661  001A10  6E3C               	movwf	(??_sqrtf+3)^0,c
  8662  001A12  0E80               	movlw	128
  8663  001A14  183B               	xorwf	(??_sqrtf+2)^0,w,c
  8664  001A16  E109               	bnz	u9141
  8665  001A18  0E7F               	movlw	127
  8666  001A1A  183C               	xorwf	(??_sqrtf+3)^0,w,c
  8667  001A1C  1039               	iorwf	??_sqrtf^0,w,c
  8668  001A1E  103A               	iorwf	(??_sqrtf+1)^0,w,c
  8669  001A20  A4D8               	btfss	status,2,c
  8670  001A22  EF15  F00D         	goto	u9141
  8671  001A26  EF17  F00D         	goto	u9140
  8672  001A2A                     u9141:
  8673  001A2A  EF45  F00D         	goto	l6773
  8674  001A2E                     u9140:
  8675  001A2E                     
  8676                           ; BSR set to: 0
  8677  001A2E  C035  F010         	movff	sqrtf@x,___flmul@a
  8678  001A32  C036  F011         	movff	sqrtf@x+1,___flmul@a+1
  8679  001A36  C037  F012         	movff	sqrtf@x+2,___flmul@a+2
  8680  001A3A  C038  F013         	movff	sqrtf@x+3,___flmul@a+3
  8681  001A3E  C035  F00C         	movff	sqrtf@x,___flmul@b
  8682  001A42  C036  F00D         	movff	sqrtf@x+1,___flmul@b+1
  8683  001A46  C037  F00E         	movff	sqrtf@x+2,___flmul@b+2
  8684  001A4A  C038  F00F         	movff	sqrtf@x+3,___flmul@b+3
  8685  001A4E  ECAD  F011         	call	___flmul	;wreg free
  8686  001A52  C00C  F025         	movff	?___flmul,___fladd@b
  8687  001A56  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  8688  001A5A  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  8689  001A5E  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  8690  001A62  C035  F029         	movff	sqrtf@x,___fladd@a
  8691  001A66  C036  F02A         	movff	sqrtf@x+1,___fladd@a+1
  8692  001A6A  C037  F02B         	movff	sqrtf@x+2,___fladd@a+2
  8693  001A6E  C038  F02C         	movff	sqrtf@x+3,___fladd@a+3
  8694  001A72  EC4D  F00F         	call	___fladd	;wreg free
  8695  001A76  C025  F035         	movff	?___fladd,?_sqrtf
  8696  001A7A  C026  F036         	movff	?___fladd+1,?_sqrtf+1
  8697  001A7E  C027  F037         	movff	?___fladd+2,?_sqrtf+2
  8698  001A82  C028  F038         	movff	?___fladd+3,?_sqrtf+3
  8699  001A86  EF4C  F00F         	goto	l1314
  8700  001A8A                     l6773:
  8701                           
  8702                           ; BSR set to: 0
  8703  001A8A  BF87               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  8704  001A8C  EF54  F00D         	goto	u9150
  8705  001A90  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8706  001A92  1186               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  8707  001A94  1185               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  8708  001A96  E106               	bnz	u9151
  8709  001A98  0584               	decf	sqrtf@ix& (0+255),w,b
  8710  001A9A  B0D8               	btfsc	status,0,c
  8711  001A9C  EF52  F00D         	goto	u9151
  8712  001AA0  EF54  F00D         	goto	u9150
  8713  001AA4                     u9151:
  8714  001AA4  EF91  F00D         	goto	l6787
  8715  001AA8                     u9150:
  8716  001AA8                     
  8717                           ; BSR set to: 0
  8718  001AA8  0EFF               	movlw	255
  8719  001AAA  1584               	andwf	sqrtf@ix& (0+255),w,b
  8720  001AAC  6E39               	movwf	??_sqrtf^0,c
  8721  001AAE  0EFF               	movlw	255
  8722  001AB0  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8723  001AB2  6E3A               	movwf	(??_sqrtf+1)^0,c
  8724  001AB4  0EFF               	movlw	255
  8725  001AB6  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8726  001AB8  6E3B               	movwf	(??_sqrtf+2)^0,c
  8727  001ABA  0E7F               	movlw	127
  8728  001ABC  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8729  001ABE  6E3C               	movwf	(??_sqrtf+3)^0,c
  8730  001AC0  5039               	movf	??_sqrtf^0,w,c
  8731  001AC2  103A               	iorwf	(??_sqrtf+1)^0,w,c
  8732  001AC4  103B               	iorwf	(??_sqrtf+2)^0,w,c
  8733  001AC6  103C               	iorwf	(??_sqrtf+3)^0,w,c
  8734  001AC8  A4D8               	btfss	status,2,c
  8735  001ACA  EF69  F00D         	goto	u9161
  8736  001ACE  EF6B  F00D         	goto	u9160
  8737  001AD2                     u9161:
  8738  001AD2  EF75  F00D         	goto	l6779
  8739  001AD6                     u9160:
  8740  001AD6                     
  8741                           ; BSR set to: 0
  8742  001AD6  C035  F035         	movff	sqrtf@x,?_sqrtf
  8743  001ADA  C036  F036         	movff	sqrtf@x+1,?_sqrtf+1
  8744  001ADE  C037  F037         	movff	sqrtf@x+2,?_sqrtf+2
  8745  001AE2  C038  F038         	movff	sqrtf@x+3,?_sqrtf+3
  8746  001AE6  EF4C  F00F         	goto	l1314
  8747  001AEA                     l6779:
  8748                           
  8749                           ; BSR set to: 0
  8750  001AEA  BF87               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  8751  001AEC  EF7C  F00D         	goto	u9170
  8752  001AF0  EF7A  F00D         	goto	u9171
  8753  001AF4                     u9171:
  8754  001AF4  EF91  F00D         	goto	l6787
  8755  001AF8                     u9170:
  8756  001AF8                     
  8757                           ; BSR set to: 0
  8758  001AF8  0E00               	movlw	0
  8759  001AFA  0101               	movlb	1	; () banked
  8760  001AFC  6F15               	movwf	(_errno+1)& (0+255),b
  8761  001AFE  0E21               	movlw	33
  8762  001B00  6F14               	movwf	_errno& (0+255),b
  8763  001B02                     
  8764                           ; BSR set to: 1
  8765  001B02  0E25               	movlw	low (STR_2+3)
  8766  001B04  6E04               	movwf	nanf@s^0,c
  8767  001B06  0E08               	movlw	high (STR_2+3)
  8768  001B08  6E05               	movwf	(nanf@s+1)^0,c
  8769  001B0A  EC81  F026         	call	_nanf	;wreg free
  8770  001B0E  C004  F035         	movff	?_nanf,?_sqrtf
  8771  001B12  C005  F036         	movff	?_nanf+1,?_sqrtf+1
  8772  001B16  C006  F037         	movff	?_nanf+2,?_sqrtf+2
  8773  001B1A  C007  F038         	movff	?_nanf+3,?_sqrtf+3
  8774  001B1E  EF4C  F00F         	goto	l1314
  8775  001B22                     l6787:
  8776                           
  8777                           ; BSR set to: 0
  8778  001B22  0E17               	movlw	23
  8779  001B24  6E39               	movwf	??_sqrtf^0,c
  8780  001B26  C084  F03A         	movff	sqrtf@ix,??_sqrtf+1
  8781  001B2A  C085  F03B         	movff	sqrtf@ix+1,??_sqrtf+2
  8782  001B2E  C086  F03C         	movff	sqrtf@ix+2,??_sqrtf+3
  8783  001B32  C087  F03D         	movff	sqrtf@ix+3,??_sqrtf+4
  8784  001B36                     u9185:
  8785  001B36  6639               	tstfsz	??_sqrtf^0,c
  8786  001B38  EFA0  F00D         	goto	u9186
  8787  001B3C  EFA8  F00D         	goto	u9187
  8788  001B40                     u9186:
  8789  001B40  343D               	rlcf	(??_sqrtf+4)^0,w,c
  8790  001B42  323D               	rrcf	(??_sqrtf+4)^0,f,c
  8791  001B44  323C               	rrcf	(??_sqrtf+3)^0,f,c
  8792  001B46  323B               	rrcf	(??_sqrtf+2)^0,f,c
  8793  001B48  323A               	rrcf	(??_sqrtf+1)^0,f,c
  8794  001B4A  2E39               	decfsz	??_sqrtf^0,f,c
  8795  001B4C  EF9B  F00D         	goto	u9185
  8796  001B50                     u9187:
  8797  001B50  C03A  F07C         	movff	??_sqrtf+1,sqrtf@m
  8798  001B54  C03B  F07D         	movff	??_sqrtf+2,sqrtf@m+1
  8799  001B58  C03C  F07E         	movff	??_sqrtf+3,sqrtf@m+2
  8800  001B5C  C03D  F07F         	movff	??_sqrtf+4,sqrtf@m+3
  8801  001B60  0100               	movlb	0	; () banked
  8802  001B62  517C               	movf	sqrtf@m& (0+255),w,b
  8803  001B64  117D               	iorwf	(sqrtf@m+1)& (0+255),w,b
  8804  001B66  117E               	iorwf	(sqrtf@m+2)& (0+255),w,b
  8805  001B68  117F               	iorwf	(sqrtf@m+3)& (0+255),w,b
  8806  001B6A  A4D8               	btfss	status,2,c
  8807  001B6C  EFBA  F00D         	goto	u9191
  8808  001B70  EFBC  F00D         	goto	u9190
  8809  001B74                     u9191:
  8810  001B74  EFEC  F00D         	goto	l1318
  8811  001B78                     u9190:
  8812  001B78                     
  8813                           ; BSR set to: 0
  8814  001B78  0E00               	movlw	0
  8815  001B7A  6F68               	movwf	sqrtf@i& (0+255),b
  8816  001B7C  0E00               	movlw	0
  8817  001B7E  6F69               	movwf	(sqrtf@i+1)& (0+255),b
  8818  001B80  0E00               	movlw	0
  8819  001B82  6F6A               	movwf	(sqrtf@i+2)& (0+255),b
  8820  001B84  0E00               	movlw	0
  8821  001B86  6F6B               	movwf	(sqrtf@i+3)& (0+255),b
  8822  001B88  EFD1  F00D         	goto	l6795
  8823  001B8C                     l6791:
  8824                           
  8825                           ; BSR set to: 0
  8826  001B8C  90D8               	bcf	status,0,c
  8827  001B8E  3784               	rlcf	sqrtf@ix& (0+255),f,b
  8828  001B90  3785               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  8829  001B92  3786               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  8830  001B94  3787               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  8831  001B96                     
  8832                           ; BSR set to: 0
  8833  001B96  0E01               	movlw	1
  8834  001B98  2768               	addwf	sqrtf@i& (0+255),f,b
  8835  001B9A  0E00               	movlw	0
  8836  001B9C  2369               	addwfc	(sqrtf@i+1)& (0+255),f,b
  8837  001B9E  236A               	addwfc	(sqrtf@i+2)& (0+255),f,b
  8838  001BA0  236B               	addwfc	(sqrtf@i+3)& (0+255),f,b
  8839  001BA2                     l6795:
  8840                           
  8841                           ; BSR set to: 0
  8842  001BA2  AF86               	btfss	(sqrtf@ix+2)& (0+255),7,b
  8843  001BA4  EFD6  F00D         	goto	u9201
  8844  001BA8  EFD8  F00D         	goto	u9200
  8845  001BAC                     u9201:
  8846  001BAC  EFC6  F00D         	goto	l6791
  8847  001BB0                     u9200:
  8848  001BB0                     
  8849                           ; BSR set to: 0
  8850  001BB0  0EFF               	movlw	255
  8851  001BB2  2568               	addwf	sqrtf@i& (0+255),w,b
  8852  001BB4  6E39               	movwf	??_sqrtf^0,c
  8853  001BB6  0EFF               	movlw	255
  8854  001BB8  2169               	addwfc	(sqrtf@i+1)& (0+255),w,b
  8855  001BBA  6E3A               	movwf	(??_sqrtf+1)^0,c
  8856  001BBC  0EFF               	movlw	255
  8857  001BBE  216A               	addwfc	(sqrtf@i+2)& (0+255),w,b
  8858  001BC0  6E3B               	movwf	(??_sqrtf+2)^0,c
  8859  001BC2  0EFF               	movlw	255
  8860  001BC4  216B               	addwfc	(sqrtf@i+3)& (0+255),w,b
  8861  001BC6  6E3C               	movwf	(??_sqrtf+3)^0,c
  8862  001BC8  5039               	movf	??_sqrtf^0,w,c
  8863  001BCA  5F7C               	subwf	sqrtf@m& (0+255),f,b
  8864  001BCC  503A               	movf	(??_sqrtf+1)^0,w,c
  8865  001BCE  5B7D               	subwfb	(sqrtf@m+1)& (0+255),f,b
  8866  001BD0  503B               	movf	(??_sqrtf+2)^0,w,c
  8867  001BD2  5B7E               	subwfb	(sqrtf@m+2)& (0+255),f,b
  8868  001BD4  503C               	movf	(??_sqrtf+3)^0,w,c
  8869  001BD6  5B7F               	subwfb	(sqrtf@m+3)& (0+255),f,b
  8870  001BD8                     l1318:
  8871                           
  8872                           ; BSR set to: 0
  8873  001BD8  0E81               	movlw	129
  8874  001BDA  277C               	addwf	sqrtf@m& (0+255),f,b
  8875  001BDC  0EFF               	movlw	255
  8876  001BDE  237D               	addwfc	(sqrtf@m+1)& (0+255),f,b
  8877  001BE0  0EFF               	movlw	255
  8878  001BE2  237E               	addwfc	(sqrtf@m+2)& (0+255),f,b
  8879  001BE4  0EFF               	movlw	255
  8880  001BE6  237F               	addwfc	(sqrtf@m+3)& (0+255),f,b
  8881  001BE8  0EFF               	movlw	255
  8882  001BEA  1584               	andwf	sqrtf@ix& (0+255),w,b
  8883  001BEC  6E39               	movwf	??_sqrtf^0,c
  8884  001BEE  0EFF               	movlw	255
  8885  001BF0  1585               	andwf	(sqrtf@ix+1)& (0+255),w,b
  8886  001BF2  6E3A               	movwf	(??_sqrtf+1)^0,c
  8887  001BF4  0E7F               	movlw	127
  8888  001BF6  1586               	andwf	(sqrtf@ix+2)& (0+255),w,b
  8889  001BF8  6E3B               	movwf	(??_sqrtf+2)^0,c
  8890  001BFA  0E00               	movlw	0
  8891  001BFC  1587               	andwf	(sqrtf@ix+3)& (0+255),w,b
  8892  001BFE  6E3C               	movwf	(??_sqrtf+3)^0,c
  8893  001C00  0E00               	movlw	0
  8894  001C02  1039               	iorwf	??_sqrtf^0,w,c
  8895  001C04  6F84               	movwf	sqrtf@ix& (0+255),b
  8896  001C06  0E00               	movlw	0
  8897  001C08  103A               	iorwf	(??_sqrtf+1)^0,w,c
  8898  001C0A  6F85               	movwf	(sqrtf@ix+1)& (0+255),b
  8899  001C0C  0E80               	movlw	128
  8900  001C0E  103B               	iorwf	(??_sqrtf+2)^0,w,c
  8901  001C10  6F86               	movwf	(sqrtf@ix+2)& (0+255),b
  8902  001C12  0E00               	movlw	0
  8903  001C14  103C               	iorwf	(??_sqrtf+3)^0,w,c
  8904  001C16  6F87               	movwf	(sqrtf@ix+3)& (0+255),b
  8905  001C18                     
  8906                           ; BSR set to: 0
  8907  001C18  A17C               	btfss	sqrtf@m& (0+255),0,b
  8908  001C1A  EF11  F00E         	goto	u9211
  8909  001C1E  EF13  F00E         	goto	u9210
  8910  001C22                     u9211:
  8911  001C22  EF1B  F00E         	goto	l1322
  8912  001C26                     u9210:
  8913  001C26                     
  8914                           ; BSR set to: 0
  8915  001C26  5184               	movf	sqrtf@ix& (0+255),w,b
  8916  001C28  2784               	addwf	sqrtf@ix& (0+255),f,b
  8917  001C2A  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  8918  001C2C  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8919  001C2E  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  8920  001C30  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8921  001C32  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8922  001C34  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8923  001C36                     l1322:
  8924                           
  8925                           ; BSR set to: 0
  8926  001C36  357F               	rlcf	(sqrtf@m+3)& (0+255),w,b
  8927  001C38  337F               	rrcf	(sqrtf@m+3)& (0+255),f,b
  8928  001C3A  337E               	rrcf	(sqrtf@m+2)& (0+255),f,b
  8929  001C3C  337D               	rrcf	(sqrtf@m+1)& (0+255),f,b
  8930  001C3E  337C               	rrcf	sqrtf@m& (0+255),f,b
  8931  001C40  5184               	movf	sqrtf@ix& (0+255),w,b
  8932  001C42  2784               	addwf	sqrtf@ix& (0+255),f,b
  8933  001C44  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  8934  001C46  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  8935  001C48  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  8936  001C4A  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  8937  001C4C  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8938  001C4E  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  8939  001C50                     
  8940                           ; BSR set to: 0
  8941  001C50  0E00               	movlw	0
  8942  001C52  6F64               	movwf	sqrtf@s& (0+255),b
  8943  001C54  0E00               	movlw	0
  8944  001C56  6F65               	movwf	(sqrtf@s+1)& (0+255),b
  8945  001C58  0E00               	movlw	0
  8946  001C5A  6F66               	movwf	(sqrtf@s+2)& (0+255),b
  8947  001C5C  0E00               	movlw	0
  8948  001C5E  6F67               	movwf	(sqrtf@s+3)& (0+255),b
  8949  001C60  C064  F070         	movff	sqrtf@s,sqrtf@q
  8950  001C64  C065  F071         	movff	sqrtf@s+1,sqrtf@q+1
  8951  001C68  C066  F072         	movff	sqrtf@s+2,sqrtf@q+2
  8952  001C6C  C067  F073         	movff	sqrtf@s+3,sqrtf@q+3
  8953  001C70                     
  8954                           ; BSR set to: 0
  8955  001C70  0E00               	movlw	0
  8956  001C72  6F80               	movwf	sqrtf@r& (0+255),b
  8957  001C74  0E00               	movlw	0
  8958  001C76  6F81               	movwf	(sqrtf@r+1)& (0+255),b
  8959  001C78  0E00               	movlw	0
  8960  001C7A  6F82               	movwf	(sqrtf@r+2)& (0+255),b
  8961  001C7C  0E01               	movlw	1
  8962  001C7E  6F83               	movwf	(sqrtf@r+3)& (0+255),b
  8963  001C80  EF8A  F00E         	goto	l6813
  8964  001C84                     l6807:
  8965                           
  8966                           ; BSR set to: 0
  8967  001C84  5180               	movf	sqrtf@r& (0+255),w,b
  8968  001C86  2564               	addwf	sqrtf@s& (0+255),w,b
  8969  001C88  6F74               	movwf	sqrtf@t& (0+255),b
  8970  001C8A  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  8971  001C8C  2165               	addwfc	(sqrtf@s+1)& (0+255),w,b
  8972  001C8E  6F75               	movwf	(sqrtf@t+1)& (0+255),b
  8973  001C90  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  8974  001C92  2166               	addwfc	(sqrtf@s+2)& (0+255),w,b
  8975  001C94  6F76               	movwf	(sqrtf@t+2)& (0+255),b
  8976  001C96  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  8977  001C98  2167               	addwfc	(sqrtf@s+3)& (0+255),w,b
  8978  001C9A  6F77               	movwf	(sqrtf@t+3)& (0+255),b
  8979  001C9C  5174               	movf	sqrtf@t& (0+255),w,b
  8980  001C9E  5D84               	subwf	sqrtf@ix& (0+255),w,b
  8981  001CA0  5175               	movf	(sqrtf@t+1)& (0+255),w,b
  8982  001CA2  5985               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  8983  001CA4  5176               	movf	(sqrtf@t+2)& (0+255),w,b
  8984  001CA6  5986               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  8985  001CA8  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  8986  001CAA  0A80               	xorlw	128
  8987  001CAC  6E39               	movwf	??_sqrtf^0,c
  8988  001CAE  5177               	movf	(sqrtf@t+3)& (0+255),w,b
  8989  001CB0  0A80               	xorlw	128
  8990  001CB2  5839               	subwfb	??_sqrtf^0,w,c
  8991  001CB4  A0D8               	btfss	status,0,c
  8992  001CB6  EF5F  F00E         	goto	u9221
  8993  001CBA  EF61  F00E         	goto	u9220
  8994  001CBE                     u9221:
  8995  001CBE  EF7D  F00E         	goto	l1325
  8996  001CC2                     u9220:
  8997  001CC2                     
  8998                           ; BSR set to: 0
  8999  001CC2  5180               	movf	sqrtf@r& (0+255),w,b
  9000  001CC4  2574               	addwf	sqrtf@t& (0+255),w,b
  9001  001CC6  6F64               	movwf	sqrtf@s& (0+255),b
  9002  001CC8  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  9003  001CCA  2175               	addwfc	(sqrtf@t+1)& (0+255),w,b
  9004  001CCC  6F65               	movwf	(sqrtf@s+1)& (0+255),b
  9005  001CCE  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  9006  001CD0  2176               	addwfc	(sqrtf@t+2)& (0+255),w,b
  9007  001CD2  6F66               	movwf	(sqrtf@s+2)& (0+255),b
  9008  001CD4  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  9009  001CD6  2177               	addwfc	(sqrtf@t+3)& (0+255),w,b
  9010  001CD8  6F67               	movwf	(sqrtf@s+3)& (0+255),b
  9011  001CDA  5174               	movf	sqrtf@t& (0+255),w,b
  9012  001CDC  5F84               	subwf	sqrtf@ix& (0+255),f,b
  9013  001CDE  5175               	movf	(sqrtf@t+1)& (0+255),w,b
  9014  001CE0  5B85               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  9015  001CE2  5176               	movf	(sqrtf@t+2)& (0+255),w,b
  9016  001CE4  5B86               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  9017  001CE6  5177               	movf	(sqrtf@t+3)& (0+255),w,b
  9018  001CE8  5B87               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  9019  001CEA  5180               	movf	sqrtf@r& (0+255),w,b
  9020  001CEC  2770               	addwf	sqrtf@q& (0+255),f,b
  9021  001CEE  5181               	movf	(sqrtf@r+1)& (0+255),w,b
  9022  001CF0  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  9023  001CF2  5182               	movf	(sqrtf@r+2)& (0+255),w,b
  9024  001CF4  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  9025  001CF6  5183               	movf	(sqrtf@r+3)& (0+255),w,b
  9026  001CF8  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  9027  001CFA                     l1325:
  9028                           
  9029                           ; BSR set to: 0
  9030  001CFA  5184               	movf	sqrtf@ix& (0+255),w,b
  9031  001CFC  2784               	addwf	sqrtf@ix& (0+255),f,b
  9032  001CFE  5185               	movf	(sqrtf@ix+1)& (0+255),w,b
  9033  001D00  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  9034  001D02  5186               	movf	(sqrtf@ix+2)& (0+255),w,b
  9035  001D04  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  9036  001D06  5187               	movf	(sqrtf@ix+3)& (0+255),w,b
  9037  001D08  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  9038  001D0A                     
  9039                           ; BSR set to: 0
  9040  001D0A  90D8               	bcf	status,0,c
  9041  001D0C  3383               	rrcf	(sqrtf@r+3)& (0+255),f,b
  9042  001D0E  3382               	rrcf	(sqrtf@r+2)& (0+255),f,b
  9043  001D10  3381               	rrcf	(sqrtf@r+1)& (0+255),f,b
  9044  001D12  3380               	rrcf	sqrtf@r& (0+255),f,b
  9045  001D14                     l6813:
  9046                           
  9047                           ; BSR set to: 0
  9048  001D14  5180               	movf	sqrtf@r& (0+255),w,b
  9049  001D16  1181               	iorwf	(sqrtf@r+1)& (0+255),w,b
  9050  001D18  1182               	iorwf	(sqrtf@r+2)& (0+255),w,b
  9051  001D1A  1183               	iorwf	(sqrtf@r+3)& (0+255),w,b
  9052  001D1C  A4D8               	btfss	status,2,c
  9053  001D1E  EF93  F00E         	goto	u9231
  9054  001D22  EF95  F00E         	goto	u9230
  9055  001D26                     u9231:
  9056  001D26  EF42  F00E         	goto	l6807
  9057  001D2A                     u9230:
  9058  001D2A                     
  9059                           ; BSR set to: 0
  9060  001D2A  5184               	movf	sqrtf@ix& (0+255),w,b
  9061  001D2C  1185               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  9062  001D2E  1186               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  9063  001D30  1187               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  9064  001D32  B4D8               	btfsc	status,2,c
  9065  001D34  EF9E  F00E         	goto	u9241
  9066  001D38  EFA0  F00E         	goto	u9240
  9067  001D3C                     u9241:
  9068  001D3C  EF01  F00F         	goto	l1327
  9069  001D40                     u9240:
  9070  001D40                     
  9071                           ; BSR set to: 0
  9072  001D40  0E00               	movlw	0
  9073  001D42  6F78               	movwf	sqrtf@z& (0+255),b
  9074  001D44  0E00               	movlw	0
  9075  001D46  6F79               	movwf	(sqrtf@z+1)& (0+255),b
  9076  001D48  0E80               	movlw	128
  9077  001D4A  6F7A               	movwf	(sqrtf@z+2)& (0+255),b
  9078  001D4C  0E3F               	movlw	63
  9079  001D4E  6F7B               	movwf	(sqrtf@z+3)& (0+255),b
  9080  001D50                     
  9081                           ; BSR set to: 0
  9082  001D50  C078  F025         	movff	sqrtf@z,___flge@ff1
  9083  001D54  C079  F026         	movff	sqrtf@z+1,___flge@ff1+1
  9084  001D58  C07A  F027         	movff	sqrtf@z+2,___flge@ff1+2
  9085  001D5C  C07B  F028         	movff	sqrtf@z+3,___flge@ff1+3
  9086  001D60  0E00               	movlw	0
  9087  001D62  6E29               	movwf	___flge@ff2^0,c
  9088  001D64  0E00               	movlw	0
  9089  001D66  6E2A               	movwf	(___flge@ff2+1)^0,c
  9090  001D68  0E80               	movlw	128
  9091  001D6A  6E2B               	movwf	(___flge@ff2+2)^0,c
  9092  001D6C  0E3F               	movlw	63
  9093  001D6E  6E2C               	movwf	(___flge@ff2+3)^0,c
  9094  001D70  ECD5  F01F         	call	___flge	;wreg free
  9095  001D74  A0D8               	btfss	status,0,c
  9096  001D76  EFBF  F00E         	goto	u9251
  9097  001D7A  EFC1  F00E         	goto	u9250
  9098  001D7E                     u9251:
  9099  001D7E  EF01  F00F         	goto	l1327
  9100  001D82                     u9250:
  9101  001D82  0E00               	movlw	0
  9102  001D84  0100               	movlb	0	; () banked
  9103  001D86  6F78               	movwf	sqrtf@z& (0+255),b
  9104  001D88  0E00               	movlw	0
  9105  001D8A  6F79               	movwf	(sqrtf@z+1)& (0+255),b
  9106  001D8C  0E80               	movlw	128
  9107  001D8E  6F7A               	movwf	(sqrtf@z+2)& (0+255),b
  9108  001D90  0E3F               	movlw	63
  9109  001D92  6F7B               	movwf	(sqrtf@z+3)& (0+255),b
  9110  001D94                     
  9111                           ; BSR set to: 0
  9112  001D94  0E00               	movlw	0
  9113  001D96  6E25               	movwf	___flge@ff1^0,c
  9114  001D98  0E00               	movlw	0
  9115  001D9A  6E26               	movwf	(___flge@ff1+1)^0,c
  9116  001D9C  0E80               	movlw	128
  9117  001D9E  6E27               	movwf	(___flge@ff1+2)^0,c
  9118  001DA0  0E3F               	movlw	63
  9119  001DA2  6E28               	movwf	(___flge@ff1+3)^0,c
  9120  001DA4  C078  F029         	movff	sqrtf@z,___flge@ff2
  9121  001DA8  C079  F02A         	movff	sqrtf@z+1,___flge@ff2+1
  9122  001DAC  C07A  F02B         	movff	sqrtf@z+2,___flge@ff2+2
  9123  001DB0  C07B  F02C         	movff	sqrtf@z+3,___flge@ff2+3
  9124  001DB4  ECD5  F01F         	call	___flge	;wreg free
  9125  001DB8  B0D8               	btfsc	status,0,c
  9126  001DBA  EFE1  F00E         	goto	u9261
  9127  001DBE  EFE3  F00E         	goto	u9260
  9128  001DC2                     u9261:
  9129  001DC2  EFEC  F00E         	goto	l6827
  9130  001DC6                     u9260:
  9131  001DC6  0E02               	movlw	2
  9132  001DC8  0100               	movlb	0	; () banked
  9133  001DCA  2770               	addwf	sqrtf@q& (0+255),f,b
  9134  001DCC  0E00               	movlw	0
  9135  001DCE  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  9136  001DD0  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  9137  001DD2  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  9138  001DD4  EF01  F00F         	goto	l1327
  9139  001DD8                     l6827:
  9140  001DD8  0E01               	movlw	1
  9141  001DDA  0100               	movlb	0	; () banked
  9142  001DDC  1570               	andwf	sqrtf@q& (0+255),w,b
  9143  001DDE  6E39               	movwf	??_sqrtf^0,c
  9144  001DE0  0E00               	movlw	0
  9145  001DE2  1571               	andwf	(sqrtf@q+1)& (0+255),w,b
  9146  001DE4  6E3A               	movwf	(??_sqrtf+1)^0,c
  9147  001DE6  0E00               	movlw	0
  9148  001DE8  1572               	andwf	(sqrtf@q+2)& (0+255),w,b
  9149  001DEA  6E3B               	movwf	(??_sqrtf+2)^0,c
  9150  001DEC  0E00               	movlw	0
  9151  001DEE  1573               	andwf	(sqrtf@q+3)& (0+255),w,b
  9152  001DF0  6E3C               	movwf	(??_sqrtf+3)^0,c
  9153  001DF2  5039               	movf	??_sqrtf^0,w,c
  9154  001DF4  2770               	addwf	sqrtf@q& (0+255),f,b
  9155  001DF6  503A               	movf	(??_sqrtf+1)^0,w,c
  9156  001DF8  2371               	addwfc	(sqrtf@q+1)& (0+255),f,b
  9157  001DFA  503B               	movf	(??_sqrtf+2)^0,w,c
  9158  001DFC  2372               	addwfc	(sqrtf@q+2)& (0+255),f,b
  9159  001DFE  503C               	movf	(??_sqrtf+3)^0,w,c
  9160  001E00  2373               	addwfc	(sqrtf@q+3)& (0+255),f,b
  9161  001E02                     l1327:
  9162  001E02  C070  F039         	movff	sqrtf@q,??_sqrtf
  9163  001E06  C071  F03A         	movff	sqrtf@q+1,??_sqrtf+1
  9164  001E0A  C072  F03B         	movff	sqrtf@q+2,??_sqrtf+2
  9165  001E0E  C073  F03C         	movff	sqrtf@q+3,??_sqrtf+3
  9166  001E12  343C               	rlcf	(??_sqrtf+3)^0,w,c
  9167  001E14  323C               	rrcf	(??_sqrtf+3)^0,f,c
  9168  001E16  323B               	rrcf	(??_sqrtf+2)^0,f,c
  9169  001E18  323A               	rrcf	(??_sqrtf+1)^0,f,c
  9170  001E1A  3239               	rrcf	??_sqrtf^0,f,c
  9171  001E1C  0E00               	movlw	0
  9172  001E1E  2439               	addwf	??_sqrtf^0,w,c
  9173  001E20  0100               	movlb	0	; () banked
  9174  001E22  6F84               	movwf	sqrtf@ix& (0+255),b
  9175  001E24  0E00               	movlw	0
  9176  001E26  203A               	addwfc	(??_sqrtf+1)^0,w,c
  9177  001E28  6F85               	movwf	(sqrtf@ix+1)& (0+255),b
  9178  001E2A  0E00               	movlw	0
  9179  001E2C  203B               	addwfc	(??_sqrtf+2)^0,w,c
  9180  001E2E  6F86               	movwf	(sqrtf@ix+2)& (0+255),b
  9181  001E30  0E3F               	movlw	63
  9182  001E32  203C               	addwfc	(??_sqrtf+3)^0,w,c
  9183  001E34  6F87               	movwf	(sqrtf@ix+3)& (0+255),b
  9184  001E36  C07C  F039         	movff	sqrtf@m,??_sqrtf
  9185  001E3A  C07D  F03A         	movff	sqrtf@m+1,??_sqrtf+1
  9186  001E3E  C07E  F03B         	movff	sqrtf@m+2,??_sqrtf+2
  9187  001E42  C07F  F03C         	movff	sqrtf@m+3,??_sqrtf+3
  9188  001E46  0E17               	movlw	23
  9189  001E48                     u9275:
  9190  001E48  90D8               	bcf	status,0,c
  9191  001E4A  3639               	rlcf	??_sqrtf^0,f,c
  9192  001E4C  363A               	rlcf	(??_sqrtf+1)^0,f,c
  9193  001E4E  363B               	rlcf	(??_sqrtf+2)^0,f,c
  9194  001E50  363C               	rlcf	(??_sqrtf+3)^0,f,c
  9195  001E52  2EE8               	decfsz	wreg,f,c
  9196  001E54  EF24  F00F         	goto	u9275
  9197  001E58  5039               	movf	??_sqrtf^0,w,c
  9198  001E5A  2784               	addwf	sqrtf@ix& (0+255),f,b
  9199  001E5C  503A               	movf	(??_sqrtf+1)^0,w,c
  9200  001E5E  2385               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  9201  001E60  503B               	movf	(??_sqrtf+2)^0,w,c
  9202  001E62  2386               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  9203  001E64  503C               	movf	(??_sqrtf+3)^0,w,c
  9204  001E66  2387               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  9205  001E68                     
  9206                           ; BSR set to: 0
  9207  001E68  C084  F06C         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  9208  001E6C  C085  F06D         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  9209  001E70  C086  F06E         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  9210  001E74  C087  F06F         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  9211  001E78                     
  9212                           ; BSR set to: 0
  9213  001E78  C06C  F078         	movff	sqrtf@__xc8_float_word,sqrtf@z
  9214  001E7C  C06D  F079         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  9215  001E80  C06E  F07A         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  9216  001E84  C06F  F07B         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  9217  001E88                     
  9218                           ; BSR set to: 0
  9219  001E88  C078  F035         	movff	sqrtf@z,?_sqrtf
  9220  001E8C  C079  F036         	movff	sqrtf@z+1,?_sqrtf+1
  9221  001E90  C07A  F037         	movff	sqrtf@z+2,?_sqrtf+2
  9222  001E94  C07B  F038         	movff	sqrtf@z+3,?_sqrtf+3
  9223  001E98                     l1314:
  9224  001E98  0012               	return		;funcret
  9225  001E9A                     __end_of_sqrtf:
  9226                           	opt callstack 0
  9227                           
  9228 ;; *************** function _nanf *****************
  9229 ;; Defined at:
  9230 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nanf.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  s               2    3[COMRAM] PTR const unsigned char 
  9233 ;;		 -> STR_15(1), 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  u               4    7[COMRAM] struct .
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  4    3[COMRAM] float 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9245 ;;      Params:         4       0       0       0       0       0       0       0       0
  9246 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9248 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9249 ;;Total ram usage:        8 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    2
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_sqrtf
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text40
  9260  004D02                     __ptext40:
  9261                           	opt callstack 0
  9262  004D02                     _nanf:
  9263                           	opt callstack 25
  9264  004D02  0EFF               	movlw	255
  9265  004D04  6E08               	movwf	nanf@u^0,c
  9266  004D06  0EFF               	movlw	255
  9267  004D08  6E09               	movwf	(nanf@u+1)^0,c
  9268  004D0A  0EFF               	movlw	255
  9269  004D0C  6E0A               	movwf	(nanf@u+2)^0,c
  9270  004D0E  0E7F               	movlw	127
  9271  004D10  6E0B               	movwf	(nanf@u+3)^0,c
  9272  004D12  C008  F004         	movff	nanf@u,?_nanf
  9273  004D16  C009  F005         	movff	nanf@u+1,?_nanf+1
  9274  004D1A  C00A  F006         	movff	nanf@u+2,?_nanf+2
  9275  004D1E  C00B  F007         	movff	nanf@u+3,?_nanf+3
  9276  004D22  0012               	return		;funcret
  9277  004D24                     __end_of_nanf:
  9278                           	opt callstack 0
  9279                           
  9280 ;; *************** function ___flge *****************
  9281 ;; Defined at:
  9282 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  ff1             4   36[COMRAM] float 
  9285 ;;  ff2             4   40[COMRAM] float 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;		None               void
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9297 ;;      Params:         8       0       0       0       0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9299 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9300 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:       12 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:    2
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		_efgtoa
  9308 ;;		_sqrtf
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text41
  9313  003FAA                     __ptext41:
  9314                           	opt callstack 0
  9315  003FAA                     ___flge:
  9316                           	opt callstack 24
  9317  003FAA  0E00               	movlw	0
  9318  003FAC  1425               	andwf	___flge@ff1^0,w,c
  9319  003FAE  6E2D               	movwf	??___flge^0,c
  9320  003FB0  0E00               	movlw	0
  9321  003FB2  1426               	andwf	(___flge@ff1+1)^0,w,c
  9322  003FB4  6E2E               	movwf	(??___flge+1)^0,c
  9323  003FB6  0E80               	movlw	128
  9324  003FB8  1427               	andwf	(___flge@ff1+2)^0,w,c
  9325  003FBA  6E2F               	movwf	(??___flge+2)^0,c
  9326  003FBC  0E7F               	movlw	127
  9327  003FBE  1428               	andwf	(___flge@ff1+3)^0,w,c
  9328  003FC0  6E30               	movwf	(??___flge+3)^0,c
  9329  003FC2  502D               	movf	??___flge^0,w,c
  9330  003FC4  102E               	iorwf	(??___flge+1)^0,w,c
  9331  003FC6  102F               	iorwf	(??___flge+2)^0,w,c
  9332  003FC8  1030               	iorwf	(??___flge+3)^0,w,c
  9333  003FCA  A4D8               	btfss	status,2,c
  9334  003FCC  EFEA  F01F         	goto	u7921
  9335  003FD0  EFEC  F01F         	goto	u7920
  9336  003FD4                     u7921:
  9337  003FD4  EFF4  F01F         	goto	l6071
  9338  003FD8                     u7920:
  9339  003FD8  0E00               	movlw	0
  9340  003FDA  6E25               	movwf	___flge@ff1^0,c
  9341  003FDC  0E00               	movlw	0
  9342  003FDE  6E26               	movwf	(___flge@ff1+1)^0,c
  9343  003FE0  0E00               	movlw	0
  9344  003FE2  6E27               	movwf	(___flge@ff1+2)^0,c
  9345  003FE4  0E00               	movlw	0
  9346  003FE6  6E28               	movwf	(___flge@ff1+3)^0,c
  9347  003FE8                     l6071:
  9348  003FE8  0E00               	movlw	0
  9349  003FEA  1429               	andwf	___flge@ff2^0,w,c
  9350  003FEC  6E2D               	movwf	??___flge^0,c
  9351  003FEE  0E00               	movlw	0
  9352  003FF0  142A               	andwf	(___flge@ff2+1)^0,w,c
  9353  003FF2  6E2E               	movwf	(??___flge+1)^0,c
  9354  003FF4  0E80               	movlw	128
  9355  003FF6  142B               	andwf	(___flge@ff2+2)^0,w,c
  9356  003FF8  6E2F               	movwf	(??___flge+2)^0,c
  9357  003FFA  0E7F               	movlw	127
  9358  003FFC  142C               	andwf	(___flge@ff2+3)^0,w,c
  9359  003FFE  6E30               	movwf	(??___flge+3)^0,c
  9360  004000  502D               	movf	??___flge^0,w,c
  9361  004002  102E               	iorwf	(??___flge+1)^0,w,c
  9362  004004  102F               	iorwf	(??___flge+2)^0,w,c
  9363  004006  1030               	iorwf	(??___flge+3)^0,w,c
  9364  004008  A4D8               	btfss	status,2,c
  9365  00400A  EF09  F020         	goto	u7931
  9366  00400E  EF0B  F020         	goto	u7930
  9367  004012                     u7931:
  9368  004012  EF13  F020         	goto	l6075
  9369  004016                     u7930:
  9370  004016  0E00               	movlw	0
  9371  004018  6E29               	movwf	___flge@ff2^0,c
  9372  00401A  0E00               	movlw	0
  9373  00401C  6E2A               	movwf	(___flge@ff2+1)^0,c
  9374  00401E  0E00               	movlw	0
  9375  004020  6E2B               	movwf	(___flge@ff2+2)^0,c
  9376  004022  0E00               	movlw	0
  9377  004024  6E2C               	movwf	(___flge@ff2+3)^0,c
  9378  004026                     l6075:
  9379  004026  AE28               	btfss	(___flge@ff1+3)^0,7,c
  9380  004028  EF18  F020         	goto	u7941
  9381  00402C  EF1A  F020         	goto	u7940
  9382  004030                     u7941:
  9383  004030  EF23  F020         	goto	l6079
  9384  004034                     u7940:
  9385  004034  6C25               	negf	___flge@ff1^0,c
  9386  004036  1E26               	comf	(___flge@ff1+1)^0,f,c
  9387  004038  B0D8               	btfsc	status,0,c
  9388  00403A  2A26               	incf	(___flge@ff1+1)^0,f,c
  9389  00403C  1E27               	comf	(___flge@ff1+2)^0,f,c
  9390  00403E  B0D8               	btfsc	status,0,c
  9391  004040  2A27               	incf	(___flge@ff1+2)^0,f,c
  9392  004042  0E80               	movlw	128
  9393  004044  5628               	subfwb	(___flge@ff1+3)^0,f,c
  9394  004046                     l6079:
  9395  004046  AE2C               	btfss	(___flge@ff2+3)^0,7,c
  9396  004048  EF28  F020         	goto	u7951
  9397  00404C  EF2A  F020         	goto	u7950
  9398  004050                     u7951:
  9399  004050  EF33  F020         	goto	l752
  9400  004054                     u7950:
  9401  004054  6C29               	negf	___flge@ff2^0,c
  9402  004056  1E2A               	comf	(___flge@ff2+1)^0,f,c
  9403  004058  B0D8               	btfsc	status,0,c
  9404  00405A  2A2A               	incf	(___flge@ff2+1)^0,f,c
  9405  00405C  1E2B               	comf	(___flge@ff2+2)^0,f,c
  9406  00405E  B0D8               	btfsc	status,0,c
  9407  004060  2A2B               	incf	(___flge@ff2+2)^0,f,c
  9408  004062  0E80               	movlw	128
  9409  004064  562C               	subfwb	(___flge@ff2+3)^0,f,c
  9410  004066                     l752:
  9411  004066  0E00               	movlw	0
  9412  004068  1A25               	xorwf	___flge@ff1^0,f,c
  9413  00406A  0E00               	movlw	0
  9414  00406C  1A26               	xorwf	(___flge@ff1+1)^0,f,c
  9415  00406E  0E00               	movlw	0
  9416  004070  1A27               	xorwf	(___flge@ff1+2)^0,f,c
  9417  004072  0E80               	movlw	128
  9418  004074  1A28               	xorwf	(___flge@ff1+3)^0,f,c
  9419  004076  0E00               	movlw	0
  9420  004078  1A29               	xorwf	___flge@ff2^0,f,c
  9421  00407A  0E00               	movlw	0
  9422  00407C  1A2A               	xorwf	(___flge@ff2+1)^0,f,c
  9423  00407E  0E00               	movlw	0
  9424  004080  1A2B               	xorwf	(___flge@ff2+2)^0,f,c
  9425  004082  0E80               	movlw	128
  9426  004084  1A2C               	xorwf	(___flge@ff2+3)^0,f,c
  9427  004086  5029               	movf	___flge@ff2^0,w,c
  9428  004088  5C25               	subwf	___flge@ff1^0,w,c
  9429  00408A  502A               	movf	(___flge@ff2+1)^0,w,c
  9430  00408C  5826               	subwfb	(___flge@ff1+1)^0,w,c
  9431  00408E  502B               	movf	(___flge@ff2+2)^0,w,c
  9432  004090  5827               	subwfb	(___flge@ff1+2)^0,w,c
  9433  004092  502C               	movf	(___flge@ff2+3)^0,w,c
  9434  004094  5828               	subwfb	(___flge@ff1+3)^0,w,c
  9435  004096  B0D8               	btfsc	status,0,c
  9436  004098  EF50  F020         	goto	u7961
  9437  00409C  EF52  F020         	goto	u7960
  9438  0040A0                     u7961:
  9439  0040A0  EF55  F020         	goto	l6085
  9440  0040A4                     u7960:
  9441  0040A4  90D8               	bcf	status,0,c
  9442  0040A6  EF56  F020         	goto	l757
  9443  0040AA                     l6085:
  9444  0040AA  80D8               	bsf	status,0,c
  9445  0040AC                     l757:
  9446  0040AC  0012               	return		;funcret
  9447  0040AE                     __end_of___flge:
  9448                           	opt callstack 0
  9449                           
  9450 ;; *************** function _fabsf *****************
  9451 ;; Defined at:
  9452 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  x               4    3[COMRAM] float 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  u               4    7[COMRAM] struct .
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  4    3[COMRAM] float 
  9459 ;; Registers used:
  9460 ;;		status,2, status,0
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9466 ;;      Params:         4       0       0       0       0       0       0       0       0
  9467 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9469 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9470 ;;Total ram usage:        8 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    2
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_asinf
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text42
  9481  004C7A                     __ptext42:
  9482                           	opt callstack 0
  9483  004C7A                     _fabsf:
  9484                           	opt callstack 26
  9485  004C7A  C104  F008         	movff	fabsf@F463,fabsf@u
  9486  004C7E  C105  F009         	movff	fabsf@F463+1,fabsf@u+1
  9487  004C82  C106  F00A         	movff	fabsf@F463+2,fabsf@u+2
  9488  004C86  C107  F00B         	movff	fabsf@F463+3,fabsf@u+3
  9489  004C8A  C004  F008         	movff	fabsf@x,fabsf@u
  9490  004C8E  C005  F009         	movff	fabsf@x+1,fabsf@u+1
  9491  004C92  C006  F00A         	movff	fabsf@x+2,fabsf@u+2
  9492  004C96  C007  F00B         	movff	fabsf@x+3,fabsf@u+3
  9493  004C9A  9E0B               	bcf	(fabsf@u+3)^0,7,c
  9494  004C9C  C008  F004         	movff	fabsf@u,?_fabsf
  9495  004CA0  C009  F005         	movff	fabsf@u+1,?_fabsf+1
  9496  004CA4  C00A  F006         	movff	fabsf@u+2,?_fabsf+2
  9497  004CA8  C00B  F007         	movff	fabsf@u+3,?_fabsf+3
  9498  004CAC  0012               	return		;funcret
  9499  004CAE                     __end_of_fabsf:
  9500                           	opt callstack 0
  9501                           
  9502 ;; *************** function ___flsub *****************
  9503 ;; Defined at:
  9504 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  b               4   52[COMRAM] float 
  9507 ;;  a               4   56[COMRAM] float 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  4   52[COMRAM] float 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9519 ;;      Params:         8       0       0       0       0       0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9522 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9523 ;;Total ram usage:        8 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    3
  9526 ;; This function calls:
  9527 ;;		___fladd
  9528 ;; This function is called by:
  9529 ;;		_main
  9530 ;;		_efgtoa
  9531 ;;		_asinf
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text43
  9536  004A14                     __ptext43:
  9537                           	opt callstack 0
  9538  004A14                     ___flsub:
  9539                           	opt callstack 23
  9540  004A14  0E00               	movlw	0
  9541  004A16  1A39               	xorwf	___flsub@a^0,f,c
  9542  004A18  0E00               	movlw	0
  9543  004A1A  1A3A               	xorwf	(___flsub@a+1)^0,f,c
  9544  004A1C  0E00               	movlw	0
  9545  004A1E  1A3B               	xorwf	(___flsub@a+2)^0,f,c
  9546  004A20  0E80               	movlw	128
  9547  004A22  1A3C               	xorwf	(___flsub@a+3)^0,f,c
  9548  004A24  C035  F025         	movff	___flsub@b,___fladd@b
  9549  004A28  C036  F026         	movff	___flsub@b+1,___fladd@b+1
  9550  004A2C  C037  F027         	movff	___flsub@b+2,___fladd@b+2
  9551  004A30  C038  F028         	movff	___flsub@b+3,___fladd@b+3
  9552  004A34  C039  F029         	movff	___flsub@a,___fladd@a
  9553  004A38  C03A  F02A         	movff	___flsub@a+1,___fladd@a+1
  9554  004A3C  C03B  F02B         	movff	___flsub@a+2,___fladd@a+2
  9555  004A40  C03C  F02C         	movff	___flsub@a+3,___fladd@a+3
  9556  004A44  EC4D  F00F         	call	___fladd	;wreg free
  9557  004A48  C025  F035         	movff	?___fladd,?___flsub
  9558  004A4C  C026  F036         	movff	?___fladd+1,?___flsub+1
  9559  004A50  C027  F037         	movff	?___fladd+2,?___flsub+2
  9560  004A54  C028  F038         	movff	?___fladd+3,?___flsub+3
  9561  004A58  0012               	return		;funcret
  9562  004A5A                     __end_of___flsub:
  9563                           	opt callstack 0
  9564                           
  9565 ;; *************** function ___flneg *****************
  9566 ;; Defined at:
  9567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;  f1              4    3[COMRAM] float 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;		None
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  4    3[COMRAM] float 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9581 ;;      Params:         4       0       0       0       0       0       0       0       0
  9582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9584 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9585 ;;Total ram usage:        4 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    2
  9588 ;; This function calls:
  9589 ;;		Nothing
  9590 ;; This function is called by:
  9591 ;;		_main
  9592 ;;		_efgtoa
  9593 ;;		_asinf
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text44
  9598  004C0C                     __ptext44:
  9599                           	opt callstack 0
  9600  004C0C                     ___flneg:
  9601                           	opt callstack 24
  9602  004C0C  5004               	movf	___flneg@f1^0,w,c
  9603  004C0E  1005               	iorwf	(___flneg@f1+1)^0,w,c
  9604  004C10  1006               	iorwf	(___flneg@f1+2)^0,w,c
  9605  004C12  1007               	iorwf	(___flneg@f1+3)^0,w,c
  9606  004C14  B4D8               	btfsc	status,2,c
  9607  004C16  EF0F  F026         	goto	u7971
  9608  004C1A  EF11  F026         	goto	u7970
  9609  004C1E                     u7971:
  9610  004C1E  EF19  F026         	goto	l6093
  9611  004C22                     u7970:
  9612  004C22  0E00               	movlw	0
  9613  004C24  1A04               	xorwf	___flneg@f1^0,f,c
  9614  004C26  0E00               	movlw	0
  9615  004C28  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  9616  004C2A  0E00               	movlw	0
  9617  004C2C  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  9618  004C2E  0E80               	movlw	128
  9619  004C30  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  9620  004C32                     l6093:
  9621  004C32  C004  F004         	movff	___flneg@f1,?___flneg
  9622  004C36  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  9623  004C3A  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  9624  004C3E  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  9625  004C42  0012               	return		;funcret
  9626  004C44                     __end_of___flneg:
  9627                           	opt callstack 0
  9628                           
  9629 ;; *************** function _R *****************
  9630 ;; Defined at:
  9631 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\asinf.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  z               4   85[COMRAM] float 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  q               4    4[BANK0 ] float 
  9636 ;;  p               4    0[BANK0 ] float 
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  4   85[COMRAM] float 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9646 ;;      Params:         4       0       0       0       0       0       0       0       0
  9647 ;;      Locals:         0      16       0       0       0       0       0       0       0
  9648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9649 ;;      Totals:         4      16       0       0       0       0       0       0       0
  9650 ;;Total ram usage:       20 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    3
  9653 ;; This function calls:
  9654 ;;		___fladd
  9655 ;;		___fldiv
  9656 ;;		___flmul
  9657 ;; This function is called by:
  9658 ;;		_asinf
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text45
  9663  003AC6                     __ptext45:
  9664                           	opt callstack 0
  9665  003AC6                     _R:
  9666                           	opt callstack 25
  9667  003AC6  0EBA               	movlw	186
  9668  003AC8  6E29               	movwf	___fladd@a^0,c
  9669  003ACA  0E13               	movlw	19
  9670  003ACC  6E2A               	movwf	(___fladd@a+1)^0,c
  9671  003ACE  0E2F               	movlw	47
  9672  003AD0  6E2B               	movwf	(___fladd@a+2)^0,c
  9673  003AD2  0EBD               	movlw	189
  9674  003AD4  6E2C               	movwf	(___fladd@a+3)^0,c
  9675  003AD6  0E6B               	movlw	107
  9676  003AD8  6E10               	movwf	___flmul@a^0,c
  9677  003ADA  0ED3               	movlw	211
  9678  003ADC  6E11               	movwf	(___flmul@a+1)^0,c
  9679  003ADE  0E0D               	movlw	13
  9680  003AE0  6E12               	movwf	(___flmul@a+2)^0,c
  9681  003AE2  0EBC               	movlw	188
  9682  003AE4  6E13               	movwf	(___flmul@a+3)^0,c
  9683  003AE6  C056  F00C         	movff	R@z,___flmul@b
  9684  003AEA  C057  F00D         	movff	R@z+1,___flmul@b+1
  9685  003AEE  C058  F00E         	movff	R@z+2,___flmul@b+2
  9686  003AF2  C059  F00F         	movff	R@z+3,___flmul@b+3
  9687  003AF6  ECAD  F011         	call	___flmul	;wreg free
  9688  003AFA  C00C  F025         	movff	?___flmul,___fladd@b
  9689  003AFE  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  9690  003B02  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  9691  003B06  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  9692  003B0A  EC4D  F00F         	call	___fladd	;wreg free
  9693  003B0E  C025  F068         	movff	?___fladd,_R$1407
  9694  003B12  C026  F069         	movff	?___fladd+1,_R$1407+1
  9695  003B16  C027  F06A         	movff	?___fladd+2,_R$1407+2
  9696  003B1A  C028  F06B         	movff	?___fladd+3,_R$1407+3
  9697  003B1E  0E75               	movlw	117
  9698  003B20  6E29               	movwf	___fladd@a^0,c
  9699  003B22  0EAA               	movlw	170
  9700  003B24  6E2A               	movwf	(___fladd@a+1)^0,c
  9701  003B26  0E2A               	movlw	42
  9702  003B28  6E2B               	movwf	(___fladd@a+2)^0,c
  9703  003B2A  0E3E               	movlw	62
  9704  003B2C  6E2C               	movwf	(___fladd@a+3)^0,c
  9705  003B2E  C056  F010         	movff	R@z,___flmul@a
  9706  003B32  C057  F011         	movff	R@z+1,___flmul@a+1
  9707  003B36  C058  F012         	movff	R@z+2,___flmul@a+2
  9708  003B3A  C059  F013         	movff	R@z+3,___flmul@a+3
  9709  003B3E  C068  F00C         	movff	_R$1407,___flmul@b
  9710  003B42  C069  F00D         	movff	_R$1407+1,___flmul@b+1
  9711  003B46  C06A  F00E         	movff	_R$1407+2,___flmul@b+2
  9712  003B4A  C06B  F00F         	movff	_R$1407+3,___flmul@b+3
  9713  003B4E  ECAD  F011         	call	___flmul	;wreg free
  9714  003B52  C00C  F025         	movff	?___flmul,___fladd@b
  9715  003B56  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  9716  003B5A  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  9717  003B5E  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  9718  003B62  EC4D  F00F         	call	___fladd	;wreg free
  9719  003B66  C025  F06C         	movff	?___fladd,_R$1408
  9720  003B6A  C026  F06D         	movff	?___fladd+1,_R$1408+1
  9721  003B6E  C027  F06E         	movff	?___fladd+2,_R$1408+2
  9722  003B72  C028  F06F         	movff	?___fladd+3,_R$1408+3
  9723  003B76  C06C  F00C         	movff	_R$1408,___flmul@b
  9724  003B7A  C06D  F00D         	movff	_R$1408+1,___flmul@b+1
  9725  003B7E  C06E  F00E         	movff	_R$1408+2,___flmul@b+2
  9726  003B82  C06F  F00F         	movff	_R$1408+3,___flmul@b+3
  9727  003B86  C056  F010         	movff	R@z,___flmul@a
  9728  003B8A  C057  F011         	movff	R@z+1,___flmul@a+1
  9729  003B8E  C058  F012         	movff	R@z+2,___flmul@a+2
  9730  003B92  C059  F013         	movff	R@z+3,___flmul@a+3
  9731  003B96  ECAD  F011         	call	___flmul	;wreg free
  9732  003B9A  C00C  F060         	movff	?___flmul,R@p
  9733  003B9E  C00D  F061         	movff	?___flmul+1,R@p+1
  9734  003BA2  C00E  F062         	movff	?___flmul+2,R@p+2
  9735  003BA6  C00F  F063         	movff	?___flmul+3,R@p+3
  9736  003BAA  0EAE               	movlw	174
  9737  003BAC  6E10               	movwf	___flmul@a^0,c
  9738  003BAE  0EE5               	movlw	229
  9739  003BB0  6E11               	movwf	(___flmul@a+1)^0,c
  9740  003BB2  0E34               	movlw	52
  9741  003BB4  6E12               	movwf	(___flmul@a+2)^0,c
  9742  003BB6  0EBF               	movlw	191
  9743  003BB8  6E13               	movwf	(___flmul@a+3)^0,c
  9744  003BBA  C056  F00C         	movff	R@z,___flmul@b
  9745  003BBE  C057  F00D         	movff	R@z+1,___flmul@b+1
  9746  003BC2  C058  F00E         	movff	R@z+2,___flmul@b+2
  9747  003BC6  C059  F00F         	movff	R@z+3,___flmul@b+3
  9748  003BCA  ECAD  F011         	call	___flmul	;wreg free
  9749  003BCE  C00C  F025         	movff	?___flmul,___fladd@b
  9750  003BD2  C00D  F026         	movff	?___flmul+1,___fladd@b+1
  9751  003BD6  C00E  F027         	movff	?___flmul+2,___fladd@b+2
  9752  003BDA  C00F  F028         	movff	?___flmul+3,___fladd@b+3
  9753  003BDE  0E00               	movlw	0
  9754  003BE0  6E29               	movwf	___fladd@a^0,c
  9755  003BE2  0E00               	movlw	0
  9756  003BE4  6E2A               	movwf	(___fladd@a+1)^0,c
  9757  003BE6  0E80               	movlw	128
  9758  003BE8  6E2B               	movwf	(___fladd@a+2)^0,c
  9759  003BEA  0E3F               	movlw	63
  9760  003BEC  6E2C               	movwf	(___fladd@a+3)^0,c
  9761  003BEE  EC4D  F00F         	call	___fladd	;wreg free
  9762  003BF2  C025  F064         	movff	?___fladd,R@q
  9763  003BF6  C026  F065         	movff	?___fladd+1,R@q+1
  9764  003BFA  C027  F066         	movff	?___fladd+2,R@q+2
  9765  003BFE  C028  F067         	movff	?___fladd+3,R@q+3
  9766  003C02  C060  F03D         	movff	R@p,___fldiv@b
  9767  003C06  C061  F03E         	movff	R@p+1,___fldiv@b+1
  9768  003C0A  C062  F03F         	movff	R@p+2,___fldiv@b+2
  9769  003C0E  C063  F040         	movff	R@p+3,___fldiv@b+3
  9770  003C12  C064  F041         	movff	R@q,___fldiv@a
  9771  003C16  C065  F042         	movff	R@q+1,___fldiv@a+1
  9772  003C1A  C066  F043         	movff	R@q+2,___fldiv@a+2
  9773  003C1E  C067  F044         	movff	R@q+3,___fldiv@a+3
  9774  003C22  ECBB  F015         	call	___fldiv	;wreg free
  9775  003C26  C03D  F056         	movff	?___fldiv,?_R
  9776  003C2A  C03E  F057         	movff	?___fldiv+1,?_R+1
  9777  003C2E  C03F  F058         	movff	?___fldiv+2,?_R+2
  9778  003C32  C040  F059         	movff	?___fldiv+3,?_R+3
  9779  003C36  0012               	return		;funcret
  9780  003C38                     __end_of_R:
  9781                           	opt callstack 0
  9782                           
  9783 ;; *************** function ___flmul *****************
  9784 ;; Defined at:
  9785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  b               4   11[COMRAM] float 
  9788 ;;  a               4   15[COMRAM] float 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  prod            4   30[COMRAM] struct .
  9791 ;;  grs             4   25[COMRAM] unsigned long 
  9792 ;;  temp            2   34[COMRAM] struct .
  9793 ;;  bexp            1   29[COMRAM] unsigned char 
  9794 ;;  aexp            1   24[COMRAM] unsigned char 
  9795 ;;  sign            1   23[COMRAM] unsigned char 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  4   11[COMRAM] unsigned char 
  9798 ;; Registers used:
  9799 ;;		wreg, status,2, status,0, prodl, prodh
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9805 ;;      Params:         8       0       0       0       0       0       0       0       0
  9806 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9807 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9808 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9809 ;;Total ram usage:       25 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    2
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_main
  9816 ;;		_mpu_ler
  9817 ;;		_efgtoa
  9818 ;;		_R
  9819 ;;		_asinf
  9820 ;;		_sqrtf
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text46
  9825  00235A                     __ptext46:
  9826                           	opt callstack 0
  9827  00235A                     ___flmul:
  9828                           	opt callstack 24
  9829  00235A  500F               	movf	(___flmul@b+3)^0,w,c
  9830  00235C  0B80               	andlw	128
  9831  00235E  6E18               	movwf	___flmul@sign^0,c
  9832  002360  500F               	movf	(___flmul@b+3)^0,w,c
  9833  002362  240F               	addwf	(___flmul@b+3)^0,w,c
  9834  002364  6E1E               	movwf	___flmul@bexp^0,c
  9835  002366  AE0E               	btfss	(___flmul@b+2)^0,7,c
  9836  002368  EFB8  F011         	goto	u7581
  9837  00236C  EFBA  F011         	goto	u7580
  9838  002370                     u7581:
  9839  002370  EFBB  F011         	goto	l5841
  9840  002374                     u7580:
  9841  002374  801E               	bsf	___flmul@bexp^0,0,c
  9842  002376                     l5841:
  9843  002376  501E               	movf	___flmul@bexp^0,w,c
  9844  002378  B4D8               	btfsc	status,2,c
  9845  00237A  EFC1  F011         	goto	u7591
  9846  00237E  EFC3  F011         	goto	u7590
  9847  002382                     u7591:
  9848  002382  EFD6  F011         	goto	l5849
  9849  002386                     u7590:
  9850  002386  281E               	incf	___flmul@bexp^0,w,c
  9851  002388  A4D8               	btfss	status,2,c
  9852  00238A  EFC9  F011         	goto	u7601
  9853  00238E  EFCB  F011         	goto	u7600
  9854  002392                     u7601:
  9855  002392  EFD3  F011         	goto	l5847
  9856  002396                     u7600:
  9857  002396  0E00               	movlw	0
  9858  002398  6E0C               	movwf	___flmul@b^0,c
  9859  00239A  0E00               	movlw	0
  9860  00239C  6E0D               	movwf	(___flmul@b+1)^0,c
  9861  00239E  0E00               	movlw	0
  9862  0023A0  6E0E               	movwf	(___flmul@b+2)^0,c
  9863  0023A2  0E00               	movlw	0
  9864  0023A4  6E0F               	movwf	(___flmul@b+3)^0,c
  9865  0023A6                     l5847:
  9866  0023A6  8E0E               	bsf	(___flmul@b+2)^0,7,c
  9867  0023A8  EFDE  F011         	goto	l5851
  9868  0023AC                     l5849:
  9869  0023AC  0E00               	movlw	0
  9870  0023AE  6E0C               	movwf	___flmul@b^0,c
  9871  0023B0  0E00               	movlw	0
  9872  0023B2  6E0D               	movwf	(___flmul@b+1)^0,c
  9873  0023B4  0E00               	movlw	0
  9874  0023B6  6E0E               	movwf	(___flmul@b+2)^0,c
  9875  0023B8  0E00               	movlw	0
  9876  0023BA  6E0F               	movwf	(___flmul@b+3)^0,c
  9877  0023BC                     l5851:
  9878  0023BC  5013               	movf	(___flmul@a+3)^0,w,c
  9879  0023BE  0B80               	andlw	128
  9880  0023C0  1A18               	xorwf	___flmul@sign^0,f,c
  9881  0023C2  5013               	movf	(___flmul@a+3)^0,w,c
  9882  0023C4  2413               	addwf	(___flmul@a+3)^0,w,c
  9883  0023C6  6E19               	movwf	___flmul@aexp^0,c
  9884  0023C8  AE12               	btfss	(___flmul@a+2)^0,7,c
  9885  0023CA  EFE9  F011         	goto	u7611
  9886  0023CE  EFEB  F011         	goto	u7610
  9887  0023D2                     u7611:
  9888  0023D2  EFEC  F011         	goto	l5859
  9889  0023D6                     u7610:
  9890  0023D6  8019               	bsf	___flmul@aexp^0,0,c
  9891  0023D8                     l5859:
  9892  0023D8  5019               	movf	___flmul@aexp^0,w,c
  9893  0023DA  B4D8               	btfsc	status,2,c
  9894  0023DC  EFF2  F011         	goto	u7621
  9895  0023E0  EFF4  F011         	goto	u7620
  9896  0023E4                     u7621:
  9897  0023E4  EF07  F012         	goto	l5867
  9898  0023E8                     u7620:
  9899  0023E8  2819               	incf	___flmul@aexp^0,w,c
  9900  0023EA  A4D8               	btfss	status,2,c
  9901  0023EC  EFFA  F011         	goto	u7631
  9902  0023F0  EFFC  F011         	goto	u7630
  9903  0023F4                     u7631:
  9904  0023F4  EF04  F012         	goto	l5865
  9905  0023F8                     u7630:
  9906  0023F8  0E00               	movlw	0
  9907  0023FA  6E10               	movwf	___flmul@a^0,c
  9908  0023FC  0E00               	movlw	0
  9909  0023FE  6E11               	movwf	(___flmul@a+1)^0,c
  9910  002400  0E00               	movlw	0
  9911  002402  6E12               	movwf	(___flmul@a+2)^0,c
  9912  002404  0E00               	movlw	0
  9913  002406  6E13               	movwf	(___flmul@a+3)^0,c
  9914  002408                     l5865:
  9915  002408  8E12               	bsf	(___flmul@a+2)^0,7,c
  9916  00240A  EF0F  F012         	goto	l1101
  9917  00240E                     l5867:
  9918  00240E  0E00               	movlw	0
  9919  002410  6E10               	movwf	___flmul@a^0,c
  9920  002412  0E00               	movlw	0
  9921  002414  6E11               	movwf	(___flmul@a+1)^0,c
  9922  002416  0E00               	movlw	0
  9923  002418  6E12               	movwf	(___flmul@a+2)^0,c
  9924  00241A  0E00               	movlw	0
  9925  00241C  6E13               	movwf	(___flmul@a+3)^0,c
  9926  00241E                     l1101:
  9927  00241E  5019               	movf	___flmul@aexp^0,w,c
  9928  002420  B4D8               	btfsc	status,2,c
  9929  002422  EF15  F012         	goto	u7641
  9930  002426  EF17  F012         	goto	u7640
  9931  00242A                     u7641:
  9932  00242A  EF1F  F012         	goto	l5871
  9933  00242E                     u7640:
  9934  00242E  501E               	movf	___flmul@bexp^0,w,c
  9935  002430  A4D8               	btfss	status,2,c
  9936  002432  EF1D  F012         	goto	u7651
  9937  002436  EF1F  F012         	goto	u7650
  9938  00243A                     u7651:
  9939  00243A  EF29  F012         	goto	l5875
  9940  00243E                     u7650:
  9941  00243E                     l5871:
  9942  00243E  0E00               	movlw	0
  9943  002440  6E0C               	movwf	?___flmul^0,c
  9944  002442  0E00               	movlw	0
  9945  002444  6E0D               	movwf	(?___flmul+1)^0,c
  9946  002446  0E00               	movlw	0
  9947  002448  6E0E               	movwf	(?___flmul+2)^0,c
  9948  00244A  0E00               	movlw	0
  9949  00244C  6E0F               	movwf	(?___flmul+3)^0,c
  9950  00244E  EFC1  F013         	goto	l1105
  9951  002452                     l5875:
  9952  002452  5012               	movf	(___flmul@a+2)^0,w,c
  9953  002454  020C               	mulwf	___flmul@b^0,c
  9954  002456  CFF3 F023          	movff	prodl,___flmul@temp
  9955  00245A  CFF4 F024          	movff	prodh,___flmul@temp+1
  9956  00245E  5023               	movf	___flmul@temp^0,w,c
  9957  002460  6E1A               	movwf	___flmul@grs^0,c
  9958  002462  6A1B               	clrf	(___flmul@grs+1)^0,c
  9959  002464  6A1C               	clrf	(___flmul@grs+2)^0,c
  9960  002466  6A1D               	clrf	(___flmul@grs+3)^0,c
  9961  002468  5024               	movf	(___flmul@temp+1)^0,w,c
  9962  00246A  6E1F               	movwf	___flmul@prod^0,c
  9963  00246C  6A20               	clrf	(___flmul@prod+1)^0,c
  9964  00246E  6A21               	clrf	(___flmul@prod+2)^0,c
  9965  002470  6A22               	clrf	(___flmul@prod+3)^0,c
  9966  002472  5011               	movf	(___flmul@a+1)^0,w,c
  9967  002474  020D               	mulwf	(___flmul@b+1)^0,c
  9968  002476  CFF3 F023          	movff	prodl,___flmul@temp
  9969  00247A  CFF4 F024          	movff	prodh,___flmul@temp+1
  9970  00247E  5023               	movf	___flmul@temp^0,w,c
  9971  002480  261A               	addwf	___flmul@grs^0,f,c
  9972  002482  0E00               	movlw	0
  9973  002484  221B               	addwfc	(___flmul@grs+1)^0,f,c
  9974  002486  221C               	addwfc	(___flmul@grs+2)^0,f,c
  9975  002488  221D               	addwfc	(___flmul@grs+3)^0,f,c
  9976  00248A  5024               	movf	(___flmul@temp+1)^0,w,c
  9977  00248C  261F               	addwf	___flmul@prod^0,f,c
  9978  00248E  0E00               	movlw	0
  9979  002490  2220               	addwfc	(___flmul@prod+1)^0,f,c
  9980  002492  2221               	addwfc	(___flmul@prod+2)^0,f,c
  9981  002494  2222               	addwfc	(___flmul@prod+3)^0,f,c
  9982  002496  5010               	movf	___flmul@a^0,w,c
  9983  002498  020E               	mulwf	(___flmul@b+2)^0,c
  9984  00249A  CFF3 F023          	movff	prodl,___flmul@temp
  9985  00249E  CFF4 F024          	movff	prodh,___flmul@temp+1
  9986  0024A2  5023               	movf	___flmul@temp^0,w,c
  9987  0024A4  261A               	addwf	___flmul@grs^0,f,c
  9988  0024A6  0E00               	movlw	0
  9989  0024A8  221B               	addwfc	(___flmul@grs+1)^0,f,c
  9990  0024AA  221C               	addwfc	(___flmul@grs+2)^0,f,c
  9991  0024AC  221D               	addwfc	(___flmul@grs+3)^0,f,c
  9992  0024AE  5024               	movf	(___flmul@temp+1)^0,w,c
  9993  0024B0  261F               	addwf	___flmul@prod^0,f,c
  9994  0024B2  0E00               	movlw	0
  9995  0024B4  2220               	addwfc	(___flmul@prod+1)^0,f,c
  9996  0024B6  2221               	addwfc	(___flmul@prod+2)^0,f,c
  9997  0024B8  2222               	addwfc	(___flmul@prod+3)^0,f,c
  9998  0024BA  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  9999  0024BE  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
 10000  0024C2  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
 10001  0024C6  6A1A               	clrf	___flmul@grs^0,c
 10002  0024C8  5010               	movf	___flmul@a^0,w,c
 10003  0024CA  020D               	mulwf	(___flmul@b+1)^0,c
 10004  0024CC  CFF3 F023          	movff	prodl,___flmul@temp
 10005  0024D0  CFF4 F024          	movff	prodh,___flmul@temp+1
 10006  0024D4  5023               	movf	___flmul@temp^0,w,c
 10007  0024D6  261A               	addwf	___flmul@grs^0,f,c
 10008  0024D8  5024               	movf	(___flmul@temp+1)^0,w,c
 10009  0024DA  221B               	addwfc	(___flmul@grs+1)^0,f,c
 10010  0024DC  0E00               	movlw	0
 10011  0024DE  221C               	addwfc	(___flmul@grs+2)^0,f,c
 10012  0024E0  0E00               	movlw	0
 10013  0024E2  221D               	addwfc	(___flmul@grs+3)^0,f,c
 10014  0024E4  5011               	movf	(___flmul@a+1)^0,w,c
 10015  0024E6  020C               	mulwf	___flmul@b^0,c
 10016  0024E8  CFF3 F023          	movff	prodl,___flmul@temp
 10017  0024EC  CFF4 F024          	movff	prodh,___flmul@temp+1
 10018  0024F0  5023               	movf	___flmul@temp^0,w,c
 10019  0024F2  261A               	addwf	___flmul@grs^0,f,c
 10020  0024F4  5024               	movf	(___flmul@temp+1)^0,w,c
 10021  0024F6  221B               	addwfc	(___flmul@grs+1)^0,f,c
 10022  0024F8  0E00               	movlw	0
 10023  0024FA  221C               	addwfc	(___flmul@grs+2)^0,f,c
 10024  0024FC  0E00               	movlw	0
 10025  0024FE  221D               	addwfc	(___flmul@grs+3)^0,f,c
 10026  002500  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
 10027  002504  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
 10028  002508  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
 10029  00250C  6A1A               	clrf	___flmul@grs^0,c
 10030  00250E  5010               	movf	___flmul@a^0,w,c
 10031  002510  020C               	mulwf	___flmul@b^0,c
 10032  002512  CFF3 F023          	movff	prodl,___flmul@temp
 10033  002516  CFF4 F024          	movff	prodh,___flmul@temp+1
 10034  00251A  5023               	movf	___flmul@temp^0,w,c
 10035  00251C  261A               	addwf	___flmul@grs^0,f,c
 10036  00251E  5024               	movf	(___flmul@temp+1)^0,w,c
 10037  002520  221B               	addwfc	(___flmul@grs+1)^0,f,c
 10038  002522  0E00               	movlw	0
 10039  002524  221C               	addwfc	(___flmul@grs+2)^0,f,c
 10040  002526  0E00               	movlw	0
 10041  002528  221D               	addwfc	(___flmul@grs+3)^0,f,c
 10042  00252A  5012               	movf	(___flmul@a+2)^0,w,c
 10043  00252C  020D               	mulwf	(___flmul@b+1)^0,c
 10044  00252E  CFF3 F023          	movff	prodl,___flmul@temp
 10045  002532  CFF4 F024          	movff	prodh,___flmul@temp+1
 10046  002536  5023               	movf	___flmul@temp^0,w,c
 10047  002538  261F               	addwf	___flmul@prod^0,f,c
 10048  00253A  5024               	movf	(___flmul@temp+1)^0,w,c
 10049  00253C  2220               	addwfc	(___flmul@prod+1)^0,f,c
 10050  00253E  0E00               	movlw	0
 10051  002540  2221               	addwfc	(___flmul@prod+2)^0,f,c
 10052  002542  0E00               	movlw	0
 10053  002544  2222               	addwfc	(___flmul@prod+3)^0,f,c
 10054  002546  5011               	movf	(___flmul@a+1)^0,w,c
 10055  002548  020E               	mulwf	(___flmul@b+2)^0,c
 10056  00254A  CFF3 F023          	movff	prodl,___flmul@temp
 10057  00254E  CFF4 F024          	movff	prodh,___flmul@temp+1
 10058  002552  5023               	movf	___flmul@temp^0,w,c
 10059  002554  261F               	addwf	___flmul@prod^0,f,c
 10060  002556  5024               	movf	(___flmul@temp+1)^0,w,c
 10061  002558  2220               	addwfc	(___flmul@prod+1)^0,f,c
 10062  00255A  0E00               	movlw	0
 10063  00255C  2221               	addwfc	(___flmul@prod+2)^0,f,c
 10064  00255E  0E00               	movlw	0
 10065  002560  2222               	addwfc	(___flmul@prod+3)^0,f,c
 10066  002562  5012               	movf	(___flmul@a+2)^0,w,c
 10067  002564  020E               	mulwf	(___flmul@b+2)^0,c
 10068  002566  CFF3 F023          	movff	prodl,___flmul@temp
 10069  00256A  CFF4 F024          	movff	prodh,___flmul@temp+1
 10070  00256E  5023               	movf	___flmul@temp^0,w,c
 10071  002570  6E14               	movwf	??___flmul^0,c
 10072  002572  5024               	movf	(___flmul@temp+1)^0,w,c
 10073  002574  6E15               	movwf	(??___flmul+1)^0,c
 10074  002576  6A16               	clrf	(??___flmul+2)^0,c
 10075  002578  6A17               	clrf	(??___flmul+3)^0,c
 10076  00257A  C016  F017         	movff	??___flmul+2,??___flmul+3
 10077  00257E  C015  F016         	movff	??___flmul+1,??___flmul+2
 10078  002582  C014  F015         	movff	??___flmul,??___flmul+1
 10079  002586  6A14               	clrf	??___flmul^0,c
 10080  002588  5014               	movf	??___flmul^0,w,c
 10081  00258A  261F               	addwf	___flmul@prod^0,f,c
 10082  00258C  5015               	movf	(??___flmul+1)^0,w,c
 10083  00258E  2220               	addwfc	(___flmul@prod+1)^0,f,c
 10084  002590  5016               	movf	(??___flmul+2)^0,w,c
 10085  002592  2221               	addwfc	(___flmul@prod+2)^0,f,c
 10086  002594  5017               	movf	(??___flmul+3)^0,w,c
 10087  002596  2222               	addwfc	(___flmul@prod+3)^0,f,c
 10088  002598  C01A  F014         	movff	___flmul@grs,??___flmul
 10089  00259C  C01B  F015         	movff	___flmul@grs+1,??___flmul+1
 10090  0025A0  C01C  F016         	movff	___flmul@grs+2,??___flmul+2
 10091  0025A4  C01D  F017         	movff	___flmul@grs+3,??___flmul+3
 10092  0025A8  0E19               	movlw	25
 10093  0025AA  EFDC  F012         	goto	u7660
 10094  0025AE                     u7665:
 10095  0025AE  90D8               	bcf	status,0,c
 10096  0025B0  3217               	rrcf	(??___flmul+3)^0,f,c
 10097  0025B2  3216               	rrcf	(??___flmul+2)^0,f,c
 10098  0025B4  3215               	rrcf	(??___flmul+1)^0,f,c
 10099  0025B6  3214               	rrcf	??___flmul^0,f,c
 10100  0025B8                     u7660:
 10101  0025B8  2EE8               	decfsz	wreg,f,c
 10102  0025BA  EFD7  F012         	goto	u7665
 10103  0025BE  5014               	movf	??___flmul^0,w,c
 10104  0025C0  261F               	addwf	___flmul@prod^0,f,c
 10105  0025C2  5015               	movf	(??___flmul+1)^0,w,c
 10106  0025C4  2220               	addwfc	(___flmul@prod+1)^0,f,c
 10107  0025C6  5016               	movf	(??___flmul+2)^0,w,c
 10108  0025C8  2221               	addwfc	(___flmul@prod+2)^0,f,c
 10109  0025CA  5017               	movf	(??___flmul+3)^0,w,c
 10110  0025CC  2222               	addwfc	(___flmul@prod+3)^0,f,c
 10111  0025CE  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
 10112  0025D2  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
 10113  0025D6  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
 10114  0025DA  6A1A               	clrf	___flmul@grs^0,c
 10115  0025DC  5019               	movf	___flmul@aexp^0,w,c
 10116  0025DE  C01E  F014         	movff	___flmul@bexp,??___flmul
 10117  0025E2  6A15               	clrf	(??___flmul+1)^0,c
 10118  0025E4  2614               	addwf	??___flmul^0,f,c
 10119  0025E6  0E00               	movlw	0
 10120  0025E8  2215               	addwfc	(??___flmul+1)^0,f,c
 10121  0025EA  0E82               	movlw	130
 10122  0025EC  2414               	addwf	??___flmul^0,w,c
 10123  0025EE  6E23               	movwf	___flmul@temp^0,c
 10124  0025F0  0EFF               	movlw	255
 10125  0025F2  2015               	addwfc	(??___flmul+1)^0,w,c
 10126  0025F4  6E24               	movwf	(___flmul@temp+1)^0,c
 10127  0025F6  EF12  F013         	goto	l5923
 10128  0025FA                     l5917:
 10129  0025FA  90D8               	bcf	status,0,c
 10130  0025FC  361F               	rlcf	___flmul@prod^0,f,c
 10131  0025FE  3620               	rlcf	(___flmul@prod+1)^0,f,c
 10132  002600  3621               	rlcf	(___flmul@prod+2)^0,f,c
 10133  002602  3622               	rlcf	(___flmul@prod+3)^0,f,c
 10134  002604  AE1D               	btfss	(___flmul@grs+3)^0,7,c
 10135  002606  EF07  F013         	goto	u7671
 10136  00260A  EF09  F013         	goto	u7670
 10137  00260E                     u7671:
 10138  00260E  EF0A  F013         	goto	l1108
 10139  002612                     u7670:
 10140  002612  801F               	bsf	___flmul@prod^0,0,c
 10141  002614                     l1108:
 10142  002614  90D8               	bcf	status,0,c
 10143  002616  361A               	rlcf	___flmul@grs^0,f,c
 10144  002618  361B               	rlcf	(___flmul@grs+1)^0,f,c
 10145  00261A  361C               	rlcf	(___flmul@grs+2)^0,f,c
 10146  00261C  361D               	rlcf	(___flmul@grs+3)^0,f,c
 10147  00261E  0623               	decf	___flmul@temp^0,f,c
 10148  002620  A0D8               	btfss	status,0,c
 10149  002622  0624               	decf	(___flmul@temp+1)^0,f,c
 10150  002624                     l5923:
 10151  002624  AE21               	btfss	(___flmul@prod+2)^0,7,c
 10152  002626  EF17  F013         	goto	u7681
 10153  00262A  EF19  F013         	goto	u7680
 10154  00262E                     u7681:
 10155  00262E  EFFD  F012         	goto	l5917
 10156  002632                     u7680:
 10157  002632  0E00               	movlw	0
 10158  002634  6E19               	movwf	___flmul@aexp^0,c
 10159  002636  AE1D               	btfss	(___flmul@grs+3)^0,7,c
 10160  002638  EF20  F013         	goto	u7691
 10161  00263C  EF22  F013         	goto	u7690
 10162  002640                     u7691:
 10163  002640  EF46  F013         	goto	l1110
 10164  002644                     u7690:
 10165  002644  0EFF               	movlw	255
 10166  002646  141A               	andwf	___flmul@grs^0,w,c
 10167  002648  6E14               	movwf	??___flmul^0,c
 10168  00264A  0EFF               	movlw	255
 10169  00264C  141B               	andwf	(___flmul@grs+1)^0,w,c
 10170  00264E  6E15               	movwf	(??___flmul+1)^0,c
 10171  002650  0EFF               	movlw	255
 10172  002652  141C               	andwf	(___flmul@grs+2)^0,w,c
 10173  002654  6E16               	movwf	(??___flmul+2)^0,c
 10174  002656  0E7F               	movlw	127
 10175  002658  141D               	andwf	(___flmul@grs+3)^0,w,c
 10176  00265A  6E17               	movwf	(??___flmul+3)^0,c
 10177  00265C  5014               	movf	??___flmul^0,w,c
 10178  00265E  1015               	iorwf	(??___flmul+1)^0,w,c
 10179  002660  1016               	iorwf	(??___flmul+2)^0,w,c
 10180  002662  1017               	iorwf	(??___flmul+3)^0,w,c
 10181  002664  B4D8               	btfsc	status,2,c
 10182  002666  EF37  F013         	goto	u7701
 10183  00266A  EF39  F013         	goto	u7700
 10184  00266E                     u7701:
 10185  00266E  EF3D  F013         	goto	l1111
 10186  002672                     u7700:
 10187  002672                     l5931:
 10188  002672  0E01               	movlw	1
 10189  002674  6E19               	movwf	___flmul@aexp^0,c
 10190  002676  EF46  F013         	goto	l1110
 10191  00267A                     l1111:
 10192  00267A  A01F               	btfss	___flmul@prod^0,0,c
 10193  00267C  EF42  F013         	goto	u7711
 10194  002680  EF44  F013         	goto	u7710
 10195  002684                     u7711:
 10196  002684  EF46  F013         	goto	l1110
 10197  002688                     u7710:
 10198  002688  EF39  F013         	goto	l5931
 10199  00268C                     l1110:
 10200  00268C  5019               	movf	___flmul@aexp^0,w,c
 10201  00268E  B4D8               	btfsc	status,2,c
 10202  002690  EF4C  F013         	goto	u7721
 10203  002694  EF4E  F013         	goto	u7720
 10204  002698                     u7721:
 10205  002698  EF72  F013         	goto	l5943
 10206  00269C                     u7720:
 10207  00269C  0E01               	movlw	1
 10208  00269E  261F               	addwf	___flmul@prod^0,f,c
 10209  0026A0  0E00               	movlw	0
 10210  0026A2  2220               	addwfc	(___flmul@prod+1)^0,f,c
 10211  0026A4  2221               	addwfc	(___flmul@prod+2)^0,f,c
 10212  0026A6  2222               	addwfc	(___flmul@prod+3)^0,f,c
 10213  0026A8  A022               	btfss	(___flmul@prod+3)^0,0,c
 10214  0026AA  EF59  F013         	goto	u7731
 10215  0026AE  EF5B  F013         	goto	u7730
 10216  0026B2                     u7731:
 10217  0026B2  EF72  F013         	goto	l5943
 10218  0026B6                     u7730:
 10219  0026B6  C01F  F014         	movff	___flmul@prod,??___flmul
 10220  0026BA  C020  F015         	movff	___flmul@prod+1,??___flmul+1
 10221  0026BE  C021  F016         	movff	___flmul@prod+2,??___flmul+2
 10222  0026C2  C022  F017         	movff	___flmul@prod+3,??___flmul+3
 10223  0026C6  3417               	rlcf	(??___flmul+3)^0,w,c
 10224  0026C8  3217               	rrcf	(??___flmul+3)^0,f,c
 10225  0026CA  3216               	rrcf	(??___flmul+2)^0,f,c
 10226  0026CC  3215               	rrcf	(??___flmul+1)^0,f,c
 10227  0026CE  3214               	rrcf	??___flmul^0,f,c
 10228  0026D0  C014  F01F         	movff	??___flmul,___flmul@prod
 10229  0026D4  C015  F020         	movff	??___flmul+1,___flmul@prod+1
 10230  0026D8  C016  F021         	movff	??___flmul+2,___flmul@prod+2
 10231  0026DC  C017  F022         	movff	??___flmul+3,___flmul@prod+3
 10232  0026E0  4A23               	infsnz	___flmul@temp^0,f,c
 10233  0026E2  2A24               	incf	(___flmul@temp+1)^0,f,c
 10234  0026E4                     l5943:
 10235  0026E4  BE24               	btfsc	(___flmul@temp+1)^0,7,c
 10236  0026E6  EF7D  F013         	goto	u7741
 10237  0026EA  5024               	movf	(___flmul@temp+1)^0,w,c
 10238  0026EC  E108               	bnz	u7740
 10239  0026EE  2823               	incf	___flmul@temp^0,w,c
 10240  0026F0  A0D8               	btfss	status,0,c
 10241  0026F2  EF7D  F013         	goto	u7741
 10242  0026F6  EF7F  F013         	goto	u7740
 10243  0026FA                     u7741:
 10244  0026FA  EF89  F013         	goto	l5947
 10245  0026FE                     u7740:
 10246  0026FE  0E00               	movlw	0
 10247  002700  6E1F               	movwf	___flmul@prod^0,c
 10248  002702  0E00               	movlw	0
 10249  002704  6E20               	movwf	(___flmul@prod+1)^0,c
 10250  002706  0E80               	movlw	128
 10251  002708  6E21               	movwf	(___flmul@prod+2)^0,c
 10252  00270A  0E7F               	movlw	127
 10253  00270C  6E22               	movwf	(___flmul@prod+3)^0,c
 10254  00270E  EFB7  F013         	goto	l5959
 10255  002712                     l5947:
 10256  002712  BE24               	btfsc	(___flmul@temp+1)^0,7,c
 10257  002714  EF96  F013         	goto	u7750
 10258  002718  5024               	movf	(___flmul@temp+1)^0,w,c
 10259  00271A  E106               	bnz	u7751
 10260  00271C  0423               	decf	___flmul@temp^0,w,c
 10261  00271E  B0D8               	btfsc	status,0,c
 10262  002720  EF94  F013         	goto	u7751
 10263  002724  EF96  F013         	goto	u7750
 10264  002728                     u7751:
 10265  002728  EFA2  F013         	goto	l1118
 10266  00272C                     u7750:
 10267  00272C  0E00               	movlw	0
 10268  00272E  6E1F               	movwf	___flmul@prod^0,c
 10269  002730  0E00               	movlw	0
 10270  002732  6E20               	movwf	(___flmul@prod+1)^0,c
 10271  002734  0E00               	movlw	0
 10272  002736  6E21               	movwf	(___flmul@prod+2)^0,c
 10273  002738  0E00               	movlw	0
 10274  00273A  6E22               	movwf	(___flmul@prod+3)^0,c
 10275  00273C  0E00               	movlw	0
 10276  00273E  6E18               	movwf	___flmul@sign^0,c
 10277  002740  EFB7  F013         	goto	l5959
 10278  002744                     l1118:
 10279  002744  C023  F01E         	movff	___flmul@temp,___flmul@bexp
 10280  002748  0EFF               	movlw	255
 10281  00274A  161F               	andwf	___flmul@prod^0,f,c
 10282  00274C  0EFF               	movlw	255
 10283  00274E  1620               	andwf	(___flmul@prod+1)^0,f,c
 10284  002750  0E7F               	movlw	127
 10285  002752  1621               	andwf	(___flmul@prod+2)^0,f,c
 10286  002754  0E00               	movlw	0
 10287  002756  1622               	andwf	(___flmul@prod+3)^0,f,c
 10288  002758  A01E               	btfss	___flmul@bexp^0,0,c
 10289  00275A  EFB1  F013         	goto	u7761
 10290  00275E  EFB3  F013         	goto	u7760
 10291  002762                     u7761:
 10292  002762  EFB4  F013         	goto	l5957
 10293  002766                     u7760:
 10294  002766  8E21               	bsf	(___flmul@prod+2)^0,7,c
 10295  002768                     l5957:
 10296  002768  90D8               	bcf	status,0,c
 10297  00276A  301E               	rrcf	___flmul@bexp^0,w,c
 10298  00276C  6E22               	movwf	(___flmul@prod+3)^0,c
 10299  00276E                     l5959:
 10300  00276E  5018               	movf	___flmul@sign^0,w,c
 10301  002770  1222               	iorwf	(___flmul@prod+3)^0,f,c
 10302  002772  C01F  F00C         	movff	___flmul@prod,?___flmul
 10303  002776  C020  F00D         	movff	___flmul@prod+1,?___flmul+1
 10304  00277A  C021  F00E         	movff	___flmul@prod+2,?___flmul+2
 10305  00277E  C022  F00F         	movff	___flmul@prod+3,?___flmul+3
 10306  002782                     l1105:
 10307  002782  0012               	return		;funcret
 10308  002784                     __end_of___flmul:
 10309                           	opt callstack 0
 10310                           
 10311 ;; *************** function ___fldiv *****************
 10312 ;; Defined at:
 10313 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  b               4   60[COMRAM] unsigned char 
 10316 ;;  a               4   64[COMRAM] unsigned char 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  grs             4   79[COMRAM] unsigned long 
 10319 ;;  rem             4   72[COMRAM] unsigned long 
 10320 ;;  new_exp         2   77[COMRAM] short 
 10321 ;;  aexp            1   84[COMRAM] unsigned char 
 10322 ;;  bexp            1   83[COMRAM] unsigned char 
 10323 ;;  sign            1   76[COMRAM] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  4   60[COMRAM] unsigned char 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2, status,0
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10333 ;;      Params:         8       0       0       0       0       0       0       0       0
 10334 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10335 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10336 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10337 ;;Total ram usage:       25 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    2
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_mpu_ler
 10344 ;;		_efgtoa
 10345 ;;		_R
 10346 ;;		_asinf
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text47
 10351  002B76                     __ptext47:
 10352                           	opt callstack 0
 10353  002B76                     ___fldiv:
 10354                           	opt callstack 24
 10355  002B76  5040               	movf	(___fldiv@b+3)^0,w,c
 10356  002B78  0B80               	andlw	128
 10357  002B7A  6E4D               	movwf	___fldiv@sign^0,c
 10358  002B7C  5040               	movf	(___fldiv@b+3)^0,w,c
 10359  002B7E  2440               	addwf	(___fldiv@b+3)^0,w,c
 10360  002B80  6E54               	movwf	___fldiv@bexp^0,c
 10361  002B82  AE3F               	btfss	(___fldiv@b+2)^0,7,c
 10362  002B84  EFC6  F015         	goto	u7351
 10363  002B88  EFC8  F015         	goto	u7350
 10364  002B8C                     u7351:
 10365  002B8C  EFC9  F015         	goto	l5703
 10366  002B90                     u7350:
 10367  002B90  8054               	bsf	___fldiv@bexp^0,0,c
 10368  002B92                     l5703:
 10369  002B92  5054               	movf	___fldiv@bexp^0,w,c
 10370  002B94  B4D8               	btfsc	status,2,c
 10371  002B96  EFCF  F015         	goto	u7361
 10372  002B9A  EFD1  F015         	goto	u7360
 10373  002B9E                     u7361:
 10374  002B9E  EFE6  F015         	goto	l5713
 10375  002BA2                     u7360:
 10376  002BA2  2854               	incf	___fldiv@bexp^0,w,c
 10377  002BA4  A4D8               	btfss	status,2,c
 10378  002BA6  EFD7  F015         	goto	u7371
 10379  002BAA  EFD9  F015         	goto	u7370
 10380  002BAE                     u7371:
 10381  002BAE  EFE1  F015         	goto	l5709
 10382  002BB2                     u7370:
 10383  002BB2  0E00               	movlw	0
 10384  002BB4  6E3D               	movwf	___fldiv@b^0,c
 10385  002BB6  0E00               	movlw	0
 10386  002BB8  6E3E               	movwf	(___fldiv@b+1)^0,c
 10387  002BBA  0E00               	movlw	0
 10388  002BBC  6E3F               	movwf	(___fldiv@b+2)^0,c
 10389  002BBE  0E00               	movlw	0
 10390  002BC0  6E40               	movwf	(___fldiv@b+3)^0,c
 10391  002BC2                     l5709:
 10392  002BC2  8E3F               	bsf	(___fldiv@b+2)^0,7,c
 10393  002BC4  0E00               	movlw	0
 10394  002BC6  6E40               	movwf	(___fldiv@b+3)^0,c
 10395  002BC8  EFEE  F015         	goto	l5715
 10396  002BCC                     l5713:
 10397  002BCC  0E00               	movlw	0
 10398  002BCE  6E3D               	movwf	___fldiv@b^0,c
 10399  002BD0  0E00               	movlw	0
 10400  002BD2  6E3E               	movwf	(___fldiv@b+1)^0,c
 10401  002BD4  0E00               	movlw	0
 10402  002BD6  6E3F               	movwf	(___fldiv@b+2)^0,c
 10403  002BD8  0E00               	movlw	0
 10404  002BDA  6E40               	movwf	(___fldiv@b+3)^0,c
 10405  002BDC                     l5715:
 10406  002BDC  5044               	movf	(___fldiv@a+3)^0,w,c
 10407  002BDE  0B80               	andlw	128
 10408  002BE0  1A4D               	xorwf	___fldiv@sign^0,f,c
 10409  002BE2  5044               	movf	(___fldiv@a+3)^0,w,c
 10410  002BE4  2444               	addwf	(___fldiv@a+3)^0,w,c
 10411  002BE6  6E55               	movwf	___fldiv@aexp^0,c
 10412  002BE8  AE43               	btfss	(___fldiv@a+2)^0,7,c
 10413  002BEA  EFF9  F015         	goto	u7381
 10414  002BEE  EFFB  F015         	goto	u7380
 10415  002BF2                     u7381:
 10416  002BF2  EFFC  F015         	goto	l5723
 10417  002BF6                     u7380:
 10418  002BF6  8055               	bsf	___fldiv@aexp^0,0,c
 10419  002BF8                     l5723:
 10420  002BF8  5055               	movf	___fldiv@aexp^0,w,c
 10421  002BFA  B4D8               	btfsc	status,2,c
 10422  002BFC  EF02  F016         	goto	u7391
 10423  002C00  EF04  F016         	goto	u7390
 10424  002C04                     u7391:
 10425  002C04  EF19  F016         	goto	l5733
 10426  002C08                     u7390:
 10427  002C08  2855               	incf	___fldiv@aexp^0,w,c
 10428  002C0A  A4D8               	btfss	status,2,c
 10429  002C0C  EF0A  F016         	goto	u7401
 10430  002C10  EF0C  F016         	goto	u7400
 10431  002C14                     u7401:
 10432  002C14  EF14  F016         	goto	l5729
 10433  002C18                     u7400:
 10434  002C18  0E00               	movlw	0
 10435  002C1A  6E41               	movwf	___fldiv@a^0,c
 10436  002C1C  0E00               	movlw	0
 10437  002C1E  6E42               	movwf	(___fldiv@a+1)^0,c
 10438  002C20  0E00               	movlw	0
 10439  002C22  6E43               	movwf	(___fldiv@a+2)^0,c
 10440  002C24  0E00               	movlw	0
 10441  002C26  6E44               	movwf	(___fldiv@a+3)^0,c
 10442  002C28                     l5729:
 10443  002C28  8E43               	bsf	(___fldiv@a+2)^0,7,c
 10444  002C2A  0E00               	movlw	0
 10445  002C2C  6E44               	movwf	(___fldiv@a+3)^0,c
 10446  002C2E  EF21  F016         	goto	l5735
 10447  002C32                     l5733:
 10448  002C32  0E00               	movlw	0
 10449  002C34  6E41               	movwf	___fldiv@a^0,c
 10450  002C36  0E00               	movlw	0
 10451  002C38  6E42               	movwf	(___fldiv@a+1)^0,c
 10452  002C3A  0E00               	movlw	0
 10453  002C3C  6E43               	movwf	(___fldiv@a+2)^0,c
 10454  002C3E  0E00               	movlw	0
 10455  002C40  6E44               	movwf	(___fldiv@a+3)^0,c
 10456  002C42                     l5735:
 10457  002C42  5041               	movf	___fldiv@a^0,w,c
 10458  002C44  1042               	iorwf	(___fldiv@a+1)^0,w,c
 10459  002C46  1043               	iorwf	(___fldiv@a+2)^0,w,c
 10460  002C48  1044               	iorwf	(___fldiv@a+3)^0,w,c
 10461  002C4A  A4D8               	btfss	status,2,c
 10462  002C4C  EF2A  F016         	goto	u7411
 10463  002C50  EF2C  F016         	goto	u7410
 10464  002C54                     u7411:
 10465  002C54  EF44  F016         	goto	l5747
 10466  002C58                     u7410:
 10467  002C58  0E00               	movlw	0
 10468  002C5A  6E3D               	movwf	___fldiv@b^0,c
 10469  002C5C  0E00               	movlw	0
 10470  002C5E  6E3E               	movwf	(___fldiv@b+1)^0,c
 10471  002C60  0E00               	movlw	0
 10472  002C62  6E3F               	movwf	(___fldiv@b+2)^0,c
 10473  002C64  0E00               	movlw	0
 10474  002C66  6E40               	movwf	(___fldiv@b+3)^0,c
 10475  002C68  0E80               	movlw	128
 10476  002C6A  123F               	iorwf	(___fldiv@b+2)^0,f,c
 10477  002C6C  0E7F               	movlw	127
 10478  002C6E  1240               	iorwf	(___fldiv@b+3)^0,f,c
 10479  002C70                     l5741:
 10480  002C70  504D               	movf	___fldiv@sign^0,w,c
 10481  002C72  1240               	iorwf	(___fldiv@b+3)^0,f,c
 10482  002C74  C03D  F03D         	movff	___fldiv@b,?___fldiv
 10483  002C78  C03E  F03E         	movff	___fldiv@b+1,?___fldiv+1
 10484  002C7C  C03F  F03F         	movff	___fldiv@b+2,?___fldiv+2
 10485  002C80  C040  F040         	movff	___fldiv@b+3,?___fldiv+3
 10486  002C84  EF87  F017         	goto	l1069
 10487  002C88                     l5747:
 10488  002C88  5054               	movf	___fldiv@bexp^0,w,c
 10489  002C8A  A4D8               	btfss	status,2,c
 10490  002C8C  EF4A  F016         	goto	u7421
 10491  002C90  EF4C  F016         	goto	u7420
 10492  002C94                     u7421:
 10493  002C94  EF56  F016         	goto	l5755
 10494  002C98                     u7420:
 10495  002C98  0E00               	movlw	0
 10496  002C9A  6E3D               	movwf	?___fldiv^0,c
 10497  002C9C  0E00               	movlw	0
 10498  002C9E  6E3E               	movwf	(?___fldiv+1)^0,c
 10499  002CA0  0E00               	movlw	0
 10500  002CA2  6E3F               	movwf	(?___fldiv+2)^0,c
 10501  002CA4  0E00               	movlw	0
 10502  002CA6  6E40               	movwf	(?___fldiv+3)^0,c
 10503  002CA8  EF87  F017         	goto	l1069
 10504  002CAC                     l5755:
 10505  002CAC  5055               	movf	___fldiv@aexp^0,w,c
 10506  002CAE  C054  F045         	movff	___fldiv@bexp,??___fldiv
 10507  002CB2  6A46               	clrf	(??___fldiv+1)^0,c
 10508  002CB4  5E45               	subwf	??___fldiv^0,f,c
 10509  002CB6  0E00               	movlw	0
 10510  002CB8  5A46               	subwfb	(??___fldiv+1)^0,f,c
 10511  002CBA  0E7F               	movlw	127
 10512  002CBC  2445               	addwf	??___fldiv^0,w,c
 10513  002CBE  6E4E               	movwf	___fldiv@new_exp^0,c
 10514  002CC0  0E00               	movlw	0
 10515  002CC2  2046               	addwfc	(??___fldiv+1)^0,w,c
 10516  002CC4  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 10517  002CC6  C03D  F049         	movff	___fldiv@b,___fldiv@rem
 10518  002CCA  C03E  F04A         	movff	___fldiv@b+1,___fldiv@rem+1
 10519  002CCE  C03F  F04B         	movff	___fldiv@b+2,___fldiv@rem+2
 10520  002CD2  C040  F04C         	movff	___fldiv@b+3,___fldiv@rem+3
 10521  002CD6  0E00               	movlw	0
 10522  002CD8  6E3D               	movwf	___fldiv@b^0,c
 10523  002CDA  0E00               	movlw	0
 10524  002CDC  6E3E               	movwf	(___fldiv@b+1)^0,c
 10525  002CDE  0E00               	movlw	0
 10526  002CE0  6E3F               	movwf	(___fldiv@b+2)^0,c
 10527  002CE2  0E00               	movlw	0
 10528  002CE4  6E40               	movwf	(___fldiv@b+3)^0,c
 10529  002CE6  0E00               	movlw	0
 10530  002CE8  6E50               	movwf	___fldiv@grs^0,c
 10531  002CEA  0E00               	movlw	0
 10532  002CEC  6E51               	movwf	(___fldiv@grs+1)^0,c
 10533  002CEE  0E00               	movlw	0
 10534  002CF0  6E52               	movwf	(___fldiv@grs+2)^0,c
 10535  002CF2  0E00               	movlw	0
 10536  002CF4  6E53               	movwf	(___fldiv@grs+3)^0,c
 10537  002CF6  0E00               	movlw	0
 10538  002CF8  6E55               	movwf	___fldiv@aexp^0,c
 10539  002CFA  EFB7  F016         	goto	l1071
 10540  002CFE                     l5765:
 10541  002CFE  5055               	movf	___fldiv@aexp^0,w,c
 10542  002D00  B4D8               	btfsc	status,2,c
 10543  002D02  EF85  F016         	goto	u7431
 10544  002D06  EF87  F016         	goto	u7430
 10545  002D0A                     u7431:
 10546  002D0A  EF9E  F016         	goto	l5773
 10547  002D0E                     u7430:
 10548  002D0E  90D8               	bcf	status,0,c
 10549  002D10  3649               	rlcf	___fldiv@rem^0,f,c
 10550  002D12  364A               	rlcf	(___fldiv@rem+1)^0,f,c
 10551  002D14  364B               	rlcf	(___fldiv@rem+2)^0,f,c
 10552  002D16  364C               	rlcf	(___fldiv@rem+3)^0,f,c
 10553  002D18  90D8               	bcf	status,0,c
 10554  002D1A  363D               	rlcf	___fldiv@b^0,f,c
 10555  002D1C  363E               	rlcf	(___fldiv@b+1)^0,f,c
 10556  002D1E  363F               	rlcf	(___fldiv@b+2)^0,f,c
 10557  002D20  3640               	rlcf	(___fldiv@b+3)^0,f,c
 10558  002D22  AE53               	btfss	(___fldiv@grs+3)^0,7,c
 10559  002D24  EF96  F016         	goto	u7441
 10560  002D28  EF98  F016         	goto	u7440
 10561  002D2C                     u7441:
 10562  002D2C  EF99  F016         	goto	l1074
 10563  002D30                     u7440:
 10564  002D30  803D               	bsf	___fldiv@b^0,0,c
 10565  002D32                     l1074:
 10566  002D32  90D8               	bcf	status,0,c
 10567  002D34  3650               	rlcf	___fldiv@grs^0,f,c
 10568  002D36  3651               	rlcf	(___fldiv@grs+1)^0,f,c
 10569  002D38  3652               	rlcf	(___fldiv@grs+2)^0,f,c
 10570  002D3A  3653               	rlcf	(___fldiv@grs+3)^0,f,c
 10571  002D3C                     l5773:
 10572  002D3C  5041               	movf	___fldiv@a^0,w,c
 10573  002D3E  5C49               	subwf	___fldiv@rem^0,w,c
 10574  002D40  5042               	movf	(___fldiv@a+1)^0,w,c
 10575  002D42  584A               	subwfb	(___fldiv@rem+1)^0,w,c
 10576  002D44  5043               	movf	(___fldiv@a+2)^0,w,c
 10577  002D46  584B               	subwfb	(___fldiv@rem+2)^0,w,c
 10578  002D48  5044               	movf	(___fldiv@a+3)^0,w,c
 10579  002D4A  584C               	subwfb	(___fldiv@rem+3)^0,w,c
 10580  002D4C  A0D8               	btfss	status,0,c
 10581  002D4E  EFAB  F016         	goto	u7451
 10582  002D52  EFAD  F016         	goto	u7450
 10583  002D56                     u7451:
 10584  002D56  EFB6  F016         	goto	l5779
 10585  002D5A                     u7450:
 10586  002D5A  8C53               	bsf	(___fldiv@grs+3)^0,6,c
 10587  002D5C  5041               	movf	___fldiv@a^0,w,c
 10588  002D5E  5E49               	subwf	___fldiv@rem^0,f,c
 10589  002D60  5042               	movf	(___fldiv@a+1)^0,w,c
 10590  002D62  5A4A               	subwfb	(___fldiv@rem+1)^0,f,c
 10591  002D64  5043               	movf	(___fldiv@a+2)^0,w,c
 10592  002D66  5A4B               	subwfb	(___fldiv@rem+2)^0,f,c
 10593  002D68  5044               	movf	(___fldiv@a+3)^0,w,c
 10594  002D6A  5A4C               	subwfb	(___fldiv@rem+3)^0,f,c
 10595  002D6C                     l5779:
 10596  002D6C  2A55               	incf	___fldiv@aexp^0,f,c
 10597  002D6E                     l1071:
 10598  002D6E  0E19               	movlw	25
 10599  002D70  6455               	cpfsgt	___fldiv@aexp^0,c
 10600  002D72  EFBD  F016         	goto	u7461
 10601  002D76  EFBF  F016         	goto	u7460
 10602  002D7A                     u7461:
 10603  002D7A  EF7F  F016         	goto	l5765
 10604  002D7E                     u7460:
 10605  002D7E  5049               	movf	___fldiv@rem^0,w,c
 10606  002D80  104A               	iorwf	(___fldiv@rem+1)^0,w,c
 10607  002D82  104B               	iorwf	(___fldiv@rem+2)^0,w,c
 10608  002D84  104C               	iorwf	(___fldiv@rem+3)^0,w,c
 10609  002D86  B4D8               	btfsc	status,2,c
 10610  002D88  EFC8  F016         	goto	u7471
 10611  002D8C  EFCA  F016         	goto	u7470
 10612  002D90                     u7471:
 10613  002D90  EFE2  F016         	goto	l5791
 10614  002D94                     u7470:
 10615  002D94  8050               	bsf	___fldiv@grs^0,0,c
 10616  002D96  EFE2  F016         	goto	l5791
 10617  002D9A                     l5785:
 10618  002D9A  90D8               	bcf	status,0,c
 10619  002D9C  363D               	rlcf	___fldiv@b^0,f,c
 10620  002D9E  363E               	rlcf	(___fldiv@b+1)^0,f,c
 10621  002DA0  363F               	rlcf	(___fldiv@b+2)^0,f,c
 10622  002DA2  3640               	rlcf	(___fldiv@b+3)^0,f,c
 10623  002DA4  AE53               	btfss	(___fldiv@grs+3)^0,7,c
 10624  002DA6  EFD7  F016         	goto	u7481
 10625  002DAA  EFD9  F016         	goto	u7480
 10626  002DAE                     u7481:
 10627  002DAE  EFDA  F016         	goto	l1080
 10628  002DB2                     u7480:
 10629  002DB2  803D               	bsf	___fldiv@b^0,0,c
 10630  002DB4                     l1080:
 10631  002DB4  90D8               	bcf	status,0,c
 10632  002DB6  3650               	rlcf	___fldiv@grs^0,f,c
 10633  002DB8  3651               	rlcf	(___fldiv@grs+1)^0,f,c
 10634  002DBA  3652               	rlcf	(___fldiv@grs+2)^0,f,c
 10635  002DBC  3653               	rlcf	(___fldiv@grs+3)^0,f,c
 10636  002DBE  064E               	decf	___fldiv@new_exp^0,f,c
 10637  002DC0  A0D8               	btfss	status,0,c
 10638  002DC2  064F               	decf	(___fldiv@new_exp+1)^0,f,c
 10639  002DC4                     l5791:
 10640  002DC4  AE3F               	btfss	(___fldiv@b+2)^0,7,c
 10641  002DC6  EFE7  F016         	goto	u7491
 10642  002DCA  EFE9  F016         	goto	u7490
 10643  002DCE                     u7491:
 10644  002DCE  EFCD  F016         	goto	l5785
 10645  002DD2                     u7490:
 10646  002DD2  0E00               	movlw	0
 10647  002DD4  6E55               	movwf	___fldiv@aexp^0,c
 10648  002DD6  AE53               	btfss	(___fldiv@grs+3)^0,7,c
 10649  002DD8  EFF0  F016         	goto	u7501
 10650  002DDC  EFF2  F016         	goto	u7500
 10651  002DE0                     u7501:
 10652  002DE0  EF16  F017         	goto	l1082
 10653  002DE4                     u7500:
 10654  002DE4  0EFF               	movlw	255
 10655  002DE6  1450               	andwf	___fldiv@grs^0,w,c
 10656  002DE8  6E45               	movwf	??___fldiv^0,c
 10657  002DEA  0EFF               	movlw	255
 10658  002DEC  1451               	andwf	(___fldiv@grs+1)^0,w,c
 10659  002DEE  6E46               	movwf	(??___fldiv+1)^0,c
 10660  002DF0  0EFF               	movlw	255
 10661  002DF2  1452               	andwf	(___fldiv@grs+2)^0,w,c
 10662  002DF4  6E47               	movwf	(??___fldiv+2)^0,c
 10663  002DF6  0E7F               	movlw	127
 10664  002DF8  1453               	andwf	(___fldiv@grs+3)^0,w,c
 10665  002DFA  6E48               	movwf	(??___fldiv+3)^0,c
 10666  002DFC  5045               	movf	??___fldiv^0,w,c
 10667  002DFE  1046               	iorwf	(??___fldiv+1)^0,w,c
 10668  002E00  1047               	iorwf	(??___fldiv+2)^0,w,c
 10669  002E02  1048               	iorwf	(??___fldiv+3)^0,w,c
 10670  002E04  B4D8               	btfsc	status,2,c
 10671  002E06  EF07  F017         	goto	u7511
 10672  002E0A  EF09  F017         	goto	u7510
 10673  002E0E                     u7511:
 10674  002E0E  EF0D  F017         	goto	l1083
 10675  002E12                     u7510:
 10676  002E12                     l5799:
 10677  002E12  0E01               	movlw	1
 10678  002E14  6E55               	movwf	___fldiv@aexp^0,c
 10679  002E16  EF16  F017         	goto	l1082
 10680  002E1A                     l1083:
 10681  002E1A  A03D               	btfss	___fldiv@b^0,0,c
 10682  002E1C  EF12  F017         	goto	u7521
 10683  002E20  EF14  F017         	goto	u7520
 10684  002E24                     u7521:
 10685  002E24  EF16  F017         	goto	l1082
 10686  002E28                     u7520:
 10687  002E28  EF09  F017         	goto	l5799
 10688  002E2C                     l1082:
 10689  002E2C  5055               	movf	___fldiv@aexp^0,w,c
 10690  002E2E  B4D8               	btfsc	status,2,c
 10691  002E30  EF1C  F017         	goto	u7531
 10692  002E34  EF1E  F017         	goto	u7530
 10693  002E38                     u7531:
 10694  002E38  EF42  F017         	goto	l5811
 10695  002E3C                     u7530:
 10696  002E3C  0E01               	movlw	1
 10697  002E3E  263D               	addwf	___fldiv@b^0,f,c
 10698  002E40  0E00               	movlw	0
 10699  002E42  223E               	addwfc	(___fldiv@b+1)^0,f,c
 10700  002E44  223F               	addwfc	(___fldiv@b+2)^0,f,c
 10701  002E46  2240               	addwfc	(___fldiv@b+3)^0,f,c
 10702  002E48  A040               	btfss	(___fldiv@b+3)^0,0,c
 10703  002E4A  EF29  F017         	goto	u7541
 10704  002E4E  EF2B  F017         	goto	u7540
 10705  002E52                     u7541:
 10706  002E52  EF42  F017         	goto	l5811
 10707  002E56                     u7540:
 10708  002E56  C03D  F045         	movff	___fldiv@b,??___fldiv
 10709  002E5A  C03E  F046         	movff	___fldiv@b+1,??___fldiv+1
 10710  002E5E  C03F  F047         	movff	___fldiv@b+2,??___fldiv+2
 10711  002E62  C040  F048         	movff	___fldiv@b+3,??___fldiv+3
 10712  002E66  3448               	rlcf	(??___fldiv+3)^0,w,c
 10713  002E68  3248               	rrcf	(??___fldiv+3)^0,f,c
 10714  002E6A  3247               	rrcf	(??___fldiv+2)^0,f,c
 10715  002E6C  3246               	rrcf	(??___fldiv+1)^0,f,c
 10716  002E6E  3245               	rrcf	??___fldiv^0,f,c
 10717  002E70  C045  F03D         	movff	??___fldiv,___fldiv@b
 10718  002E74  C046  F03E         	movff	??___fldiv+1,___fldiv@b+1
 10719  002E78  C047  F03F         	movff	??___fldiv+2,___fldiv@b+2
 10720  002E7C  C048  F040         	movff	??___fldiv+3,___fldiv@b+3
 10721  002E80  4A4E               	infsnz	___fldiv@new_exp^0,f,c
 10722  002E82  2A4F               	incf	(___fldiv@new_exp+1)^0,f,c
 10723  002E84                     l5811:
 10724  002E84  BE4F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10725  002E86  EF4D  F017         	goto	u7551
 10726  002E8A  504F               	movf	(___fldiv@new_exp+1)^0,w,c
 10727  002E8C  E108               	bnz	u7550
 10728  002E8E  284E               	incf	___fldiv@new_exp^0,w,c
 10729  002E90  A0D8               	btfss	status,0,c
 10730  002E92  EF4D  F017         	goto	u7551
 10731  002E96  EF4F  F017         	goto	u7550
 10732  002E9A                     u7551:
 10733  002E9A  EF5A  F017         	goto	l5815
 10734  002E9E                     u7550:
 10735  002E9E  0E00               	movlw	0
 10736  002EA0  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 10737  002EA2  684E               	setf	___fldiv@new_exp^0,c
 10738  002EA4  0E00               	movlw	0
 10739  002EA6  6E3D               	movwf	___fldiv@b^0,c
 10740  002EA8  0E00               	movlw	0
 10741  002EAA  6E3E               	movwf	(___fldiv@b+1)^0,c
 10742  002EAC  0E00               	movlw	0
 10743  002EAE  6E3F               	movwf	(___fldiv@b+2)^0,c
 10744  002EB0  0E00               	movlw	0
 10745  002EB2  6E40               	movwf	(___fldiv@b+3)^0,c
 10746  002EB4                     l5815:
 10747  002EB4  BE4F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10748  002EB6  EF67  F017         	goto	u7560
 10749  002EBA  504F               	movf	(___fldiv@new_exp+1)^0,w,c
 10750  002EBC  E106               	bnz	u7561
 10751  002EBE  044E               	decf	___fldiv@new_exp^0,w,c
 10752  002EC0  B0D8               	btfsc	status,0,c
 10753  002EC2  EF65  F017         	goto	u7561
 10754  002EC6  EF67  F017         	goto	u7560
 10755  002ECA                     u7561:
 10756  002ECA  EF75  F017         	goto	l5819
 10757  002ECE                     u7560:
 10758  002ECE  0E00               	movlw	0
 10759  002ED0  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 10760  002ED2  0E00               	movlw	0
 10761  002ED4  6E4E               	movwf	___fldiv@new_exp^0,c
 10762  002ED6  0E00               	movlw	0
 10763  002ED8  6E3D               	movwf	___fldiv@b^0,c
 10764  002EDA  0E00               	movlw	0
 10765  002EDC  6E3E               	movwf	(___fldiv@b+1)^0,c
 10766  002EDE  0E00               	movlw	0
 10767  002EE0  6E3F               	movwf	(___fldiv@b+2)^0,c
 10768  002EE2  0E00               	movlw	0
 10769  002EE4  6E40               	movwf	(___fldiv@b+3)^0,c
 10770  002EE6  0E00               	movlw	0
 10771  002EE8  6E4D               	movwf	___fldiv@sign^0,c
 10772  002EEA                     l5819:
 10773  002EEA  C04E  F054         	movff	___fldiv@new_exp,___fldiv@bexp
 10774  002EEE  A054               	btfss	___fldiv@bexp^0,0,c
 10775  002EF0  EF7C  F017         	goto	u7571
 10776  002EF4  EF7E  F017         	goto	u7570
 10777  002EF8                     u7571:
 10778  002EF8  EF81  F017         	goto	l5825
 10779  002EFC                     u7570:
 10780  002EFC  8E3F               	bsf	(___fldiv@b+2)^0,7,c
 10781  002EFE  EF82  F017         	goto	l5827
 10782  002F02                     l5825:
 10783  002F02  9E3F               	bcf	(___fldiv@b+2)^0,7,c
 10784  002F04                     l5827:
 10785  002F04  90D8               	bcf	status,0,c
 10786  002F06  3054               	rrcf	___fldiv@bexp^0,w,c
 10787  002F08  6E40               	movwf	(___fldiv@b+3)^0,c
 10788  002F0A  EF38  F016         	goto	l5741
 10789  002F0E                     l1069:
 10790  002F0E  0012               	return		;funcret
 10791  002F10                     __end_of___fldiv:
 10792                           	opt callstack 0
 10793                           
 10794 ;; *************** function ___fladd *****************
 10795 ;; Defined at:
 10796 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  b               4   36[COMRAM] unsigned char 
 10799 ;;  a               4   40[COMRAM] unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  grs             1   51[COMRAM] unsigned char 
 10802 ;;  bexp            1   50[COMRAM] unsigned char 
 10803 ;;  aexp            1   49[COMRAM] unsigned char 
 10804 ;;  signs           1   48[COMRAM] unsigned char 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  4   36[COMRAM] unsigned char 
 10807 ;; Registers used:
 10808 ;;		wreg, status,2, status,0
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10814 ;;      Params:         8       0       0       0       0       0       0       0       0
 10815 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10816 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10817 ;;      Totals:        16       0       0       0       0       0       0       0       0
 10818 ;;Total ram usage:       16 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    2
 10821 ;; This function calls:
 10822 ;;		Nothing
 10823 ;; This function is called by:
 10824 ;;		_efgtoa
 10825 ;;		___flsub
 10826 ;;		_R
 10827 ;;		_asinf
 10828 ;;		_sqrtf
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text48
 10833  001E9A                     __ptext48:
 10834                           	opt callstack 0
 10835  001E9A                     ___fladd:
 10836                           	opt callstack 23
 10837  001E9A  5028               	movf	(___fladd@b+3)^0,w,c
 10838  001E9C  0B80               	andlw	128
 10839  001E9E  6E31               	movwf	___fladd@signs^0,c
 10840  001EA0  5028               	movf	(___fladd@b+3)^0,w,c
 10841  001EA2  2428               	addwf	(___fladd@b+3)^0,w,c
 10842  001EA4  6E33               	movwf	___fladd@bexp^0,c
 10843  001EA6  AE27               	btfss	(___fladd@b+2)^0,7,c
 10844  001EA8  EF58  F00F         	goto	u6541
 10845  001EAC  EF5A  F00F         	goto	u6540
 10846  001EB0                     u6541:
 10847  001EB0  EF5B  F00F         	goto	l5321
 10848  001EB4                     u6540:
 10849  001EB4  8033               	bsf	___fladd@bexp^0,0,c
 10850  001EB6                     l5321:
 10851  001EB6  5033               	movf	___fladd@bexp^0,w,c
 10852  001EB8  B4D8               	btfsc	status,2,c
 10853  001EBA  EF61  F00F         	goto	u6551
 10854  001EBE  EF63  F00F         	goto	u6550
 10855  001EC2                     u6551:
 10856  001EC2  EF78  F00F         	goto	l5331
 10857  001EC6                     u6550:
 10858  001EC6  2833               	incf	___fladd@bexp^0,w,c
 10859  001EC8  A4D8               	btfss	status,2,c
 10860  001ECA  EF69  F00F         	goto	u6561
 10861  001ECE  EF6B  F00F         	goto	u6560
 10862  001ED2                     u6561:
 10863  001ED2  EF73  F00F         	goto	l5327
 10864  001ED6                     u6560:
 10865  001ED6  0E00               	movlw	0
 10866  001ED8  6E25               	movwf	___fladd@b^0,c
 10867  001EDA  0E00               	movlw	0
 10868  001EDC  6E26               	movwf	(___fladd@b+1)^0,c
 10869  001EDE  0E00               	movlw	0
 10870  001EE0  6E27               	movwf	(___fladd@b+2)^0,c
 10871  001EE2  0E00               	movlw	0
 10872  001EE4  6E28               	movwf	(___fladd@b+3)^0,c
 10873  001EE6                     l5327:
 10874  001EE6  8E27               	bsf	(___fladd@b+2)^0,7,c
 10875  001EE8  0E00               	movlw	0
 10876  001EEA  6E28               	movwf	(___fladd@b+3)^0,c
 10877  001EEC  EF80  F00F         	goto	l5333
 10878  001EF0                     l5331:
 10879  001EF0  0E00               	movlw	0
 10880  001EF2  6E25               	movwf	___fladd@b^0,c
 10881  001EF4  0E00               	movlw	0
 10882  001EF6  6E26               	movwf	(___fladd@b+1)^0,c
 10883  001EF8  0E00               	movlw	0
 10884  001EFA  6E27               	movwf	(___fladd@b+2)^0,c
 10885  001EFC  0E00               	movlw	0
 10886  001EFE  6E28               	movwf	(___fladd@b+3)^0,c
 10887  001F00                     l5333:
 10888  001F00  502C               	movf	(___fladd@a+3)^0,w,c
 10889  001F02  0B80               	andlw	128
 10890  001F04  6E32               	movwf	___fladd@aexp^0,c
 10891  001F06  5031               	movf	___fladd@signs^0,w,c
 10892  001F08  1832               	xorwf	___fladd@aexp^0,w,c
 10893  001F0A  B4D8               	btfsc	status,2,c
 10894  001F0C  EF8A  F00F         	goto	u6571
 10895  001F10  EF8C  F00F         	goto	u6570
 10896  001F14                     u6571:
 10897  001F14  EF8D  F00F         	goto	l5339
 10898  001F18                     u6570:
 10899  001F18  8C31               	bsf	___fladd@signs^0,6,c
 10900  001F1A                     l5339:
 10901  001F1A  502C               	movf	(___fladd@a+3)^0,w,c
 10902  001F1C  242C               	addwf	(___fladd@a+3)^0,w,c
 10903  001F1E  6E32               	movwf	___fladd@aexp^0,c
 10904  001F20  AE2B               	btfss	(___fladd@a+2)^0,7,c
 10905  001F22  EF95  F00F         	goto	u6581
 10906  001F26  EF97  F00F         	goto	u6580
 10907  001F2A                     u6581:
 10908  001F2A  EF98  F00F         	goto	l5345
 10909  001F2E                     u6580:
 10910  001F2E  8032               	bsf	___fladd@aexp^0,0,c
 10911  001F30                     l5345:
 10912  001F30  5032               	movf	___fladd@aexp^0,w,c
 10913  001F32  B4D8               	btfsc	status,2,c
 10914  001F34  EF9E  F00F         	goto	u6591
 10915  001F38  EFA0  F00F         	goto	u6590
 10916  001F3C                     u6591:
 10917  001F3C  EFB5  F00F         	goto	l5355
 10918  001F40                     u6590:
 10919  001F40  2832               	incf	___fladd@aexp^0,w,c
 10920  001F42  A4D8               	btfss	status,2,c
 10921  001F44  EFA6  F00F         	goto	u6601
 10922  001F48  EFA8  F00F         	goto	u6600
 10923  001F4C                     u6601:
 10924  001F4C  EFB0  F00F         	goto	l5351
 10925  001F50                     u6600:
 10926  001F50  0E00               	movlw	0
 10927  001F52  6E29               	movwf	___fladd@a^0,c
 10928  001F54  0E00               	movlw	0
 10929  001F56  6E2A               	movwf	(___fladd@a+1)^0,c
 10930  001F58  0E00               	movlw	0
 10931  001F5A  6E2B               	movwf	(___fladd@a+2)^0,c
 10932  001F5C  0E00               	movlw	0
 10933  001F5E  6E2C               	movwf	(___fladd@a+3)^0,c
 10934  001F60                     l5351:
 10935  001F60  8E2B               	bsf	(___fladd@a+2)^0,7,c
 10936  001F62  0E00               	movlw	0
 10937  001F64  6E2C               	movwf	(___fladd@a+3)^0,c
 10938  001F66  EFBD  F00F         	goto	l5357
 10939  001F6A                     l5355:
 10940  001F6A  0E00               	movlw	0
 10941  001F6C  6E29               	movwf	___fladd@a^0,c
 10942  001F6E  0E00               	movlw	0
 10943  001F70  6E2A               	movwf	(___fladd@a+1)^0,c
 10944  001F72  0E00               	movlw	0
 10945  001F74  6E2B               	movwf	(___fladd@a+2)^0,c
 10946  001F76  0E00               	movlw	0
 10947  001F78  6E2C               	movwf	(___fladd@a+3)^0,c
 10948  001F7A                     l5357:
 10949  001F7A  5033               	movf	___fladd@bexp^0,w,c
 10950  001F7C  5C32               	subwf	___fladd@aexp^0,w,c
 10951  001F7E  B0D8               	btfsc	status,0,c
 10952  001F80  EFC4  F00F         	goto	u6611
 10953  001F84  EFC6  F00F         	goto	u6610
 10954  001F88                     u6611:
 10955  001F88  EFED  F00F         	goto	l5393
 10956  001F8C                     u6610:
 10957  001F8C  AC31               	btfss	___fladd@signs^0,6,c
 10958  001F8E  EFCB  F00F         	goto	u6621
 10959  001F92  EFCD  F00F         	goto	u6620
 10960  001F96                     u6621:
 10961  001F96  EFCF  F00F         	goto	l5363
 10962  001F9A                     u6620:
 10963  001F9A  0E80               	movlw	128
 10964  001F9C  1A31               	xorwf	___fladd@signs^0,f,c
 10965  001F9E                     l5363:
 10966  001F9E  C033  F034         	movff	___fladd@bexp,___fladd@grs
 10967  001FA2  C032  F033         	movff	___fladd@aexp,___fladd@bexp
 10968  001FA6  C034  F032         	movff	___fladd@grs,___fladd@aexp
 10969  001FAA  C025  F034         	movff	___fladd@b,___fladd@grs
 10970  001FAE  C029  F025         	movff	___fladd@a,___fladd@b
 10971  001FB2  C034  F029         	movff	___fladd@grs,___fladd@a
 10972  001FB6  C026  F034         	movff	___fladd@b+1,___fladd@grs
 10973  001FBA  C02A  F026         	movff	___fladd@a+1,___fladd@b+1
 10974  001FBE  C034  F02A         	movff	___fladd@grs,___fladd@a+1
 10975  001FC2  C027  F034         	movff	___fladd@b+2,___fladd@grs
 10976  001FC6  C02B  F027         	movff	___fladd@a+2,___fladd@b+2
 10977  001FCA  C034  F02B         	movff	___fladd@grs,___fladd@a+2
 10978  001FCE  C028  F034         	movff	___fladd@b+3,___fladd@grs
 10979  001FD2  C02C  F028         	movff	___fladd@a+3,___fladd@b+3
 10980  001FD6  C034  F02C         	movff	___fladd@grs,___fladd@a+3
 10981  001FDA                     l5393:
 10982  001FDA  0E00               	movlw	0
 10983  001FDC  6E34               	movwf	___fladd@grs^0,c
 10984  001FDE  5033               	movf	___fladd@bexp^0,w,c
 10985  001FE0  C032  F02D         	movff	___fladd@aexp,??___fladd
 10986  001FE4  6A2E               	clrf	(??___fladd+1)^0,c
 10987  001FE6  5E2D               	subwf	??___fladd^0,f,c
 10988  001FE8  0E00               	movlw	0
 10989  001FEA  5A2E               	subwfb	(??___fladd+1)^0,f,c
 10990  001FEC  BE2E               	btfsc	(??___fladd+1)^0,7,c
 10991  001FEE  EF02  F010         	goto	u6631
 10992  001FF2  502E               	movf	(??___fladd+1)^0,w,c
 10993  001FF4  E109               	bnz	u6630
 10994  001FF6  0E1A               	movlw	26
 10995  001FF8  5C2D               	subwf	??___fladd^0,w,c
 10996  001FFA  A0D8               	btfss	status,0,c
 10997  001FFC  EF02  F010         	goto	u6631
 10998  002000  EF04  F010         	goto	u6630
 10999  002004                     u6631:
 11000  002004  EF3B  F010         	goto	l1016
 11001  002008                     u6630:
 11002  002008  5025               	movf	___fladd@b^0,w,c
 11003  00200A  1026               	iorwf	(___fladd@b+1)^0,w,c
 11004  00200C  1027               	iorwf	(___fladd@b+2)^0,w,c
 11005  00200E  1028               	iorwf	(___fladd@b+3)^0,w,c
 11006  002010  A4D8               	btfss	status,2,c
 11007  002012  EF0D  F010         	goto	u6641
 11008  002016  EF10  F010         	goto	u6640
 11009  00201A                     u6641:
 11010  00201A  0E01               	movlw	1
 11011  00201C  EF11  F010         	goto	u6650
 11012  002020                     u6640:
 11013  002020  0E00               	movlw	0
 11014  002022                     u6650:
 11015  002022  6E34               	movwf	___fladd@grs^0,c
 11016  002024  0E00               	movlw	0
 11017  002026  6E25               	movwf	___fladd@b^0,c
 11018  002028  0E00               	movlw	0
 11019  00202A  6E26               	movwf	(___fladd@b+1)^0,c
 11020  00202C  0E00               	movlw	0
 11021  00202E  6E27               	movwf	(___fladd@b+2)^0,c
 11022  002030  0E00               	movlw	0
 11023  002032  6E28               	movwf	(___fladd@b+3)^0,c
 11024  002034  C032  F033         	movff	___fladd@aexp,___fladd@bexp
 11025  002038  EF44  F010         	goto	l1015
 11026  00203C                     l1017:
 11027  00203C  A034               	btfss	___fladd@grs^0,0,c
 11028  00203E  EF23  F010         	goto	u6661
 11029  002042  EF25  F010         	goto	u6660
 11030  002046                     u6661:
 11031  002046  EF2B  F010         	goto	l5405
 11032  00204A                     u6660:
 11033  00204A  90D8               	bcf	status,0,c
 11034  00204C  3034               	rrcf	___fladd@grs^0,w,c
 11035  00204E  0901               	iorlw	1
 11036  002050  6E34               	movwf	___fladd@grs^0,c
 11037  002052  EF2D  F010         	goto	l5407
 11038  002056                     l5405:
 11039  002056  90D8               	bcf	status,0,c
 11040  002058  3234               	rrcf	___fladd@grs^0,f,c
 11041  00205A                     l5407:
 11042  00205A  A025               	btfss	___fladd@b^0,0,c
 11043  00205C  EF32  F010         	goto	u6671
 11044  002060  EF34  F010         	goto	u6670
 11045  002064                     u6671:
 11046  002064  EF35  F010         	goto	l5411
 11047  002068                     u6670:
 11048  002068  8E34               	bsf	___fladd@grs^0,7,c
 11049  00206A                     l5411:
 11050  00206A  3428               	rlcf	(___fladd@b+3)^0,w,c
 11051  00206C  3228               	rrcf	(___fladd@b+3)^0,f,c
 11052  00206E  3227               	rrcf	(___fladd@b+2)^0,f,c
 11053  002070  3226               	rrcf	(___fladd@b+1)^0,f,c
 11054  002072  3225               	rrcf	___fladd@b^0,f,c
 11055  002074  2A33               	incf	___fladd@bexp^0,f,c
 11056  002076                     l1016:
 11057  002076  5032               	movf	___fladd@aexp^0,w,c
 11058  002078  5C33               	subwf	___fladd@bexp^0,w,c
 11059  00207A  A0D8               	btfss	status,0,c
 11060  00207C  EF42  F010         	goto	u6681
 11061  002080  EF44  F010         	goto	u6680
 11062  002084                     u6681:
 11063  002084  EF1E  F010         	goto	l1017
 11064  002088                     u6680:
 11065  002088                     l1015:
 11066  002088  BC31               	btfsc	___fladd@signs^0,6,c
 11067  00208A  EF49  F010         	goto	u6691
 11068  00208E  EF4B  F010         	goto	u6690
 11069  002092                     u6691:
 11070  002092  EF8B  F010         	goto	l5439
 11071  002096                     u6690:
 11072  002096  5033               	movf	___fladd@bexp^0,w,c
 11073  002098  A4D8               	btfss	status,2,c
 11074  00209A  EF51  F010         	goto	u6701
 11075  00209E  EF53  F010         	goto	u6700
 11076  0020A2                     u6701:
 11077  0020A2  EF5D  F010         	goto	l5421
 11078  0020A6                     u6700:
 11079  0020A6  0E00               	movlw	0
 11080  0020A8  6E25               	movwf	?___fladd^0,c
 11081  0020AA  0E00               	movlw	0
 11082  0020AC  6E26               	movwf	(?___fladd+1)^0,c
 11083  0020AE  0E00               	movlw	0
 11084  0020B0  6E27               	movwf	(?___fladd+2)^0,c
 11085  0020B2  0E00               	movlw	0
 11086  0020B4  6E28               	movwf	(?___fladd+3)^0,c
 11087  0020B6  EFAC  F011         	goto	l1024
 11088  0020BA                     l5421:
 11089  0020BA  5029               	movf	___fladd@a^0,w,c
 11090  0020BC  2625               	addwf	___fladd@b^0,f,c
 11091  0020BE  502A               	movf	(___fladd@a+1)^0,w,c
 11092  0020C0  2226               	addwfc	(___fladd@b+1)^0,f,c
 11093  0020C2  502B               	movf	(___fladd@a+2)^0,w,c
 11094  0020C4  2227               	addwfc	(___fladd@b+2)^0,f,c
 11095  0020C6  502C               	movf	(___fladd@a+3)^0,w,c
 11096  0020C8  2228               	addwfc	(___fladd@b+3)^0,f,c
 11097  0020CA  A028               	btfss	(___fladd@b+3)^0,0,c
 11098  0020CC  EF6A  F010         	goto	u6711
 11099  0020D0  EF6C  F010         	goto	u6710
 11100  0020D4                     u6711:
 11101  0020D4  EF18  F011         	goto	l5475
 11102  0020D8                     u6710:
 11103  0020D8  A034               	btfss	___fladd@grs^0,0,c
 11104  0020DA  EF71  F010         	goto	u6721
 11105  0020DE  EF73  F010         	goto	u6720
 11106  0020E2                     u6721:
 11107  0020E2  EF79  F010         	goto	l5429
 11108  0020E6                     u6720:
 11109  0020E6  90D8               	bcf	status,0,c
 11110  0020E8  3034               	rrcf	___fladd@grs^0,w,c
 11111  0020EA  0901               	iorlw	1
 11112  0020EC  6E34               	movwf	___fladd@grs^0,c
 11113  0020EE  EF7B  F010         	goto	l5431
 11114  0020F2                     l5429:
 11115  0020F2  90D8               	bcf	status,0,c
 11116  0020F4  3234               	rrcf	___fladd@grs^0,f,c
 11117  0020F6                     l5431:
 11118  0020F6  A025               	btfss	___fladd@b^0,0,c
 11119  0020F8  EF80  F010         	goto	u6731
 11120  0020FC  EF82  F010         	goto	u6730
 11121  002100                     u6731:
 11122  002100  EF83  F010         	goto	l5435
 11123  002104                     u6730:
 11124  002104  8E34               	bsf	___fladd@grs^0,7,c
 11125  002106                     l5435:
 11126  002106  3428               	rlcf	(___fladd@b+3)^0,w,c
 11127  002108  3228               	rrcf	(___fladd@b+3)^0,f,c
 11128  00210A  3227               	rrcf	(___fladd@b+2)^0,f,c
 11129  00210C  3226               	rrcf	(___fladd@b+1)^0,f,c
 11130  00210E  3225               	rrcf	___fladd@b^0,f,c
 11131  002110  2A33               	incf	___fladd@bexp^0,f,c
 11132  002112  EF18  F011         	goto	l5475
 11133  002116                     l5439:
 11134  002116  5029               	movf	___fladd@a^0,w,c
 11135  002118  5C25               	subwf	___fladd@b^0,w,c
 11136  00211A  502A               	movf	(___fladd@a+1)^0,w,c
 11137  00211C  5826               	subwfb	(___fladd@b+1)^0,w,c
 11138  00211E  502B               	movf	(___fladd@a+2)^0,w,c
 11139  002120  5827               	subwfb	(___fladd@b+2)^0,w,c
 11140  002122  5028               	movf	(___fladd@b+3)^0,w,c
 11141  002124  0A80               	xorlw	128
 11142  002126  6E2D               	movwf	??___fladd^0,c
 11143  002128  502C               	movf	(___fladd@a+3)^0,w,c
 11144  00212A  0A80               	xorlw	128
 11145  00212C  582D               	subwfb	??___fladd^0,w,c
 11146  00212E  B0D8               	btfsc	status,0,c
 11147  002130  EF9C  F010         	goto	u6741
 11148  002134  EF9E  F010         	goto	u6740
 11149  002138                     u6741:
 11150  002138  EFC9  F010         	goto	l5449
 11151  00213C                     u6740:
 11152  00213C  5025               	movf	___fladd@b^0,w,c
 11153  00213E  5C29               	subwf	___fladd@a^0,w,c
 11154  002140  6E2D               	movwf	??___fladd^0,c
 11155  002142  5026               	movf	(___fladd@b+1)^0,w,c
 11156  002144  582A               	subwfb	(___fladd@a+1)^0,w,c
 11157  002146  6E2E               	movwf	(??___fladd+1)^0,c
 11158  002148  5027               	movf	(___fladd@b+2)^0,w,c
 11159  00214A  582B               	subwfb	(___fladd@a+2)^0,w,c
 11160  00214C  6E2F               	movwf	(??___fladd+2)^0,c
 11161  00214E  5028               	movf	(___fladd@b+3)^0,w,c
 11162  002150  582C               	subwfb	(___fladd@a+3)^0,w,c
 11163  002152  6E30               	movwf	(??___fladd+3)^0,c
 11164  002154  0EFF               	movlw	255
 11165  002156  242D               	addwf	??___fladd^0,w,c
 11166  002158  6E25               	movwf	___fladd@b^0,c
 11167  00215A  0EFF               	movlw	255
 11168  00215C  202E               	addwfc	(??___fladd+1)^0,w,c
 11169  00215E  6E26               	movwf	(___fladd@b+1)^0,c
 11170  002160  0EFF               	movlw	255
 11171  002162  202F               	addwfc	(??___fladd+2)^0,w,c
 11172  002164  6E27               	movwf	(___fladd@b+2)^0,c
 11173  002166  0EFF               	movlw	255
 11174  002168  2030               	addwfc	(??___fladd+3)^0,w,c
 11175  00216A  6E28               	movwf	(___fladd@b+3)^0,c
 11176  00216C  0E80               	movlw	128
 11177  00216E  1A31               	xorwf	___fladd@signs^0,f,c
 11178  002170  6C34               	negf	___fladd@grs^0,c
 11179  002172  5034               	movf	___fladd@grs^0,w,c
 11180  002174  A4D8               	btfss	status,2,c
 11181  002176  EFBF  F010         	goto	u6751
 11182  00217A  EFC1  F010         	goto	u6750
 11183  00217E                     u6751:
 11184  00217E  EFD1  F010         	goto	l1032
 11185  002182                     u6750:
 11186  002182  0E01               	movlw	1
 11187  002184  2625               	addwf	___fladd@b^0,f,c
 11188  002186  0E00               	movlw	0
 11189  002188  2226               	addwfc	(___fladd@b+1)^0,f,c
 11190  00218A  2227               	addwfc	(___fladd@b+2)^0,f,c
 11191  00218C  2228               	addwfc	(___fladd@b+3)^0,f,c
 11192  00218E  EFD1  F010         	goto	l1032
 11193  002192                     l5449:
 11194  002192  5029               	movf	___fladd@a^0,w,c
 11195  002194  5E25               	subwf	___fladd@b^0,f,c
 11196  002196  502A               	movf	(___fladd@a+1)^0,w,c
 11197  002198  5A26               	subwfb	(___fladd@b+1)^0,f,c
 11198  00219A  502B               	movf	(___fladd@a+2)^0,w,c
 11199  00219C  5A27               	subwfb	(___fladd@b+2)^0,f,c
 11200  00219E  502C               	movf	(___fladd@a+3)^0,w,c
 11201  0021A0  5A28               	subwfb	(___fladd@b+3)^0,f,c
 11202  0021A2                     l1032:
 11203  0021A2  5025               	movf	___fladd@b^0,w,c
 11204  0021A4  1026               	iorwf	(___fladd@b+1)^0,w,c
 11205  0021A6  1027               	iorwf	(___fladd@b+2)^0,w,c
 11206  0021A8  1028               	iorwf	(___fladd@b+3)^0,w,c
 11207  0021AA  A4D8               	btfss	status,2,c
 11208  0021AC  EFDA  F010         	goto	u6761
 11209  0021B0  EFDC  F010         	goto	u6760
 11210  0021B4                     u6761:
 11211  0021B4  EF11  F011         	goto	l5473
 11212  0021B8                     u6760:
 11213  0021B8  5034               	movf	___fladd@grs^0,w,c
 11214  0021BA  A4D8               	btfss	status,2,c
 11215  0021BC  EFE2  F010         	goto	u6771
 11216  0021C0  EFE4  F010         	goto	u6770
 11217  0021C4                     u6771:
 11218  0021C4  EF11  F011         	goto	l5473
 11219  0021C8                     u6770:
 11220  0021C8  0E00               	movlw	0
 11221  0021CA  6E25               	movwf	?___fladd^0,c
 11222  0021CC  0E00               	movlw	0
 11223  0021CE  6E26               	movwf	(?___fladd+1)^0,c
 11224  0021D0  0E00               	movlw	0
 11225  0021D2  6E27               	movwf	(?___fladd+2)^0,c
 11226  0021D4  0E00               	movlw	0
 11227  0021D6  6E28               	movwf	(?___fladd+3)^0,c
 11228  0021D8  EFAC  F011         	goto	l1024
 11229  0021DC                     l5457:
 11230  0021DC  90D8               	bcf	status,0,c
 11231  0021DE  3625               	rlcf	___fladd@b^0,f,c
 11232  0021E0  3626               	rlcf	(___fladd@b+1)^0,f,c
 11233  0021E2  3627               	rlcf	(___fladd@b+2)^0,f,c
 11234  0021E4  3628               	rlcf	(___fladd@b+3)^0,f,c
 11235  0021E6  AE34               	btfss	___fladd@grs^0,7,c
 11236  0021E8  EFF8  F010         	goto	u6781
 11237  0021EC  EFFA  F010         	goto	u6780
 11238  0021F0                     u6781:
 11239  0021F0  EFFB  F010         	goto	l5463
 11240  0021F4                     u6780:
 11241  0021F4  8025               	bsf	___fladd@b^0,0,c
 11242  0021F6                     l5463:
 11243  0021F6  A034               	btfss	___fladd@grs^0,0,c
 11244  0021F8  EF00  F011         	goto	u6791
 11245  0021FC  EF02  F011         	goto	u6790
 11246  002200                     u6791:
 11247  002200  EF06  F011         	goto	l5467
 11248  002204                     u6790:
 11249  002204  80D8               	bsf	status,0,c
 11250  002206  3634               	rlcf	___fladd@grs^0,f,c
 11251  002208  EF08  F011         	goto	l5469
 11252  00220C                     l5467:
 11253  00220C  90D8               	bcf	status,0,c
 11254  00220E  3634               	rlcf	___fladd@grs^0,f,c
 11255  002210                     l5469:
 11256  002210  5033               	movf	___fladd@bexp^0,w,c
 11257  002212  B4D8               	btfsc	status,2,c
 11258  002214  EF0E  F011         	goto	u6801
 11259  002218  EF10  F011         	goto	u6800
 11260  00221C                     u6801:
 11261  00221C  EF11  F011         	goto	l5473
 11262  002220                     u6800:
 11263  002220  0633               	decf	___fladd@bexp^0,f,c
 11264  002222                     l5473:
 11265  002222  AE27               	btfss	(___fladd@b+2)^0,7,c
 11266  002224  EF16  F011         	goto	u6811
 11267  002228  EF18  F011         	goto	u6810
 11268  00222C                     u6811:
 11269  00222C  EFEE  F010         	goto	l5457
 11270  002230                     u6810:
 11271  002230                     l5475:
 11272  002230  0E00               	movlw	0
 11273  002232  6E32               	movwf	___fladd@aexp^0,c
 11274  002234  AE34               	btfss	___fladd@grs^0,7,c
 11275  002236  EF1F  F011         	goto	u6821
 11276  00223A  EF21  F011         	goto	u6820
 11277  00223E                     u6821:
 11278  00223E  EF39  F011         	goto	l1041
 11279  002242                     u6820:
 11280  002242  C034  F02D         	movff	___fladd@grs,??___fladd
 11281  002246  0E7F               	movlw	127
 11282  002248  162D               	andwf	??___fladd^0,f,c
 11283  00224A  B4D8               	btfsc	status,2,c
 11284  00224C  EF2A  F011         	goto	u6831
 11285  002250  EF2C  F011         	goto	u6830
 11286  002254                     u6831:
 11287  002254  EF30  F011         	goto	l1042
 11288  002258                     u6830:
 11289  002258                     l5481:
 11290  002258  0E01               	movlw	1
 11291  00225A  6E32               	movwf	___fladd@aexp^0,c
 11292  00225C  EF39  F011         	goto	l1041
 11293  002260                     l1042:
 11294  002260  A025               	btfss	___fladd@b^0,0,c
 11295  002262  EF35  F011         	goto	u6841
 11296  002266  EF37  F011         	goto	u6840
 11297  00226A                     u6841:
 11298  00226A  EF39  F011         	goto	l1041
 11299  00226E                     u6840:
 11300  00226E  EF2C  F011         	goto	l5481
 11301  002272                     l1041:
 11302  002272  5032               	movf	___fladd@aexp^0,w,c
 11303  002274  B4D8               	btfsc	status,2,c
 11304  002276  EF3F  F011         	goto	u6851
 11305  00227A  EF41  F011         	goto	u6850
 11306  00227E                     u6851:
 11307  00227E  EF6C  F011         	goto	l5493
 11308  002282                     u6850:
 11309  002282  0E01               	movlw	1
 11310  002284  2625               	addwf	___fladd@b^0,f,c
 11311  002286  0E00               	movlw	0
 11312  002288  2226               	addwfc	(___fladd@b+1)^0,f,c
 11313  00228A  2227               	addwfc	(___fladd@b+2)^0,f,c
 11314  00228C  2228               	addwfc	(___fladd@b+3)^0,f,c
 11315  00228E  A028               	btfss	(___fladd@b+3)^0,0,c
 11316  002290  EF4C  F011         	goto	u6861
 11317  002294  EF4E  F011         	goto	u6860
 11318  002298                     u6861:
 11319  002298  EF6C  F011         	goto	l5493
 11320  00229C                     u6860:
 11321  00229C  C025  F02D         	movff	___fladd@b,??___fladd
 11322  0022A0  C026  F02E         	movff	___fladd@b+1,??___fladd+1
 11323  0022A4  C027  F02F         	movff	___fladd@b+2,??___fladd+2
 11324  0022A8  C028  F030         	movff	___fladd@b+3,??___fladd+3
 11325  0022AC  3430               	rlcf	(??___fladd+3)^0,w,c
 11326  0022AE  3230               	rrcf	(??___fladd+3)^0,f,c
 11327  0022B0  322F               	rrcf	(??___fladd+2)^0,f,c
 11328  0022B2  322E               	rrcf	(??___fladd+1)^0,f,c
 11329  0022B4  322D               	rrcf	??___fladd^0,f,c
 11330  0022B6  C02D  F025         	movff	??___fladd,___fladd@b
 11331  0022BA  C02E  F026         	movff	??___fladd+1,___fladd@b+1
 11332  0022BE  C02F  F027         	movff	??___fladd+2,___fladd@b+2
 11333  0022C2  C030  F028         	movff	??___fladd+3,___fladd@b+3
 11334  0022C6  2833               	incf	___fladd@bexp^0,w,c
 11335  0022C8  B4D8               	btfsc	status,2,c
 11336  0022CA  EF69  F011         	goto	u6871
 11337  0022CE  EF6B  F011         	goto	u6870
 11338  0022D2                     u6871:
 11339  0022D2  EF6C  F011         	goto	l5493
 11340  0022D6                     u6870:
 11341  0022D6  2A33               	incf	___fladd@bexp^0,f,c
 11342  0022D8                     l5493:
 11343  0022D8  2833               	incf	___fladd@bexp^0,w,c
 11344  0022DA  B4D8               	btfsc	status,2,c
 11345  0022DC  EF72  F011         	goto	u6881
 11346  0022E0  EF74  F011         	goto	u6880
 11347  0022E4                     u6881:
 11348  0022E4  EF7C  F011         	goto	l5497
 11349  0022E8                     u6880:
 11350  0022E8  5033               	movf	___fladd@bexp^0,w,c
 11351  0022EA  A4D8               	btfss	status,2,c
 11352  0022EC  EF7A  F011         	goto	u6891
 11353  0022F0  EF7C  F011         	goto	u6890
 11354  0022F4                     u6891:
 11355  0022F4  EF8E  F011         	goto	l5501
 11356  0022F8                     u6890:
 11357  0022F8                     l5497:
 11358  0022F8  0E00               	movlw	0
 11359  0022FA  6E25               	movwf	___fladd@b^0,c
 11360  0022FC  0E00               	movlw	0
 11361  0022FE  6E26               	movwf	(___fladd@b+1)^0,c
 11362  002300  0E00               	movlw	0
 11363  002302  6E27               	movwf	(___fladd@b+2)^0,c
 11364  002304  0E00               	movlw	0
 11365  002306  6E28               	movwf	(___fladd@b+3)^0,c
 11366  002308  5033               	movf	___fladd@bexp^0,w,c
 11367  00230A  A4D8               	btfss	status,2,c
 11368  00230C  EF8A  F011         	goto	u6901
 11369  002310  EF8C  F011         	goto	u6900
 11370  002314                     u6901:
 11371  002314  EF8E  F011         	goto	l5501
 11372  002318                     u6900:
 11373  002318  0E00               	movlw	0
 11374  00231A  6E31               	movwf	___fladd@signs^0,c
 11375  00231C                     l5501:
 11376  00231C  A033               	btfss	___fladd@bexp^0,0,c
 11377  00231E  EF93  F011         	goto	u6911
 11378  002322  EF95  F011         	goto	u6910
 11379  002326                     u6911:
 11380  002326  EF98  F011         	goto	l5505
 11381  00232A                     u6910:
 11382  00232A  8E27               	bsf	(___fladd@b+2)^0,7,c
 11383  00232C  EF99  F011         	goto	l5507
 11384  002330                     l5505:
 11385  002330  9E27               	bcf	(___fladd@b+2)^0,7,c
 11386  002332                     l5507:
 11387  002332  90D8               	bcf	status,0,c
 11388  002334  3033               	rrcf	___fladd@bexp^0,w,c
 11389  002336  6E28               	movwf	(___fladd@b+3)^0,c
 11390  002338  AE31               	btfss	___fladd@signs^0,7,c
 11391  00233A  EFA1  F011         	goto	u6921
 11392  00233E  EFA3  F011         	goto	u6920
 11393  002342                     u6921:
 11394  002342  EFA4  F011         	goto	l5513
 11395  002346                     u6920:
 11396  002346  8E28               	bsf	(___fladd@b+3)^0,7,c
 11397  002348                     l5513:
 11398  002348  C025  F025         	movff	___fladd@b,?___fladd
 11399  00234C  C026  F026         	movff	___fladd@b+1,?___fladd+1
 11400  002350  C027  F027         	movff	___fladd@b+2,?___fladd+2
 11401  002354  C028  F028         	movff	___fladd@b+3,?___fladd+3
 11402  002358                     l1024:
 11403  002358  0012               	return		;funcret
 11404  00235A                     __end_of___fladd:
 11405                           	opt callstack 0
 11406                           
 11407 ;; *************** function ___xxtofl *****************
 11408 ;; Defined at:
 11409 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  sign            1    wreg     unsigned char 
 11412 ;;  val             4    3[COMRAM] long 
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;  sign            1   11[COMRAM] unsigned char 
 11415 ;;  arg             4   13[COMRAM] unsigned long 
 11416 ;;  exp             1   12[COMRAM] unsigned char 
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  4    3[COMRAM] unsigned char 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11426 ;;      Params:         4       0       0       0       0       0       0       0       0
 11427 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11428 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11429 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11430 ;;Total ram usage:       14 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:    2
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_main
 11437 ;;		_mpu_ler
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           	psect	text49
 11442  0035FE                     __ptext49:
 11443                           	opt callstack 0
 11444  0035FE                     ___xxtofl:
 11445                           	opt callstack 27
 11446                           
 11447                           ;incstack = 0
 11448                           ;___xxtofl@sign stored from wreg
 11449  0035FE  6E0C               	movwf	___xxtofl@sign^0,c
 11450  003600  500C               	movf	___xxtofl@sign^0,w,c
 11451  003602  B4D8               	btfsc	status,2,c
 11452  003604  EF06  F01B         	goto	u9441
 11453  003608  EF08  F01B         	goto	u9440
 11454  00360C                     u9441:
 11455  00360C  EF2A  F01B         	goto	l1142
 11456  003610                     u9440:
 11457  003610  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 11458  003612  EF0F  F01B         	goto	u9450
 11459  003616  EF0D  F01B         	goto	u9451
 11460  00361A                     u9451:
 11461  00361A  EF2A  F01B         	goto	l1142
 11462  00361E                     u9450:
 11463  00361E  C004  F008         	movff	___xxtofl@val,??___xxtofl
 11464  003622  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 11465  003626  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 11466  00362A  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 11467  00362E  1E08               	comf	??___xxtofl^0,f,c
 11468  003630  1E09               	comf	(??___xxtofl+1)^0,f,c
 11469  003632  1E0A               	comf	(??___xxtofl+2)^0,f,c
 11470  003634  1E0B               	comf	(??___xxtofl+3)^0,f,c
 11471  003636  2A08               	incf	??___xxtofl^0,f,c
 11472  003638  0E00               	movlw	0
 11473  00363A  2209               	addwfc	(??___xxtofl+1)^0,f,c
 11474  00363C  220A               	addwfc	(??___xxtofl+2)^0,f,c
 11475  00363E  220B               	addwfc	(??___xxtofl+3)^0,f,c
 11476  003640  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 11477  003644  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 11478  003648  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 11479  00364C  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 11480  003650  EF32  F01B         	goto	l6915
 11481  003654                     l1142:
 11482  003654  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 11483  003658  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11484  00365C  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11485  003660  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11486  003664                     l6915:
 11487  003664  5004               	movf	___xxtofl@val^0,w,c
 11488  003666  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 11489  003668  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 11490  00366A  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 11491  00366C  A4D8               	btfss	status,2,c
 11492  00366E  EF3B  F01B         	goto	u9461
 11493  003672  EF3D  F01B         	goto	u9460
 11494  003676                     u9461:
 11495  003676  EF47  F01B         	goto	l6921
 11496  00367A                     u9460:
 11497  00367A  0E00               	movlw	0
 11498  00367C  6E04               	movwf	?___xxtofl^0,c
 11499  00367E  0E00               	movlw	0
 11500  003680  6E05               	movwf	(?___xxtofl+1)^0,c
 11501  003682  0E00               	movlw	0
 11502  003684  6E06               	movwf	(?___xxtofl+2)^0,c
 11503  003686  0E00               	movlw	0
 11504  003688  6E07               	movwf	(?___xxtofl+3)^0,c
 11505  00368A  EFD8  F01B         	goto	l1145
 11506  00368E                     l6921:
 11507  00368E  0E96               	movlw	150
 11508  003690  6E0D               	movwf	___xxtofl@exp^0,c
 11509  003692  EF51  F01B         	goto	l6925
 11510  003696                     l6923:
 11511  003696  2A0D               	incf	___xxtofl@exp^0,f,c
 11512  003698  90D8               	bcf	status,0,c
 11513  00369A  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 11514  00369C  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 11515  00369E  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11516  0036A0  320E               	rrcf	___xxtofl@arg^0,f,c
 11517  0036A2                     l6925:
 11518  0036A2  0E00               	movlw	0
 11519  0036A4  140E               	andwf	___xxtofl@arg^0,w,c
 11520  0036A6  6E08               	movwf	??___xxtofl^0,c
 11521  0036A8  0E00               	movlw	0
 11522  0036AA  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 11523  0036AC  6E09               	movwf	(??___xxtofl+1)^0,c
 11524  0036AE  0E00               	movlw	0
 11525  0036B0  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 11526  0036B2  6E0A               	movwf	(??___xxtofl+2)^0,c
 11527  0036B4  0EFE               	movlw	254
 11528  0036B6  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 11529  0036B8  6E0B               	movwf	(??___xxtofl+3)^0,c
 11530  0036BA  5008               	movf	??___xxtofl^0,w,c
 11531  0036BC  1009               	iorwf	(??___xxtofl+1)^0,w,c
 11532  0036BE  100A               	iorwf	(??___xxtofl+2)^0,w,c
 11533  0036C0  100B               	iorwf	(??___xxtofl+3)^0,w,c
 11534  0036C2  A4D8               	btfss	status,2,c
 11535  0036C4  EF66  F01B         	goto	u9471
 11536  0036C8  EF68  F01B         	goto	u9470
 11537  0036CC                     u9471:
 11538  0036CC  EF4B  F01B         	goto	l6923
 11539  0036D0                     u9470:
 11540  0036D0  EF76  F01B         	goto	l1149
 11541  0036D4                     l6927:
 11542  0036D4  2A0D               	incf	___xxtofl@exp^0,f,c
 11543  0036D6  0E01               	movlw	1
 11544  0036D8  260E               	addwf	___xxtofl@arg^0,f,c
 11545  0036DA  0E00               	movlw	0
 11546  0036DC  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 11547  0036DE  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 11548  0036E0  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 11549  0036E2  90D8               	bcf	status,0,c
 11550  0036E4  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 11551  0036E6  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 11552  0036E8  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11553  0036EA  320E               	rrcf	___xxtofl@arg^0,f,c
 11554  0036EC                     l1149:
 11555  0036EC  0E00               	movlw	0
 11556  0036EE  140E               	andwf	___xxtofl@arg^0,w,c
 11557  0036F0  6E08               	movwf	??___xxtofl^0,c
 11558  0036F2  0E00               	movlw	0
 11559  0036F4  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 11560  0036F6  6E09               	movwf	(??___xxtofl+1)^0,c
 11561  0036F8  0E00               	movlw	0
 11562  0036FA  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 11563  0036FC  6E0A               	movwf	(??___xxtofl+2)^0,c
 11564  0036FE  0EFF               	movlw	255
 11565  003700  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 11566  003702  6E0B               	movwf	(??___xxtofl+3)^0,c
 11567  003704  5008               	movf	??___xxtofl^0,w,c
 11568  003706  1009               	iorwf	(??___xxtofl+1)^0,w,c
 11569  003708  100A               	iorwf	(??___xxtofl+2)^0,w,c
 11570  00370A  100B               	iorwf	(??___xxtofl+3)^0,w,c
 11571  00370C  A4D8               	btfss	status,2,c
 11572  00370E  EF8B  F01B         	goto	u9481
 11573  003712  EF8D  F01B         	goto	u9480
 11574  003716                     u9481:
 11575  003716  EF6A  F01B         	goto	l6927
 11576  00371A                     u9480:
 11577  00371A  EF95  F01B         	goto	l6935
 11578  00371E                     l6933:
 11579  00371E  060D               	decf	___xxtofl@exp^0,f,c
 11580  003720  90D8               	bcf	status,0,c
 11581  003722  360E               	rlcf	___xxtofl@arg^0,f,c
 11582  003724  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 11583  003726  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 11584  003728  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 11585  00372A                     l6935:
 11586  00372A  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 11587  00372C  EF9A  F01B         	goto	u9491
 11588  003730  EF9C  F01B         	goto	u9490
 11589  003734                     u9491:
 11590  003734  EFA4  F01B         	goto	l1156
 11591  003738                     u9490:
 11592  003738  0E02               	movlw	2
 11593  00373A  600D               	cpfslt	___xxtofl@exp^0,c
 11594  00373C  EFA2  F01B         	goto	u9501
 11595  003740  EFA4  F01B         	goto	u9500
 11596  003744                     u9501:
 11597  003744  EF8F  F01B         	goto	l6933
 11598  003748                     u9500:
 11599  003748                     l1156:
 11600  003748  B00D               	btfsc	___xxtofl@exp^0,0,c
 11601  00374A  EFA9  F01B         	goto	u9511
 11602  00374E  EFAB  F01B         	goto	u9510
 11603  003752                     u9511:
 11604  003752  EFAC  F01B         	goto	l6941
 11605  003756                     u9510:
 11606  003756  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 11607  003758                     l6941:
 11608  003758  90D8               	bcf	status,0,c
 11609  00375A  320D               	rrcf	___xxtofl@exp^0,f,c
 11610  00375C  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 11611  003760  6A09               	clrf	(??___xxtofl+1)^0,c
 11612  003762  6A0A               	clrf	(??___xxtofl+2)^0,c
 11613  003764  6A0B               	clrf	(??___xxtofl+3)^0,c
 11614  003766  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 11615  00376A  6A0A               	clrf	(??___xxtofl+2)^0,c
 11616  00376C  6A09               	clrf	(??___xxtofl+1)^0,c
 11617  00376E  6A08               	clrf	??___xxtofl^0,c
 11618  003770  5008               	movf	??___xxtofl^0,w,c
 11619  003772  120E               	iorwf	___xxtofl@arg^0,f,c
 11620  003774  5009               	movf	(??___xxtofl+1)^0,w,c
 11621  003776  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 11622  003778  500A               	movf	(??___xxtofl+2)^0,w,c
 11623  00377A  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 11624  00377C  500B               	movf	(??___xxtofl+3)^0,w,c
 11625  00377E  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 11626  003780  500C               	movf	___xxtofl@sign^0,w,c
 11627  003782  B4D8               	btfsc	status,2,c
 11628  003784  EFC6  F01B         	goto	u9521
 11629  003788  EFC8  F01B         	goto	u9520
 11630  00378C                     u9521:
 11631  00378C  EFD0  F01B         	goto	l6951
 11632  003790                     u9520:
 11633  003790  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 11634  003792  EFCF  F01B         	goto	u9530
 11635  003796  EFCD  F01B         	goto	u9531
 11636  00379A                     u9531:
 11637  00379A  EFD0  F01B         	goto	l6951
 11638  00379E                     u9530:
 11639  00379E  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 11640  0037A0                     l6951:
 11641  0037A0  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 11642  0037A4  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 11643  0037A8  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 11644  0037AC  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 11645  0037B0                     l1145:
 11646  0037B0  0012               	return		;funcret
 11647  0037B2                     __end_of___xxtofl:
 11648                           	opt callstack 0
 11649                           
 11650 ;; *************** function _mpu_config *****************
 11651 ;; Defined at:
 11652 ;;		line 8 in file "mpu.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;		None
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;		None
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, status,2, cstack
 11661 ;; Tracked objects:
 11662 ;;		On entry : 0/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11666 ;;      Params:         0       0       0       0       0       0       0       0       0
 11667 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11668 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11669 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11670 ;;Total ram usage:        2 bytes
 11671 ;; Hardware stack levels used:    1
 11672 ;; Hardware stack levels required when called:    5
 11673 ;; This function calls:
 11674 ;;		_i2c_init_aguarda
 11675 ;;		_i2c_mestre_escreve
 11676 ;;		_i2c_mestre_para
 11677 ;; This function is called by:
 11678 ;;		_main
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text50
 11683  0046D0                     __ptext50:
 11684                           	opt callstack 0
 11685  0046D0                     _mpu_config:
 11686                           	opt callstack 25
 11687  0046D0                     
 11688                           ;mpu.c: 11:   _delay((unsigned long)((150)*(16000000/4000.0)));
 11689  0046D0  0E04               	movlw	4
 11690  0046D2  6E07               	movwf	(??_mpu_config+1)^0,c
 11691  0046D4  0E0C               	movlw	12
 11692  0046D6  6E06               	movwf	??_mpu_config^0,c
 11693  0046D8  0E34               	movlw	52
 11694  0046DA                     u9647:
 11695  0046DA  2EE8               	decfsz	wreg,f,c
 11696  0046DC  D7FE               	bra	u9647
 11697  0046DE  2E06               	decfsz	??_mpu_config^0,f,c
 11698  0046E0  D7FC               	bra	u9647
 11699  0046E2  2E07               	decfsz	(??_mpu_config+1)^0,f,c
 11700  0046E4  D7FA               	bra	u9647
 11701  0046E6                     
 11702                           ;mpu.c: 15:   i2c_init_aguarda(0xD0);
 11703  0046E6  0ED0               	movlw	208
 11704  0046E8  EC4F  F025         	call	_i2c_init_aguarda
 11705  0046EC                     
 11706                           ;mpu.c: 16:   i2c_mestre_escreve(0x19);
 11707  0046EC  0E19               	movlw	25
 11708  0046EE  EC92  F026         	call	_i2c_mestre_escreve
 11709  0046F2                     
 11710                           ;mpu.c: 17:   i2c_mestre_escreve(0x07);
 11711  0046F2  0E07               	movlw	7
 11712  0046F4  EC92  F026         	call	_i2c_mestre_escreve
 11713  0046F8                     
 11714                           ;mpu.c: 18:   i2c_mestre_para();
 11715  0046F8  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11716  0046FC                     
 11717                           ;mpu.c: 22:   i2c_init_aguarda(0xD0);
 11718  0046FC  0ED0               	movlw	208
 11719  0046FE  EC4F  F025         	call	_i2c_init_aguarda
 11720  004702                     
 11721                           ;mpu.c: 23:   i2c_mestre_escreve(0x6B);
 11722  004702  0E6B               	movlw	107
 11723  004704  EC92  F026         	call	_i2c_mestre_escreve
 11724  004708                     
 11725                           ;mpu.c: 24:   i2c_mestre_escreve(0x01);
 11726  004708  0E01               	movlw	1
 11727  00470A  EC92  F026         	call	_i2c_mestre_escreve
 11728  00470E                     
 11729                           ;mpu.c: 25:   i2c_mestre_para();
 11730  00470E  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11731  004712                     
 11732                           ;mpu.c: 28:  i2c_init_aguarda(0xD0);
 11733  004712  0ED0               	movlw	208
 11734  004714  EC4F  F025         	call	_i2c_init_aguarda
 11735  004718                     
 11736                           ;mpu.c: 29:   i2c_mestre_escreve(0x1A);
 11737  004718  0E1A               	movlw	26
 11738  00471A  EC92  F026         	call	_i2c_mestre_escreve
 11739  00471E                     
 11740                           ;mpu.c: 30:   i2c_mestre_escreve(0x00);
 11741  00471E  0E00               	movlw	0
 11742  004720  EC92  F026         	call	_i2c_mestre_escreve
 11743  004724                     
 11744                           ;mpu.c: 31:   i2c_mestre_para();
 11745  004724  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11746  004728                     
 11747                           ;mpu.c: 34:   i2c_init_aguarda(0xD0);
 11748  004728  0ED0               	movlw	208
 11749  00472A  EC4F  F025         	call	_i2c_init_aguarda
 11750  00472E                     
 11751                           ;mpu.c: 35:   i2c_mestre_escreve(0x1C);
 11752  00472E  0E1C               	movlw	28
 11753  004730  EC92  F026         	call	_i2c_mestre_escreve
 11754  004734                     
 11755                           ;mpu.c: 36:   i2c_mestre_escreve(0x00);
 11756  004734  0E00               	movlw	0
 11757  004736  EC92  F026         	call	_i2c_mestre_escreve
 11758  00473A                     
 11759                           ;mpu.c: 37:    i2c_mestre_para();
 11760  00473A  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11761  00473E                     
 11762                           ;mpu.c: 39:   i2c_init_aguarda(0xD0);
 11763  00473E  0ED0               	movlw	208
 11764  004740  EC4F  F025         	call	_i2c_init_aguarda
 11765  004744                     
 11766                           ;mpu.c: 40:   i2c_mestre_escreve(0x1B);
 11767  004744  0E1B               	movlw	27
 11768  004746  EC92  F026         	call	_i2c_mestre_escreve
 11769  00474A                     
 11770                           ;mpu.c: 41:   i2c_mestre_escreve(0x18);
 11771  00474A  0E18               	movlw	24
 11772  00474C  EC92  F026         	call	_i2c_mestre_escreve
 11773  004750                     
 11774                           ;mpu.c: 42:   i2c_mestre_para();
 11775  004750  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11776  004754                     
 11777                           ;mpu.c: 45:   i2c_init_aguarda(0xD0);
 11778  004754  0ED0               	movlw	208
 11779  004756  EC4F  F025         	call	_i2c_init_aguarda
 11780  00475A                     
 11781                           ;mpu.c: 46:   i2c_mestre_escreve(0x38);
 11782  00475A  0E38               	movlw	56
 11783  00475C  EC92  F026         	call	_i2c_mestre_escreve
 11784  004760                     
 11785                           ;mpu.c: 47:   i2c_mestre_escreve(0x01);
 11786  004760  0E01               	movlw	1
 11787  004762  EC92  F026         	call	_i2c_mestre_escreve
 11788  004766                     
 11789                           ;mpu.c: 48:   i2c_mestre_para();
 11790  004766  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11791  00476A  0012               	return		;funcret
 11792  00476C                     __end_of_mpu_config:
 11793                           	opt callstack 0
 11794                           
 11795 ;; *************** function _i2c_init_aguarda *****************
 11796 ;; Defined at:
 11797 ;;		line 56 in file "I2C.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  end             1    wreg     unsigned char 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  end             1    4[COMRAM] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, status,2, cstack
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11811 ;;      Params:         0       0       0       0       0       0       0       0       0
 11812 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11814 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11815 ;;Total ram usage:        1 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:    4
 11818 ;; This function calls:
 11819 ;;		_i2c_mestre_escreve
 11820 ;;		_i2c_mestre_para
 11821 ;; This function is called by:
 11822 ;;		_mpu_config
 11823 ;;		_mpu_ler
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text51
 11828  004A9E                     __ptext51:
 11829                           	opt callstack 0
 11830  004A9E                     _i2c_init_aguarda:
 11831                           	opt callstack 25
 11832                           
 11833                           ;incstack = 0
 11834                           ;i2c_init_aguarda@end stored from wreg
 11835  004A9E  6E05               	movwf	i2c_init_aguarda@end^0,c
 11836  004AA0                     l183:
 11837                           
 11838                           ;I2C.c: 59:   {;I2C.c: 60:     SEN = 1;
 11839  004AA0  80C5               	bsf	4037,0,c	;volatile
 11840  004AA2                     l184:
 11841  004AA2  B0C5               	btfsc	4037,0,c	;volatile
 11842  004AA4  EF56  F025         	goto	u9311
 11843  004AA8  EF58  F025         	goto	u9310
 11844  004AAC                     u9311:
 11845  004AAC  EF51  F025         	goto	l184
 11846  004AB0                     u9310:
 11847  004AB0                     
 11848                           ;I2C.c: 62:     SSPIF = 0;
 11849  004AB0  969E               	bcf	3998,3,c	;volatile
 11850                           
 11851                           ;I2C.c: 63:     if(!SSPSTATbits.S){
 11852  004AB2  B6C7               	btfsc	199,3,c	;volatile
 11853  004AB4  EF5E  F025         	goto	u9321
 11854  004AB8  EF60  F025         	goto	u9320
 11855  004ABC                     u9321:
 11856  004ABC  EF62  F025         	goto	l6851
 11857  004AC0                     u9320:
 11858  004AC0  EF50  F025         	goto	l183
 11859  004AC4                     l6851:
 11860                           
 11861                           ;I2C.c: 65:     i2c_mestre_escreve(end);
 11862  004AC4  5005               	movf	i2c_init_aguarda@end^0,w,c
 11863  004AC6  EC92  F026         	call	_i2c_mestre_escreve
 11864  004ACA                     
 11865                           ;I2C.c: 66:     if(ACKSTAT)
 11866  004ACA  ACC5               	btfss	4037,6,c	;volatile
 11867  004ACC  EF6A  F025         	goto	u9331
 11868  004AD0  EF6C  F025         	goto	u9330
 11869  004AD4                     u9331:
 11870  004AD4  EF70  F025         	goto	l191
 11871  004AD8                     u9330:
 11872  004AD8                     
 11873                           ;I2C.c: 67:     {;I2C.c: 68:         i2c_mestre_para();
 11874  004AD8  ECD3  F026         	call	_i2c_mestre_para	;wreg free
 11875                           
 11876                           ;I2C.c: 69:         continue;
 11877  004ADC  EF50  F025         	goto	l183
 11878  004AE0                     l191:
 11879  004AE0  0012               	return		;funcret
 11880  004AE2                     __end_of_i2c_init_aguarda:
 11881                           	opt callstack 0
 11882                           
 11883 ;; *************** function _i2c_mestre_para *****************
 11884 ;; Defined at:
 11885 ;;		line 75 in file "I2C.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;		None
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      unsigned char 
 11892 ;; Registers used:
 11893 ;;		wreg
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11903 ;;Total ram usage:        0 bytes
 11904 ;; Hardware stack levels used:    1
 11905 ;; Hardware stack levels required when called:    2
 11906 ;; This function calls:
 11907 ;;		Nothing
 11908 ;; This function is called by:
 11909 ;;		_i2c_init_aguarda
 11910 ;;		_mpu_config
 11911 ;;		_mpu_ler
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text52
 11916  004DA6                     __ptext52:
 11917                           	opt callstack 0
 11918  004DA6                     _i2c_mestre_para:
 11919                           	opt callstack 27
 11920  004DA6                     
 11921                           ;I2C.c: 77:     PEN = 1;
 11922  004DA6  84C5               	bsf	4037,2,c	;volatile
 11923  004DA8                     l194:
 11924  004DA8  B4C5               	btfsc	4037,2,c	;volatile
 11925  004DAA  EFD9  F026         	goto	u8931
 11926  004DAE  EFDB  F026         	goto	u8930
 11927  004DB2                     u8931:
 11928  004DB2  EFD4  F026         	goto	l194
 11929  004DB6                     u8930:
 11930  004DB6                     
 11931                           ;I2C.c: 79:     SSPIF = 0;
 11932  004DB6  969E               	bcf	3998,3,c	;volatile
 11933                           
 11934                           ;I2C.c: 80:     if(!SSPSTATbits.P){
 11935  004DB8  50C7               	movf	199,w,c	;volatile
 11936  004DBA  0012               	return		;funcret
 11937  004DBC                     __end_of_i2c_mestre_para:
 11938                           	opt callstack 0
 11939                           
 11940 ;; *************** function _i2c_mestre_escreve *****************
 11941 ;; Defined at:
 11942 ;;		line 46 in file "I2C.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  dado            1    wreg     unsigned char 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  dado            1    3[COMRAM] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      unsigned char 
 11949 ;; Registers used:
 11950 ;;		wreg, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0
 11957 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11959 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11960 ;;Total ram usage:        1 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    3
 11963 ;; This function calls:
 11964 ;;		_i2c_pronto
 11965 ;; This function is called by:
 11966 ;;		_i2c_init
 11967 ;;		_i2c_init_aguarda
 11968 ;;		_mpu_config
 11969 ;;		_mpu_ler
 11970 ;;		_i2c_mestre_repeteinit
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           	psect	text53
 11975  004D24                     __ptext53:
 11976                           	opt callstack 0
 11977  004D24                     _i2c_mestre_escreve:
 11978                           	opt callstack 26
 11979                           
 11980                           ;incstack = 0
 11981                           ;i2c_mestre_escreve@dado stored from wreg
 11982  004D24  6E04               	movwf	i2c_mestre_escreve@dado^0,c
 11983  004D26                     
 11984                           ;I2C.c: 48:  SSPBUF = dado;
 11985  004D26  C004  FFC9         	movff	i2c_mestre_escreve@dado,4041	;volatile
 11986  004D2A                     
 11987                           ;I2C.c: 49:  i2c_pronto();
 11988  004D2A  ECFB  F026         	call	_i2c_pronto	;wreg free
 11989  004D2E                     
 11990                           ;I2C.c: 50:  if (ACKSTAT){
 11991  004D2E  ACC5               	btfss	4037,6,c	;volatile
 11992  004D30  EF9C  F026         	goto	u8921
 11993  004D34  EF9E  F026         	goto	u8920
 11994  004D38                     u8921:
 11995  004D38  EFA1  F026         	goto	l6595
 11996  004D3C                     u8920:
 11997  004D3C                     
 11998                           ;I2C.c: 51:         return 1;}
 11999  004D3C  0E01               	movlw	1
 12000  004D3E  EFA2  F026         	goto	l179
 12001  004D42                     l6595:
 12002                           
 12003                           ;I2C.c: 53:         return 2;}
 12004  004D42  0E02               	movlw	2
 12005  004D44                     l179:
 12006  004D44  0012               	return		;funcret
 12007  004D46                     __end_of_i2c_mestre_escreve:
 12008                           	opt callstack 0
 12009                           
 12010 ;; *************** function _i2c_pronto *****************
 12011 ;; Defined at:
 12012 ;;		line 16 in file "I2C.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;		None
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;		None
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  1    wreg      void 
 12019 ;; Registers used:
 12020 ;;		None
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12026 ;;      Params:         0       0       0       0       0       0       0       0       0
 12027 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12028 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12029 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12030 ;;Total ram usage:        0 bytes
 12031 ;; Hardware stack levels used:    1
 12032 ;; Hardware stack levels required when called:    2
 12033 ;; This function calls:
 12034 ;;		Nothing
 12035 ;; This function is called by:
 12036 ;;		_i2c_mestre_escreve
 12037 ;;		_i2c_ler
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           	psect	text54
 12042  004DF6                     __ptext54:
 12043                           	opt callstack 0
 12044  004DF6                     _i2c_pronto:
 12045                           	opt callstack 26
 12046  004DF6                     l159:
 12047  004DF6  A69E               	btfss	3998,3,c	;volatile
 12048  004DF8  EF00  F027         	goto	u8191
 12049  004DFC  EF02  F027         	goto	u8190
 12050  004E00                     u8191:
 12051  004E00  EFFB  F026         	goto	l159
 12052  004E04                     u8190:
 12053  004E04                     
 12054                           ;I2C.c: 19:     SSPIF=0;
 12055  004E04  969E               	bcf	3998,3,c	;volatile
 12056  004E06  0012               	return		;funcret
 12057  004E08                     __end_of_i2c_pronto:
 12058                           	opt callstack 0
 12059                           
 12060 ;; *************** function _i2c_mestre_config *****************
 12061 ;; Defined at:
 12062 ;;		line 4 in file "I2C.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;		None
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      void 
 12069 ;; Registers used:
 12070 ;;		wreg, status,2
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12076 ;;      Params:         0       0       0       0       0       0       0       0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12080 ;;Total ram usage:        0 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    2
 12083 ;; This function calls:
 12084 ;;		Nothing
 12085 ;; This function is called by:
 12086 ;;		_main
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text55
 12091  004D78                     __ptext55:
 12092                           	opt callstack 0
 12093  004D78                     _i2c_mestre_config:
 12094                           	opt callstack 28
 12095  004D78                     
 12096                           ;I2C.c: 5:     SSPSTAT=0x80;
 12097  004D78  0E80               	movlw	128
 12098  004D7A  6EC7               	movwf	199,c	;volatile
 12099                           
 12100                           ;I2C.c: 6:     SSPCON1=0x28;
 12101  004D7C  0E28               	movlw	40
 12102  004D7E  6EC6               	movwf	198,c	;volatile
 12103                           
 12104                           ;I2C.c: 8:     SSPCON2=0x00;
 12105  004D80  0E00               	movlw	0
 12106  004D82  6EC5               	movwf	197,c	;volatile
 12107                           
 12108                           ;I2C.c: 9:     SSPADD=((8000000/4)/100000) - 1;;
 12109  004D84  0E13               	movlw	19
 12110  004D86  6EC8               	movwf	200,c	;volatile
 12111  004D88                     
 12112                           ;I2C.c: 11:     SSPIF=0;
 12113  004D88  969E               	bcf	3998,3,c	;volatile
 12114  004D8A                     
 12115                           ;I2C.c: 12:     TRISB1=1;
 12116  004D8A  8293               	bsf	3987,1,c	;volatile
 12117  004D8C                     
 12118                           ;I2C.c: 13:     TRISB0=1;
 12119  004D8C  8093               	bsf	3987,0,c	;volatile
 12120  004D8E  0012               	return		;funcret
 12121  004D90                     __end_of_i2c_mestre_config:
 12122                           	opt callstack 0
 12123                           
 12124 ;; *************** function _myHighIsr *****************
 12125 ;; Defined at:
 12126 ;;		line 22 in file "main.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;		None
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    1
 12147 ;; This function calls:
 12148 ;;		_pwm_dc
 12149 ;; This function is called by:
 12150 ;;		Interrupt level 2
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           	psect	intcode
 12155  000008                     __pintcode:
 12156                           	opt callstack 0
 12157  000008                     _myHighIsr:
 12158                           	opt callstack 21
 12159                           
 12160                           ;incstack = 0
 12161  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12162  00000A  EDA3  F026         	call	int_func,f	;refresh shadow registers
 12163                           
 12164                           	psect	intcode_body
 12165  004D46                     __pintcode_body:
 12166                           	opt callstack 21
 12167  004D46                     int_func:
 12168                           	opt callstack 21
 12169  004D46  0006               	pop		; remove dummy address from shadow register refresh
 12170  004D48                     
 12171                           ;main.c: 25: pwm_dc(dc);
 12172  004D48  C0F9  F001         	movff	_dc,pwm_dc@dc
 12173  004D4C  C0FA  F002         	movff	_dc+1,pwm_dc@dc+1
 12174  004D50  ECB6  F023         	call	_pwm_dc	;wreg free
 12175  004D54                     
 12176                           ;main.c: 28: TMR0L=0xFE;
 12177  004D54  0EFE               	movlw	254
 12178  004D56  6ED6               	movwf	214,c	;volatile
 12179  004D58                     
 12180                           ;main.c: 29: TMR0H=0xFF;
 12181  004D58  68D7               	setf	215,c	;volatile
 12182  004D5A                     
 12183                           ;main.c: 31: TMR0IF=0;
 12184  004D5A  94F2               	bcf	4082,2,c	;volatile
 12185  004D5C  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12186  004D5E  0011               	retfie		f
 12187  004D60                     __end_of_myHighIsr:
 12188                           	opt callstack 0
 12189                           
 12190 ;; *************** function _pwm_dc *****************
 12191 ;; Defined at:
 12192 ;;		line 16 in file "pwm_funct.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  dc              2    0[COMRAM] int 
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12206 ;;      Params:         2       0       0       0       0       0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12208 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12209 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12210 ;;Total ram usage:        3 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_myHighIsr
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text57
 12220  00476C                     __ptext57:
 12221                           	opt callstack 0
 12222  00476C                     _pwm_dc:
 12223                           	opt callstack 21
 12224  00476C                     
 12225                           ;pwm_funct.c: 18: static int t=0;;pwm_funct.c: 19:     ++t;
 12226  00476C  0100               	movlb	0	; () banked
 12227  00476E  4BF7               	infsnz	pwm_dc@t& (0+255),f,b
 12228  004770  2BF8               	incf	(pwm_dc@t+1)& (0+255),f,b
 12229  004772                     
 12230                           ; BSR set to: 0
 12231                           ;pwm_funct.c: 21: if((t>=0) && (t<=dc))
 12232  004772  BFF8               	btfsc	(pwm_dc@t+1)& (0+255),7,b
 12233  004774  EFBE  F023         	goto	i2u633_41
 12234  004778  EFC0  F023         	goto	i2u633_40
 12235  00477C                     i2u633_41:
 12236  00477C  EFD2  F023         	goto	i2l5021
 12237  004780                     i2u633_40:
 12238  004780                     
 12239                           ; BSR set to: 0
 12240  004780  51F7               	movf	pwm_dc@t& (0+255),w,b
 12241  004782  5C01               	subwf	pwm_dc@dc^0,w,c
 12242  004784  5002               	movf	(pwm_dc@dc+1)^0,w,c
 12243  004786  0A80               	xorlw	128
 12244  004788  6E03               	movwf	??_pwm_dc^0,c
 12245  00478A  51F8               	movf	(pwm_dc@t+1)& (0+255),w,b
 12246  00478C  0A80               	xorlw	128
 12247  00478E  5803               	subwfb	??_pwm_dc^0,w,c
 12248  004790  A0D8               	btfss	status,0,c
 12249  004792  EFCD  F023         	goto	i2u634_41
 12250  004796  EFCF  F023         	goto	i2u634_40
 12251  00479A                     i2u634_41:
 12252  00479A  EFD2  F023         	goto	i2l5021
 12253  00479E                     i2u634_40:
 12254  00479E                     
 12255                           ; BSR set to: 0
 12256                           ;pwm_funct.c: 22: {PORTB|=(1<<5);}
 12257  00479E  8A81               	bsf	129,5,c	;volatile
 12258  0047A0  EFF7  F023         	goto	i2l273
 12259  0047A4                     i2l5021:
 12260                           
 12261                           ; BSR set to: 0
 12262  0047A4  51F7               	movf	pwm_dc@t& (0+255),w,b
 12263  0047A6  5C01               	subwf	pwm_dc@dc^0,w,c
 12264  0047A8  5002               	movf	(pwm_dc@dc+1)^0,w,c
 12265  0047AA  0A80               	xorlw	128
 12266  0047AC  6E03               	movwf	??_pwm_dc^0,c
 12267  0047AE  51F8               	movf	(pwm_dc@t+1)& (0+255),w,b
 12268  0047B0  0A80               	xorlw	128
 12269  0047B2  5803               	subwfb	??_pwm_dc^0,w,c
 12270  0047B4  B0D8               	btfsc	status,0,c
 12271  0047B6  EFDF  F023         	goto	i2u635_41
 12272  0047BA  EFE1  F023         	goto	i2u635_40
 12273  0047BE                     i2u635_41:
 12274  0047BE  EFF3  F023         	goto	i2l5027
 12275  0047C2                     i2u635_40:
 12276  0047C2                     
 12277                           ; BSR set to: 0
 12278  0047C2  BFF8               	btfsc	(pwm_dc@t+1)& (0+255),7,b
 12279  0047C4  EFEF  F023         	goto	i2u636_40
 12280  0047C8  0ED0               	movlw	208
 12281  0047CA  5DF7               	subwf	pwm_dc@t& (0+255),w,b
 12282  0047CC  0E02               	movlw	2
 12283  0047CE  59F8               	subwfb	(pwm_dc@t+1)& (0+255),w,b
 12284  0047D0  B0D8               	btfsc	status,0,c
 12285  0047D2  EFED  F023         	goto	i2u636_41
 12286  0047D6  EFEF  F023         	goto	i2u636_40
 12287  0047DA                     i2u636_41:
 12288  0047DA  EFF3  F023         	goto	i2l5027
 12289  0047DE                     i2u636_40:
 12290  0047DE                     
 12291                           ; BSR set to: 0
 12292                           ;pwm_funct.c: 25: {PORTB&=(0<<5);}
 12293  0047DE  0E00               	movlw	0
 12294  0047E0  6E81               	movwf	129,c	;volatile
 12295  0047E2  EFF7  F023         	goto	i2l273
 12296  0047E6                     i2l5027:
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;pwm_funct.c: 28: t=0;
 12300  0047E6  0E00               	movlw	0
 12301  0047E8  6FF8               	movwf	(pwm_dc@t+1)& (0+255),b
 12302  0047EA  0E00               	movlw	0
 12303  0047EC  6FF7               	movwf	pwm_dc@t& (0+255),b
 12304  0047EE                     i2l273:
 12305                           
 12306                           ; BSR set to: 0
 12307  0047EE  0012               	return		;funcret
 12308  0047F0                     __end_of_pwm_dc:
 12309                           	opt callstack 0
 12310                           
 12311                           	psect	rparam
 12312  0000                     
 12313                           	psect	temp
 12314  00005C                     btemp:
 12315                           	opt callstack 0
 12316  00005C                     	ds	1
 12317  0000                     int$flags	set	btemp
 12318  0000                     wtemp8	set	btemp+1
 12319  0000                     ttemp5	set	btemp+1
 12320  0000                     ttemp6	set	btemp+4
 12321  0000                     ttemp7	set	btemp+8
 12322                           tosu	equ	0xFFF
 12323                           tosh	equ	0xFFE
 12324                           tosl	equ	0xFFD
 12325                           stkptr	equ	0xFFC
 12326                           pclatu	equ	0xFFB
 12327                           pclath	equ	0xFFA
 12328                           pcl	equ	0xFF9
 12329                           tblptru	equ	0xFF8
 12330                           tblptrh	equ	0xFF7
 12331                           tblptrl	equ	0xFF6
 12332                           tablat	equ	0xFF5
 12333                           prodh	equ	0xFF4
 12334                           prodl	equ	0xFF3
 12335                           indf0	equ	0xFEF
 12336                           postinc0	equ	0xFEE
 12337                           postdec0	equ	0xFED
 12338                           preinc0	equ	0xFEC
 12339                           plusw0	equ	0xFEB
 12340                           fsr0h	equ	0xFEA
 12341                           fsr0l	equ	0xFE9
 12342                           wreg	equ	0xFE8
 12343                           indf1	equ	0xFE7
 12344                           postinc1	equ	0xFE6
 12345                           postdec1	equ	0xFE5
 12346                           preinc1	equ	0xFE4
 12347                           plusw1	equ	0xFE3
 12348                           fsr1h	equ	0xFE2
 12349                           fsr1l	equ	0xFE1
 12350                           bsr	equ	0xFE0
 12351                           indf2	equ	0xFDF
 12352                           postinc2	equ	0xFDE
 12353                           postdec2	equ	0xFDD
 12354                           preinc2	equ	0xFDC
 12355                           plusw2	equ	0xFDB
 12356                           fsr2h	equ	0xFDA
 12357                           fsr2l	equ	0xFD9
 12358                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    24
    Data        6
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    145     155
    BANK1           256      6     133
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_15(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> buf(BANK1[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> buf(BANK1[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1079_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> buf(BANK1[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> buf(BANK1[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> uart_ler_string@dado(BANK1[6]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    uart_escreve_string@mens	PTR unsigned char  size(2) Largest target is 15
		 -> buf(BANK1[15]), 


Critical Paths under _main in COMRAM

    _uart_ler_string->_atoi
    _uart_escreve_string->_uart_escreve_byte
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _i2c_init->_i2c_mestre_escreve
    _asinf->_R
    _sqrtf->___fladd
    ___flge->___flmul
    ___flsub->___fladd
    ___flsub->___fladd
    _R->___fldiv
    ___flmul->_fabsf
    ___fldiv->___flsub
    ___fladd->___flmul
    _mpu_config->_i2c_init_aguarda
    _i2c_init_aguarda->_i2c_mestre_escreve

Critical Paths under _myHighIsr in COMRAM

    _myHighIsr->_pwm_dc

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _mpu_ler->_asinf
    _asinf->_sqrtf

Critical Paths under _myHighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myHighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myHighIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myHighIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myHighIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myHighIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myHighIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myHighIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  124464
                                            144 BANK0      1     1      0
                                              0 BANK1      6     6      0
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                  _i2c_mestre_config
                         _mpu_config
                            _mpu_ler
                         _pwm_config
                            _sprintf
                  _uart_escreve_byte
                _uart_escreve_string
                          _uart_init
                    _uart_ler_string
 ---------------------------------------------------------------------------------
 (1) _uart_ler_string                                      7     5      2    1841
                                             25 COMRAM     7     5      2
                               _atoi
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_escreve_string                                  4     2      2     251
                                              4 COMRAM     4     2      2
                  _uart_escreve_byte
 ---------------------------------------------------------------------------------
 (2) _uart_escreve_byte                                    1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   51039
                                            124 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   50529
                                            116 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   49957
                                             84 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   36053
                                             16 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             85 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6493
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1705
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     512
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mpu_ler                                             18    14      4   58250
                                             84 BANK0     18    14      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _asinf
                           _i2c_init
                   _i2c_init_aguarda
                            _i2c_ler
                 _i2c_mestre_escreve
                    _i2c_mestre_para
 ---------------------------------------------------------------------------------
 (2) _i2c_ler                                              2     2      0      65
                                              3 COMRAM     2     2      0
                            _i2c_ack
                           _i2c_nack
                         _i2c_pronto
 ---------------------------------------------------------------------------------
 (3) _i2c_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             1     1      0      62
                                              4 COMRAM     1     1      0
                 _i2c_mestre_escreve
 ---------------------------------------------------------------------------------
 (2) _asinf                                               44    40      4   48256
                                             40 BANK0     44    40      4
                                  _R
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                              _fabsf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               49    45      4   12923
                                             52 COMRAM     9     5      4
                                              0 BANK0     40    40      0
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4     124
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1166
                                             36 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     161
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5987
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     321
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _R                                                   20    16      4   14158
                                             85 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5573
                                             11 COMRAM    25    17      8
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3443
                                             60 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4702
                                             36 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _mpu_config                                           2     2      0      93
                                              5 COMRAM     2     2      0
                   _i2c_init_aguarda
                 _i2c_mestre_escreve
                    _i2c_mestre_para
 ---------------------------------------------------------------------------------
 (2) _i2c_init_aguarda                                     1     1      0      62
                                              4 COMRAM     1     1      0
                 _i2c_mestre_escreve
                    _i2c_mestre_para
 ---------------------------------------------------------------------------------
 (2) _i2c_mestre_para                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_mestre_escreve                                   1     1      0      31
                                              3 COMRAM     1     1      0
                         _i2c_pronto
 ---------------------------------------------------------------------------------
 (3) _i2c_pronto                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_mestre_config                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myHighIsr                                            0     0      0     120
                             _pwm_dc
 ---------------------------------------------------------------------------------
 (10) _pwm_dc                                              3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     _fabsf (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         _fabsf (ARG)
     ___fladd (ARG)
       ___flmul (ARG)
         _fabsf (ARG)
     ___flmul (ARG)
       _fabsf (ARG)
     ___xxtofl (ARG)
     _fabsf (ARG)
   ___fltol
   ___xxtofl
   _i2c_mestre_config
   _mpu_config
     _i2c_init_aguarda
       _i2c_mestre_escreve
         _i2c_pronto
       _i2c_mestre_para
     _i2c_mestre_escreve
       _i2c_pronto
     _i2c_mestre_para
   _mpu_ler
     ___fldiv
       ___flmul (ARG)
         _fabsf (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             _fabsf (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             _fabsf (ARG)
         ___flmul (ARG)
           _fabsf (ARG)
         ___xxtofl (ARG)
         _fabsf (ARG)
       ___xxtofl (ARG)
     ___flmul
       _fabsf (ARG)
     ___xxtofl
     _asinf
       _R
         ___fladd
           ___flmul (ARG)
             _fabsf (ARG)
         ___fldiv
           ___flmul (ARG)
             _fabsf (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 _fabsf (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 _fabsf (ARG)
             ___flmul (ARG)
               _fabsf (ARG)
             ___xxtofl (ARG)
             _fabsf (ARG)
           ___xxtofl (ARG)
         ___flmul
           _fabsf (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               _fabsf (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               _fabsf (ARG)
           ___flmul (ARG)
             _fabsf (ARG)
           ___xxtofl (ARG)
           _fabsf (ARG)
       ___fladd
         ___flmul (ARG)
           _fabsf (ARG)
       ___fldiv
         ___flmul (ARG)
           _fabsf (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               _fabsf (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               _fabsf (ARG)
           ___flmul (ARG)
             _fabsf (ARG)
           ___xxtofl (ARG)
           _fabsf (ARG)
         ___xxtofl (ARG)
       ___flmul
         _fabsf (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             _fabsf (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             _fabsf (ARG)
         ___flmul (ARG)
           _fabsf (ARG)
         ___xxtofl (ARG)
         _fabsf (ARG)
       _fabsf
       _sqrtf
         ___fladd
           ___flmul (ARG)
             _fabsf (ARG)
         ___flge
           ___flmul (ARG)
             _fabsf (ARG)
         ___flmul
           _fabsf (ARG)
         _nanf
     _i2c_init
       _i2c_mestre_escreve
         _i2c_pronto
     _i2c_init_aguarda
       _i2c_mestre_escreve
         _i2c_pronto
       _i2c_mestre_para
     _i2c_ler
       _i2c_ack
       _i2c_nack
       _i2c_pronto
     _i2c_mestre_escreve
       _i2c_pronto
     _i2c_mestre_para
   _pwm_config
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
               _fabsf (ARG)
           ___fldiv
             ___flmul (ARG)
               _fabsf (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   _fabsf (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   _fabsf (ARG)
               ___flmul (ARG)
                 _fabsf (ARG)
               ___xxtofl (ARG)
               _fabsf (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               _fabsf (ARG)
           ___flmul
             _fabsf (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 _fabsf (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 _fabsf (ARG)
             ___flmul (ARG)
               _fabsf (ARG)
             ___xxtofl (ARG)
             _fabsf (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 _fabsf (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     _fabsf (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     _fabsf (ARG)
                 ___flmul (ARG)
                   _fabsf (ARG)
                 ___xxtofl (ARG)
                 _fabsf (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _uart_escreve_byte
   _uart_escreve_string
     _uart_escreve_byte
   _uart_init
   _uart_ler_string
     _atoi
       ___wmul
       _isdigit
       _isspace

 _myHighIsr (ROOT)
   _pwm_dc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      85       7       52.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     91      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      20        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 27 17:37:01 2020

           ??_i2c_mestre_para 0004                             _R 3AC6                  ___fldiv@aexp 0055  
                ___fldiv@bexp 0054                             _k 0181                             _u 010C  
                ___fldiv@sign 004D                            ?_R 0056                   _SSPSTATbits 000FC7  
                          R@p 0060                            R@q 0064                            R@z 0056  
                          _BF 007E38                            l56 37CA                            l91 4DA4  
                          l85 4DF4                            l88 4D92                            l97 4B20  
                ___awdiv@sign 0009                            _dc 00F9           ??_i2c_mestre_config 0004  
         ___wmul@multiplicand 0006                   __CFG_BORV$0 000000                           ??_R 005A  
                         l201 4DD4                           l113 46CE                           l210 4DCE  
                         l107 4640                           l204 4DE2                           l222 4B66  
                         l207 4DC0                           l224 4B74                           l161 4E04  
                         l321 44D0                           l162 4E06                           l226 4B94  
                         l171 4CB2                           l227 4B9A                           l156 4D8E  
                         l244 476A                           l316 4454                           l173 4CC0  
                         l159 4DF6                           l191 4AE0                           l183 4AA0  
                         l175 4CDA                           l247 3EA2                           l319 4496  
                         l327 2FB0                           l184 4AA2                           l264 4D76  
                         l601 3AC4                           l329 2FB8                           l409 0FBA  
                         l194 4DA8                           l186 4AB0                           l179 4D44  
                         l347 31EE                           l196 4DB6                           l452 14DA  
                         l365 13E6                           l198 4DBA                           l614 3D9A  
                         l383 0C22                           l731 4580                           l483 48AA  
                         l484 48B2                           l477 191C                           l469 19D6  
                         l718 440E                           l487 4D00                           l752 4066  
                         l761 4C42                           l746 462A                           l757 40AC  
                         l784 3FA8                           _GIE 007F97                           _PEN 007E2A  
                         _SEN 007E28                           _pS0 0811                           _pS1 080D  
                         _pS2 0809                  __CFG_BOR$OFF 000000                           _qS1 0805  
                         _abs 4B22                           _buf 0166                           _pad 4410  
                ___awmod@sign 0009                           wreg 000FE8          ??_i2c_mestre_escreve 0004  
                __CFG_FOSC$HS 000000                  ___flmul@aexp 0019                  ___flmul@bexp 001E  
                ___flmul@sign 0018                  ___flmul@temp 0023                  ___flmul@prod 001F  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 000D                  __CFG_WDT$OFF 000000  
                        l1101 241E                          l1110 268C                          l1015 2088  
                        l1111 267A                          l1032 21A2                          l1024 2358  
                        l1016 2076                          l1200 2B74                          l1041 2272  
                        l1017 203C                          l1105 2782                          l1042 2260  
                        ?_abs 0016                          l1108 2614                          l1142 3654  
                        l1118 2744                          l1302 4E0E                          l1071 2D6E  
                        l1231 35F4                          l1080 2DB4                          l1145 37B0  
                        l1057 4A58                          l1082 2E2C                          l1074 2D32  
                        l1322 1C36                          l1314 1E98                          l1234 35FC  
                        l1083 2E1A                          l1156 3748                          l1149 36EC  
                        l1069 2F0E                          l1325 1CFA                          l1173 4B58  
                        l1245 3404                          l1318 1BD8                          l1239 4CAC  
                        l1327 1E02                          l1255 4C0A                          l1263 4A12  
                        l1176 4B60                          l1344 4C78                          l1168 41AA  
                        l1248 3348                          l1193 3C36                          l1338 496E  
                        l1371 4D22                          l1363 4912                          l1196 2784  
                        l1284 434A                          l1292 4A9C                          l1348 4280  
                        l1269 4BD2                          l1358 490A                          l1299 49C0  
                        l6001 43E0                          l6011 4406                          l6003 43E2  
                        l5301 4C44                          l6005 43E8                          l6021 44EC  
                        l5303 4C50                          l6007 43EE                          l6031 4520  
                        l6023 44F0                          l6015 44D2                          l6111 3F0E  
                        l6103 3ECE                          l5311 4B9C                          l7001 4724  
                        l5401 2034                          l5321 1EB6                          l5305 4C54  
                        l6201 2F58                          l6009 43FE                          l6041 455A  
                        l6033 4528                          l6025 44FE                          l6017 44D6  
                        l6121 3F3E                          l6113 3F1C                          l6105 3EF8  
                        l7011 473E                          l7003 4728                          l5411 206A  
                        l5403 204A                          l5323 1EC6                          l5331 1EF0  
                        l5315 1E9A                          l5307 4C6C                          l6211 2FC0  
                        l6203 2F78                          l6035 4536                          l6043 4560  
                        l6027 4506                          l6019 44E4                          l6051 4582  
                        l6131 3F68                          l6123 3F48                          l6107 3EFA  
                        l7021 475A                          l7013 4744                          l7005 472E  
                        l5501 231C                          l5421 20BA                          l5413 2074  
                        l5405 2056                          l5341 1F20                          l5333 1F00  
                        l5325 1ED6                          l5317 1EA6                          l6141 49C2  
                        l6221 2FF8                          l6213 2FD2                          l6205 2F88  
                        l6045 4570                          l6037 454C                          l6029 4518  
                        l6061 4622                          l6053 45B0                          l6133 3F78  
                        l6109 3F0A                          l6301 0992                          l7101 37E4  
                        ?_pad 0014                          l7023 4760                          l7015 474A  
                        l7007 4734                          l5511 2346                          l5503 232A  
                        l5431 20F6                          l5423 20CA                          l5415 2096  
                        l5407 205A                          l5351 1F60                          l5343 1F2E  
                        l5335 1F06                          l5327 1EE6                          l5319 1EB4  
                        l6071 3FE8                          l6143 49C6                          l6223 2FFE  
                        l6231 30F0                          l6215 2FE0                          l6207 2F8A  
                        l6047 4578                          l6039 4554                          l6063 4628  
                        l6055 45C0                          l6135 3F88                          l6119 3F34  
                        l6303 099C                          l7031 465E                          l7111 38B6  
                        l7103 37F8                          l7025 4766                          l7017 4750  
                        l7009 473A                          l5513 2348                          l5505 2330  
                        l5441 213C                          l5433 2104                          l5425 20D8  
                        l5417 20A6                          l5409 2068                          l5361 1F9A  
                        l5353 1F62                          l5345 1F30                          l5337 1F18  
                        l5329 1EE8                          l6081 4054                          l6073 4016  
                        l6145 49DA                          l6161 3452                          l6153 3406  
                        l5281 4294                          l5521 4432                          l6233 310A  
                        l6241 316A                          l6225 3080                          l6217 2FE6  
                        l6209 2FA4                          l6057 45EE                          l6137 3F98  
                        l6129 3F5C                          l5601 33E4                          l6401 0DD0  
                        l6313 0A20                          l7033 4662                          l7121 391E  
                        l7113 38C2                          l7105 3844                          l7019 4754  
                        l5507 2332                          l5451 21B8                          l5443 2170  
                        l5435 2106                          l5427 20E6                          l5371 1FAE  
                        l5363 1F9E                          l5347 1F40                          l5355 1F6A  
                        l5339 1F1A                          l6091 4C22                          l6083 40A4  
                        l6075 4026                          l6067 3FAA                          l7051 3DD6  
                        l7043 3D9C                          l5611 4CDC                          l6147 4A08  
                        l6171 34BC                          l6163 349C                          l6155 341A  
                        l5283 42A6                          l5531 4478                          l5523 4440  
                        l6251 31AE                          l6243 317C                          l6235 3128  
                        l6227 3086                          l6219 2FEE                          l6059 45FE  
                        l5603 33F4                          l6411 0EB4                          l6403 0E28  
                        l6331 0ABA                          l6315 0A32                          l6307 09C4  
                        l7035 4686                          l7027 462C                          l7123 3924  
                        l7115 38DE                          l7107 3878                          l5509 2338  
                        l5461 21F4                          l5453 21C8                          l5445 2172  
                        l5437 2110                          l5429 20F2                          l5381 1FC2  
                        l5373 1FB2                          l5365 1FA2                          l5357 1F7A  
                        l5349 1F50                          l5701 2B90                          l6093 4C32  
                        l6085 40AA                          l6077 4034                          l6069 3FD8  
                        l7053 3DDA                          l7045 3DA2                          l5613 4CF8  
                        l6149 4A0C                          l6181 3562                          l6173 34C4  
                        l6165 34A0                          l6157 341E                          l5621 3950  
                        l5541 4B3C                          l5285 42B0                          l5293 4A5A  
                        l5533 44A4                          l5525 444C                          l5517 4410  
                        l6253 31B6                          l6245 318A                          l6237 3142  
                        l6229 308C                          l6501 1262                          l6421 0F4E  
                        l6413 0EE6                          l6405 0E5C                          l6341 0B8A  
                        l6333 0AEE                          l6317 0A4E                          l6309 09EA  
                        l6325 0A6A                          l6261 0840                          l7061 4970  
                        l7029 464E                          l7037 46A8                          l7117 38E6  
                        l7109 389A                          l5471 2220                          l5463 21F6  
                        l5447 2182                          l5439 2116                          l5391 1FD6  
                        l5383 1FC6                          l5375 1FB6                          l5367 1FA6  
                        l5359 1F8C                          l5711 2BC4                          l5703 2B92  
                        l6079 4046                          l7055 3E26                          l7047 3DA8  
                        l5607 4BD4                          l6175 34CC                          l6159 3422  
                        l5631 39A6                          l5623 3970                          l5287 42CE  
                        l5279 4282                          l5295 4A66                          l5535 44B8  
                        l5527 4460                          l5519 441E                          l6247 3190  
                        l6255 31C6                          l6239 315C                          l5551 4140  
                        l5543 40AE                          l6511 1292                          l6503 1270  
                        l6431 0FD6                          l6423 0F82                          l6415 0EFC  
                        l6407 0E62                          l6351 0BF4                          l6335 0AF4  
                        l6343 0BBC                          l6327 0A84                          l6271 0894  
                        l6263 0850                          l7063 4982                          l7039 46BA  
                        l7119 3912                          l5481 2258                          l5465 2204  
                        l5457 21DC                          l5473 2222                          l5449 2192  
                        l5385 1FCA                          l5377 1FBA                          l5369 1FAA  
                        l5393 1FDA                          l5721 2BF6                          l5705 2BA2  
                        l5713 2BCC                          l6089 4C0C                          l7057 3E4A  
                        l7049 3DB2                          l6185 35B4                          l6177 3514  
                        l6169 34A6                          l5641 39FA                          l5633 39B2  
                        l5625 3974                          l5617 393E                          l5289 4304  
                        l5297 4A78                          l5529 4474                          l6249 31A2  
                        l6097 3EA4                          l5561 41A2                          l5545 40CE  
                        l6521 12F4                          l6513 12B8                          l6505 1278  
                        l6441 107C                          l6433 103A                          l6425 0F92  
                        l6417 0F2E                          l6409 0E80                          l6353 0BFC  
                        l6345 0BCC                          l6337 0B4E                          l6281 08DA  
                        l6273 089C                          l6265 085E                          l7065 498A  
                        l7073 4AE2                          l7081 37B2                          l6195 4DF6  
                        l5491 22D6                          l5467 220C                          l5459 21E6  
                        l5475 2230                          l5395 1FDE                          l5387 1FCE  
                        l5379 1FBE                          l5803 2E3C                          l5811 2E84  
                        l5731 2C2A                          l5723 2BF8                          l5715 2BDC  
                        l5707 2BB2                          l6603 4DD0                          l6187 35C6  
                        l5651 3A6E                          l5643 3A0C                          l5635 39D0  
                        l5627 3982                          l5619 3942                          l5539 4B22  
                        l5299 4A7C                          l6099 3EBA                          l5547 410C  
                        l5555 414C                          l6531 133A                          l6523 130E  
                        l6515 12D4                          l6507 1280                          l6451 10BA  
                        l6435 1048                          l6443 1084                          l6427 0FA6  
                        l6419 0F3E                          l6371 0CAC                          l6363 0C40  
                        l6355 0C16                          l6347 0BD0                          l6339 0B82  
                        l6291 0916                          l6283 08E2                          l6275 08AE  
                        l6267 0866                          l6259 0836                          l6611 141A  
                        l7067 4992                          l7075 4AEE                          l7091 37C6  
                        l7083 37B6                          l5485 2282                          l5493 22D8  
                        l5477 2234                          l5469 2210                          l5397 2008  
                        l5389 1FD2                          l5821 2EEE                          l5813 2E9E  
                        l5805 2E48                          l5741 2C70                          l5725 2C08  
                        l5733 2C32                          l5717 2BE2                          l5709 2BC2  
                        l5901 251A                          l6605 4DBC                          l6189 35D8  
                        l5645 3A3A                          l5637 39D8                          l5653 3A74  
                        l5629 39A2                          l5661 3C38                          l6197 2F10  
                        l5557 415E                          l5549 4134                          l5581 3210  
                        l5565 4914                          l5573 48EA                          l6541 138A  
                        l6533 134A                          l6525 1314                          l6517 12DC  
                        l6509 128C                          l6461 10E6                          l6453 10C0  
                        l6445 1098                          l6437 105C                          l6429 0FB2  
                        l6381 0CEA                          l6365 0C52                          l6373 0CB0  
                        l6349 0BE2                          l6357 0C2E                          l6285 08E6  
                        l6277 08BC                          l6269 088A                          l6701 1838  
                        l6621 1450                          l6613 142C                          l7069 49AE  
                        l7077 4B00                          l7093 37C8                          l7085 37BA  
                        l5495 22E8                          l5487 228E                          l5479 2242  
                        l5399 2024                          l5823 2EFC                          l5815 2EB4  
                        l5807 2E56                          l5751 2C98                          l5743 2C74  
                        l5735 2C42                          l5727 2C18                          l5719 2BE8  
                        l5911 2598                          l5903 252A                          l5655 3A84  
                        l5647 3A5A                          l5639 39EC                          l5671 3C7C  
                        l5663 3C3C                          l6199 2F30                          l5591 32FC  
                        l5583 3268                          l5567 4924                          l5575 48FC  
                        l6551 13C6                          l6543 139C                          l6535 1350  
                        l6527 1326                          l6519 12E2                          l6455 10CC  
                        l6447 10A6                          l6463 10EC                          l6471 111A  
                        l6439 106E                          l6391 0D38                          l6383 0CEE  
                        l6375 0CB8                          l6367 0C6E                          l6295 094C  
                        l6287 08EA                          l6279 08CE                          l6615 1430  
                        l6607 13E8                          l7079 4B04                          l7095 37D4  
                        l7087 37BE                          l5497 22F8                          l5489 229C  
                        l5825 2F02                          l5817 2ECE                          l5809 2E80  
                        l5761 2CE6                          l5737 2C58                          l5729 2C28  
                        l5921 2612                          l5913 25CE                          l5905 2546  
                        l5841 2376                          l6801 1C26                          l5657 3AA4  
                        l5649 3A5C                          l5681 3CE4                          l5673 3C9C  
                        l5665 3C4A                          l5593 3338                          l5585 327C  
                        l5569 48B4                          l6545 13A8                          l6537 1356  
                        l6529 1332                          l6481 11D0                          l6473 1172  
                        l6465 10FE                          l6457 10DC                          l6449 10B6  
                        l6385 0D00                          l6393 0D40                          l6377 0CCA  
                        l6369 0CA4                          l6297 095E                          l6289 08F0  
                        l6721 1976                          l6705 18A6                          l6641 1474  
                        l6633 1462                          l6625 1456                          l6617 143C  
                        l6609 140C                          l7097 37D6                          l7089 37C2  
                        l5499 2318                          l5827 2F04                          l5819 2EEA  
                        l5771 2D30                          l5763 2CF6                          l5755 2CAC  
                        l5739 2C68                          l5747 2C88                          l5931 2672  
                        l5923 2624                          l5915 25DC                          l5907 2552  
                        l5851 23BC                          l5843 2386                          l5835 235A  
                        l6811 1D0A                          l6803 1C50                          l5691 3D5A  
                        l5683 3D12                          l5675 3CBA                          l5667 3C6A  
                        l5587 328A                          l5595 336C                          l5579 31F0  
                        l6547 13B0                          l6491 1220                          l6483 11EC  
                        l6475 11A6                          l6467 1110                          l6459 10E0  
                        l6395 0D48                          l6387 0D0E                          l6379 0CDC  
                        l6299 097A                          l6571 4236                          l6563 41E2  
                        l6707 18B8                          l6715 1930                          l6651 1516  
                        l6619 143E                          l6643 14C8                          l6731 19A0  
                        l7099 37E2                          l5781 2D7E                          l5773 2D3C  
                        l5765 2CFE                          l5757 2CC6                          l5749 2C98  
                        l5941 26E0                          l5925 2632                          l5917 25FA  
                        l5909 256E                          l5861 23E8                          l5853 23C2  
                        l5845 2396                          l5837 2366                          l6821 1D82  
                        l6813 1D14                          l6805 1C70                          l5693 3D7A  
                        l5685 3D32                          l5677 3CC2                          l5669 3C6E  
                        l5597 33A8                          l6549 13C0                          l6493 1230  
                        l6485 11FE                          l6477 11AE                          l6469 1114  
                        l6397 0D58                          l6389 0D26                          l6573 425E  
                        l6565 41F0                          l6557 41AC                          l6733 19C4  
                        l6717 1954                          l6725 1984                          l6709 18EC  
                        l6661 15B0                          l6653 1524                          l6645 14E8  
                        l7197 149A                          l6637 1468                          l6629 145C  
                        l6901 4852                          l6583 4D26                          l6911 3610  
                        l5783 2D94                          l5791 2DC4                          l5775 2D5A  
                        l5767 2D0E                          l5759 2CD6                          l5951 2748  
                        l5935 269C                          l5943 26E4                          l5927 2636  
                        l5919 2604                          l5871 243E                          l5863 23F8  
                        l5855 23C8                          l5847 23A6                          l5839 2374  
                        l6831 1E78                          l6823 1D94                          l6815 1D2A  
                        l6807 1C84                          l7199 34FE                          l5687 3D44  
                        l5679 3CD6                          l5599 33BC                          l6495 1242  
                        l6487 120C                          l6479 11B2                          l6399 0D6C  
                        l6567 4208                          l6559 41D6                          l6727 1992  
                        l6719 1962                          l6671 163C                          l6655 1548  
                        l6647 14EA                          l6903 485A                          l6585 4D2A  
                        l6921 368E                          l6913 361E                          l5793 2DD2  
                        l5785 2D9A                          l5777 2D5C                          l5769 2D22  
                        l5697 2B76                          l5961 2772                          l5953 2758  
                        l5945 26FE                          l5937 26A8                          l5929 2644  
                        l5881 247E                          l5865 2408                          l5857 23D6  
                        l5849 23AC                          l6753 4C7A                          l6577 4D02  
                        l6833 1E88                          l6825 1DC6                          l6817 1D40  
                        l6809 1CC2                          l6761 19D8                          l6841 4CB0  
                        l5689 3D4A                          l6497 124A                          l6489 121C  
                        l6569 4224                          l6681 16F8                          l6673 166E  
                        l6665 15F8                          l6657 1582                          l6649 150E  
                        l6905 4868                          l6595 4D42                          l6587 4D2E  
                        l6851 4AC4                          l6931 36E2                          l6923 3696  
                        l6915 3664                          l5795 2DD6                          l5787 2DA4  
                        l5779 2D6C                          l5699 2B82                          l5955 2766  
                        l5947 2712                          l5939 26B6                          l5891 24C8  
                        l5883 248A                          l5875 2452                          l5867 240E  
                        l5859 23D8                          l6747 3AC6                          l6755 4C9A  
                        l6579 4D12                          l6827 1DD8                          l6819 1D50  
                        l6763 19D8                          l5971 434C                          l6499 125A  
                        l6691 17A0                          l6683 1740                          l6675 167E  
                        l6659 15A2                          l6667 160A                          l6907 488E  
                        l6589 4D3C                          l6853 4ACA                          l6941 3758  
                        l6933 371E                          l6925 36A2                          l6917 367A  
                        l6909 3600                          l5797 2DE4                          l5789 2DB2  
                        l5957 2768                          l5949 272C                          l5893 24D4  
                        l5885 24A2                          l5877 245E                          l5869 242E  
                        l6749 3C02                          l5965 4A14                          l6757 4C9C  
                        l6829 1E68                          l6781 1AF8                          l6773 1A8A  
                        l6765 19E8                          l6845 4CD4                          l6861 4B88  
                        l5981 4378                          l5973 4350                          l6693 17AE  
                        l6677 16B0                          l6669 162C                          l6837 4D92  
                        l6599 4DA6                          l6855 4AD8                          l6951 37A0  
                        l6943 375C                          l6935 372A                          l6927 36D4  
                        l5799 2E12                          l5959 276E                          l5895 24E4  
                        l5887 24AE                          l5879 2468                          l5967 4A24  
                        l6791 1B8C                          l6783 1B02                          l6775 1AA8  
                        l6767 19F8                          l6871 27D4                          l6863 4B90  
                        l5991 43A6                          l5983 4380                          l5975 435E  
                        l6695 17DE                          l6687 1778                          l6679 16D4  
                        l6839 4DA0                          l6945 3780                          l6937 3738  
                        l6929 36D6                          l5897 24F0                          l5889 24BA  
                        l6793 1B96                          l6777 1AD6                          l6769 1A2E  
                        l6873 27F0                          l6881 28A8                          l6865 4B98  
                        l6857 4B64                          l6961 4D74                          l5993 43AE  
                        l5985 4384                          l5977 4366                          l6689 178A  
                        l6971 4D88                          l6947 3790                          l6939 3756  
                        l5899 2500                          l6795 1BA2                          l6779 1AEA  
                        l6787 1B22                          l6883 28BA                          l6859 4B78  
                        l6955 4D60                          l5995 43BC                          l5987 438C  
                        l5979 436A                          l6699 180A                          l6963 4DE4  
                        l6973 4D8A                          l6981 46EC                          l6949 379E  
                        l6797 1BB0                          l6789 1B78                          l6885 28D0  
                        l6893 29AE                          l6877 284C                          l6869 27A4  
                        l6957 4D6C                          l5997 43C2                          l5989 439E  
                        l6965 4DF0                          l6975 4D8C                          l6991 4708  
                        l6983 46F2                          l6799 1C18                          l6895 2B12  
                        l6887 28E6                          l6959 4D72                          l5999 43D8  
                        l6967 4DF2                          l6969 4D78                          l6993 470E  
                        l6985 46F8                          l6977 46D0                          l6897 2B50  
                        l6889 28FA                          l6995 4712                          l6987 46FC  
                        l6979 46E6                          l6997 4718                          l6989 4702  
                        l6999 471E                          STR_1 0819                          STR_2 0822  
                        STR_3 082A                          STR_6 0826                          STR_7 082E  
                        _CREN 007D5C                          u7000 4134                          u7001 4130  
                        u7010 415E                          u7011 415A                          _PEIE 007F96  
                        u7100 323A                          u7030 4198                          u7110 3268  
                        u7031 4192                          u7111 3264                          u7200 4C04  
                        u8000 3F1C                          u7040 419A                          u7120 328A  
                        u7201 4BFE                          u8001 3F18                          u7025 4170  
                        u7121 3286                          u7105 3230                          u7210 4C06  
                        u8010 3F30                          u7050 495C                          u8011 3F2C  
                        u8100 349C                          u7220 3950                          u7300 3C7C  
                        u6500 4A9C                          u8020 3F58                          u7140 32F8  
                        u7060 496E                          _RCIF 007CF5                          _RCEN 007E2B  
                        u8101 3498                          u7221 394C                          u7301 3C78  
                        u6501 4A98                          u8021 3F54                          u7141 32F4  
                        u7061 496A                          u8110 34B8                          u7230 3982  
                        u7310 3CBA                          u6510 4C6C                          u8030 3F78  
                        u7150 331C                          u7070 48E4                          u8111 34B4  
                        u7231 397E                          u7311 3CB6                          u6511 4C68  
                        u8031 3F74                          u7135 329E                          u7071 48DE  
                        u6600 1F50                          u7400 2C18                          u8120 34EC  
                        u7320 3CE4                          u8200 2F40                          u8040 3F88  
                        u7160 3338                          u7136 32A8                          u6520 4BCC  
                        u7080 48E6                          u9000 1548                          u6601 1F4C  
                        u7401 2C14                          u7241 39AC                          u7321 3CE0  
                        u8201 2F3A                          u8041 3F84                          u7161 3334  
                        u7137 32B8                          u7057 4952                          u6521 4BC6  
                        u9001 1544                          u6610 1F8C                          u7410 2C58  
                        u8050 49DA                          u8130 3548                          u7250 39D0  
                        u7330 3D12                          u8210 2F42                          u7170 338C  
                        u6530 4BCE                          u7090 48FC                          u9010 15F2  
                        i2l51 4D5C                          u6611 1F88                          u7411 2C54  
                        u8051 49D6                          u7251 39CC                          u7331 3D0E  
                        u7155 3312                          u7091 48F8                          u9011 15EC  
                        u6700 20A6                          u6620 1F9A                          u6540 1EB4  
                        u7500 2DE4                          u7420 2C98                          u8060 4A08  
                        u8140 358A                          u7260 39FA                          u7340 3D5A  
                        u6460 4294                          u8300 315C                          u8220 2F58  
                        u7180 33A8                          u9100 18A0                          u9020 15F4  
                        u6701 20A2                          u6621 1F96                          u6541 1EB0  
                        u7501 2DE0                          u7421 2C94                          u8061 4A04  
                        u7261 39F6                          u7341 3D56                          u6461 4290  
                        u8301 3158                          u8221 2F54                          u7181 33A4  
                        u9101 189A                          u6710 20D8                          u6630 2008  
                        u6550 1EC6                          u7510 2E12                          u7430 2D0E  
                        u7350 2B90                          u8150 35AE                          u8070 3442  
                        u7270 3A3A                          u6470 42A6                          u8310 316A  
                        u8230 2F88                          u7190 33E4                          u9110 18A2  
                        u9030 160A                          u6711 20D4                          u6631 2004  
                        u6551 1EC2                          u7511 2E0E                          u7431 2D0A  
                        u7351 2B8C                          u8151 35A8                          u8127 34E2  
                        u7271 3A36                          u6471 42A2                          u8311 3166  
                        u8231 2F84                          u7191 33E0                          u7175 3382  
                        u9031 1606                          u6800 2220                          u6720 20E6  
                        u6640 2020                          u6560 1ED6                          u7520 2E28  
                        u7440 2D30                          u7360 2BA2                          u7600 2396  
                        u9200 1BB0                          u8160 35B0                          u8080 3452  
                        u7280 3A84                          u6480 42CE                          u8320 317C  
                        u8240 2FA4                          u8400 0946                          u9120 18B8  
                        u9040 163C                          u6801 221C                          u6721 20E2  
                        u6641 201A                          u6561 1ED2                          u7521 2E24  
                        u7441 2D2C                          u7361 2B9E                          u7601 2392  
                        u9201 1BAC                          u8137 353E                          u8081 344E  
                        u7281 3A80                          u6481 42CA                          u8321 3178  
                        u8241 2FA0                          u8401 0940                          u9121 18B4  
                        u9041 1638                          u6810 2230                          u6730 2104  
                        u6650 2022                          u6570 1F18                          u7530 2E3C  
                        u7450 2D5A                          u7370 2BB2                          u7610 23D6  
                        u9210 1C26                          u8170 35C6                          u8090 347A  
                        u7290 3C4A                          u6490 4304                          u8330 318A  
                        u8250 2FD2                          u8410 0948                          u9130 1954  
                        u9050 167E                          u6811 222C                          u6731 2100  
                        u6571 1F14                          u7531 2E38                          u7451 2D56  
                        u7371 2BAE                          u7611 23D2                          u9211 1C22  
                        u8171 35C2                          u8147 3580                          u7291 3C46  
                        u6491 4300                          u8331 3186                          u8251 2FCE  
                        u9131 1950                          u9051 167A                          u6900 2318  
                        u6820 2242                          u6740 213C                          u6660 204A  
                        u6580 1F2E                          u7540 2E56                          u7460 2D7E  
                        u7380 2BF6                          u7700 2672                          u7620 23E8  
                        u9220 1CC2                          u9140 1A2E                          u9300 4CD0  
                        u8180 35D8                          u8340 31A2                          u8260 2FE0  
                        u8500 0BE2                          u8420 095E                          u9060 16D4  
                        u6901 2314                          u6821 223E                          u6741 2138  
                        u6661 2046                          u6581 1F2A                          u7541 2E52  
                        u7461 2D7A                          u7381 2BF2                          u7701 266E  
                        u7621 23E4                          u9221 1CBE                          u9141 1A2A  
                        u9301 4CCC                          u8181 35D4                          u8077 3438  
                        u8341 319E                          u8261 2FDC                          u8501 0BDE  
                        u8421 095A                          u9061 16D0                          u8190 4E04  
                        u9310 4AB0                          u6910 232A                          u6830 2258  
                        u6750 2182                          u6670 2068                          u6590 1F40  
                        u7550 2E9E                          u7470 2D94                          u7390 2C08  
                        u7710 2688                          u7630 23F8                          u9230 1D2A  
                        u9150 1AA8                          u8270 310A                          u8510 0BF4  
                        u8430 09EA                          u8350 085E                          u9070 16F8  
                        u8191 4E00                          u9311 4AAC                          u6911 2326  
                        u6831 2254                          u6751 217E                          u6671 2064  
                        u6591 1F3C                          u7551 2E9A                          u7471 2D90  
                        u7391 2C04                          u7711 2684                          u7631 23F4  
                        u9231 1D26                          u9151 1AA4                          u8271 3106  
                        u8511 0BF0                          u8431 09E6                          u8351 085A  
                        u9071 16F4                          u9320 4AC0                          u6920 2346  
                        u6840 226E                          u6760 21B8                          u6680 2088  
                        u7560 2ECE                          u7480 2DB2                          u7720 269C  
                        u7640 242E                          u9240 1D40                          u9160 1AD6  
                        u9400 28E6                          u8280 3128                          u7800 43BC  
                        u8600 0D00                          u8520 0C16                          u8440 0A1A  
                        u8360 08AE                          u9080 178A                          u9321 4ABC  
                        u6921 2342                          u6841 226A                          u6761 21B4  
                        u6681 2084                          u7561 2ECA                          u7481 2DAE  
                        u7721 2698                          u7641 242A                          u9241 1D3C  
                        u9161 1AD2                          u9401 28E2                          u8097 3470  
                        u8281 3124                          u7801 43B8                          u8601 0CFC  
                        u8521 0C12                          u8441 0A14                          u8361 08AA  
                        u9081 1786                          u9330 4AD8                          u6850 2282  
                        u6770 21C8                          u6690 2096                          u7570 2EFC  
                        u7490 2DD2                          u7730 26B6                          u7650 243E  
                        u9250 1D82                          u9170 1AF8                          u9410 2B34  
                        u6930 441E                          u8290 3142                          u7810 43D8  
                        u8610 0D0E                          u8530 0C3C                          u8450 0A1C  
                        u8370 08BC                          u9090 1838                          u9331 4AD4  
                        u6851 227E                          u6771 21C4                          u6691 2092  
                        u7571 2EF8                          u7491 2DCE                          u7731 26B2  
                        u7651 243A                          u9251 1D7E                          u9171 1AF4  
                        u6931 441A                          u8291 313E                          u7811 43D4  
                        u8611 0D0A                          u8531 0C38                          u8371 08B8  
                        u9091 1834                          u9500 3748                          u6860 229C  
                        u6780 21F4                          u7740 26FE                          u7660 25B8  
                        u7580 2374                          u9260 1DC6                          u9420 2B50  
                        u9340 4B74                          u6940 4440                          u7820 43FE  
                        u7900 45EE                          u8700 106E                          u8620 0D38  
                        u8540 0C52                          u8460 0A32                          u8380 08CE  
                        u9501 3744                          u6861 2298                          u6781 21F0  
                        u7741 26FA                          u7581 2370                          u9261 1DC2  
                        u9421 2B4C                          u9341 4B70                          u6941 443C  
                        u7821 43FA                          u7901 45EA                          u8701 106A  
                        u8621 0D34                          u8541 0C4E                          u8461 0A2E  
                        u8381 08CA                          u9510 3756                          u6870 22D6  
                        u6790 2204                          u7750 272C                          u7670 2612  
                        u7590 2386                          u9190 1B78                          u9350 4B88  
                        u6950 4496                          u7830 44E4                          u7910 4622  
                        u8710 107C                          u8630 0E80                          u8550 0C6E  
                        u8470 0AB6                          u8390 0916                          u9430 48AA  
                        u9511 3752                          u6871 22D2                          u6791 2200  
                        u7751 2728                          u7671 260E                          u7591 2382  
                        u9191 1B74                          u9415 2B28                          u9351 4B84  
                        u6951 4492                          u7831 44E0                          u7911 461E  
                        u8711 1078                          u8631 0E7C                          u8551 0C6A  
                        u8471 0AB2                          u8391 0912                          u9431 48A6  
                        u9520 3790                          u9440 3610                          u6880 22E8  
                        u7760 2766                          u7680 2632                          u7920 3FD8  
                        u9360 27D4                          u6960 44A4                          u7840 44FE  
                        u8800 1270                          u8720 1098                          u8640 0EE6  
                        u8560 0CA4                          u8480 0B4A                          u9280 4DA0  
                        u9600 38DE                          u9521 378C                          u9441 360C  
                        u6881 22E4                          u7761 2762                          u7681 262E  
                        u7665 25AE                          u7921 3FD4                          u9185 1B36  
                        u9361 27D0                          u6961 44A0                          u7841 44FA  
                        u8801 126C                          u8721 1094                          u8641 0EE2  
                        u8561 0CA0                          u8481 0B46                          u9281 4D9C  
                        u9601 38DA                          u9530 379E                          u9450 361E  
                        u6890 22F8                          u7690 2644                          u7930 4016  
                        u9186 1B40                          u9370 27F0                          u9290 4CC0  
                        u6970 4B3C                          u7770 435E                          u7850 4518  
                        u8810 12F4                          u8730 10A6                          u8650 0F2E  
                        u8570 0CCA                          u8490 0BBC                          u9531 379A  
                        u9451 361A                          u6891 22F4                          u7691 2640  
                        u7931 4012                          u9275 1E48                          u9187 1B50  
                        u9371 27EC                          u9291 4CBC                          u6971 4B38  
                        u7771 435A                          u7851 4514                          u8811 12F0  
                        u8731 10A2                          u8651 0F2A                          u8571 0CC6  
                        u8491 0BB8                          u9460 367A                          u7940 4034  
                        u9380 28BA                          u7780 4378                          u7860 4536  
                        u6980 40EE                          u8820 130E                          u8740 10FE  
                        u8660 0F3E                          u8580 0CDC                          u8900 4236  
                        u9540 464E                          u9461 3676                          u7941 4030  
                        u9381 28B6                          u7781 4374                          u7861 4532  
                        u8821 130A                          u8741 10FA                          u8661 0F3A  
                        u8581 0CD8                          u8901 4232                          u9541 464A  
                        u9470 36D0                          u7950 4054                          u9390 28D0  
                        u7790 439E                          u7870 454C                          u6990 410C  
                        u8830 1326                          u8750 11D0                          u8670 0FA6  
                        u8590 0CEA                          u8910 425E                          u9550 4686  
                        u9471 36CC                          u7951 4050                          u9391 28CC  
                        u7791 439A                          u7871 4548                          u6991 4108  
                        u8831 1322                          u8751 11CC                          u8671 0FA2  
                        u8591 0CE6                          u8911 425A                          u9551 4682  
                        u8920 4D3C                          u9480 371A                          u7960 40A4  
                        u7880 4570                          u8840 1384                          u8760 11EC  
                        u8680 1048                          u9560 46A4                          u8921 4D38  
                        u9481 3716                          u7961 40A0                          u7881 456C  
                        u6985 40E4                          u8841 137E                          u8761 11E8  
                        u8681 1044                          u9561 46A0                          u8930 4DB6  
                        u9490 3738                          u7970 4C22                          u7890 45B0  
                        u8850 1386                          u8770 11FE                          u8690 105C  
                        u9570 46BA                          u8931 4DB2                          u9491 3734  
                        u7971 4C1E                          u7891 45AC                          u8771 11FA  
                        u8691 1058                          u9571 46B6                          u8940 4DE2  
                        u7980 3EBA                          u8860 139C                          u8780 120C  
                        u9580 4B20                          u8941 4DDE                          u7981 3EB6  
                        u8861 1398                          u8781 1208                          u9581 4B1C  
                        u9637 392C                          u8950 4DCE                          u7990 3EEE  
                        u8790 1242                          u8870 41D6                          u9590 38B6  
                        u9647 46DA                          u8951 4DCA                          u8791 123E  
                        u8871 41D2                          u9591 38B2                          u8880 4208  
                        u8960 140C                          u8881 4204                          u8961 1408  
                        u8890 4224                          u8970 14DA                          u7995 3EE4  
                        u8891 4220                          u8971 14D6                          u8980 14E8  
                        u8981 14E4                          u8990 150E                          u8991 150A  
                        _RSEN 007E29                          _TRMT 007D61     __end_of_i2c_mestre_config 4D90  
                        abs@a 0016                          _dbuf 0116                          _atoi 3406  
                        _main 37B2                          _dtoa 2F10                          _pio2 0815  
                        _nanf 4D02                          _erro 0110                          _prec 00F5  
                        _nout 00F1                          pad@i 001B                          pad@p 0018  
                        _tiny 0801                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001D                          fsr2l 000FD9                          btemp 005C  
               ___fpclassifyf 40AE                          prodh 000FF4                          prodl 000FF3  
                        start 000E               ___fldiv@new_exp 004E                  _tolower$1176 0010  
                ___param_bank 000000               __end_of_i2c_ack 4DE4               __end_of_i2c_ler 4B9C  
                       ??_abs 0018                         ??_pad 001A                   i2c_ler@dado 0005  
               ___fltol@sign1 000C               __end_of___aodiv 3AC6                         ?_atoi 000B  
             __end_of___fladd 235A                         ?_main 0001                         ?_dtoa 001F  
                       ?_nanf 0004               __end_of___aomod 3D9C                         _ACKEN 007E2C  
                       _ACKDT 007E2D               __end_of___fldiv 2F10               __end_of___awdiv 4410  
             __end_of___flneg 4C44                         STR_10 0832                         STR_12 0832  
                       STR_15 0825               __end_of___awmod 4582               __end_of___flmul 2784  
             __end_of___flsub 4A5A               __end_of___fltol 3FAA                   i2c_init@end 0005  
                       _T0CON 000FD5               ___awdiv@divisor 0006                         i2l273 47EE  
             ___awdiv@counter 0008                         _RCREG 000FAE                         _RCSTA 000FAB  
                vfpfcnvrt@fmt 00B6                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TRISB 000F93  
                       _SSPIF 007CF3                         _TXREG 000FAD                         _TXSTA 000FAC  
               __CFG_PWRT$OFF 000000             ??_uart_ler_string 001C                         _fabsf 4C7A  
                       _flags 005A                         _asinf 2784                         _errno 0114  
                       _fputc 4282                         _fputs 4A5A               __end_of_isdigit 4C0C  
                       atoi@n 0018                         pad@fp 0014                         atoi@s 000B  
                       _width 00F3                         _putch 4E0E                         dtoa@d 0021  
                       dtoa@i 0041                         dtoa@n 0039                         dtoa@p 0033  
                       _sqrtf 19D8                         dtoa@s 0037                         dtoa@w 0035  
                       nanf@s 0004                         nanf@u 0008               __end_of_isspace 4A14  
             __end_of_isupper 4BD4               __end_of_mpu_ler 3EA4                         tablat 000FF5  
                       ttemp5 005D                         ttemp6 0060                         ttemp7 0064  
                       status 000FD8                         wtemp8 005D               __end_of_sprintf 49C2  
              ?___fpclassifyf 0004               __end_of_tolower 4914               __end_of_strncmp 4282  
              __CFG_MCLRE$OFF 000000               __initialization 47F0                    _i2c_pronto 4DF6  
                __end_of_atoi 35FE                  __end_of_main 393E                  __end_of_dtoa 31F0  
                __end_of_pio2 0819                  __end_of_nanf 4D24                  __end_of_tiny 0805  
            __end_of_i2c_nack 4DD0              __end_of_i2c_init 4CDC           _uart_escreve_string 4AE2  
             i2c_ler@ACK_NACK 0004                        ??_atoi 000D                        ??_main 00F0  
                      ??_dtoa 0029                        ??_nanf 0008                 __activetblptr 000002  
        uart_escreve_string@i 0007                        _R$1407 0068                        _R$1408 006C  
                      ?_fabsf 0004                        ?_asinf 0088                        _ADCON1 000FC1  
                      ?_fputc 0004                        ?_fputs 000D              ___awdiv@dividend 0004  
                      ?_putch 0001                        ?_sqrtf 0035          ?_uart_escreve_string 0005  
                      i2l5021 47A4                        i2l5013 476C                        i2l5023 47C2  
                      i2l5015 4772                        i2l5025 47DE                        i2l5017 4780  
                      i2l5027 47E6                        i2l5019 479E                        i2l5161 4D5A  
                      i2l5155 4D48                        i2l5157 4D54                        i2l5159 4D58  
  __size_of_i2c_mestre_config 0018                 vfpfcnvrt@done 00C6                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _SSPADD 000FC8                        _TRISB0 007C98  
                      _TRISB1 007C99                        _TRISC6 007C16                        _TRISC7 007CA7  
                      _SSPBUF 000FC9              __end_of___xxtofl 37B2                     ??_i2c_ack 0004  
   __size_of_i2c_init_aguarda 0044                     ??_i2c_ler 0004                  vfprintf@cfmt 00DA  
                      ___flge 3FAA                        ___fleq 4582                     ??___aodiv 0014  
                   ??___fladd 002D                     ??___aomod 0014                        ___wmul 4CDC  
                   ??___fldiv 0045                     ??___awdiv 0008                     ??___flneg 0008  
                   ??___awmod 0008                     ??___flmul 0014                     ??___flsub 003D  
                   ??___fltol 0008                        _efgtoa 0836                        _floorf 31F0  
                      fabsf@u 0008                        fabsf@x 0004                        clear_0 482E  
                      clear_1 483A              ___awdiv@quotient 000A               ___awmod@divisor 0006  
             ___awmod@counter 0008                        asinf@s 00A4                        asinf@x 0088  
                      asinf@z 00A8                        pad@buf 0016                        _pwm_dc 476C  
               main@set_point 017F                        dtoa@fp 001F                        _strcpy 4914  
                      _strlen 4C44           uart_ler_string@dado 0175                        fputc@c 0004  
                      fputs@c 0011                        fputs@i 0012                        fputs@s 000D  
                   ??_isdigit 0006               ___fpclassifyf@e 000C               ___fpclassifyf@u 000E  
             ___fpclassifyf@x 0004                  __mediumconst 0000                     ??_isspace 0006  
                      tblptrh 000FF7                     ??_isupper 0006                        tblptrl 000FF6  
                   ??_mpu_ler 00B8                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 48B4                        sqrtf@i 0068                        sqrtf@m 007C  
                      sqrtf@q 0070                        sqrtf@r 0080                        sqrtf@s 0064  
                      sqrtf@t 0074                        sqrtf@x 0035                        sqrtf@z 0078  
                   ??_sprintf 005A                     ??_tolower 000C                     ??_strncmp 000A  
       ??_uart_escreve_string 0007                    ___flge@ff1 0025                    ___flge@ff2 0029  
             ??___fpclassifyf 0008                  ___xxtofl@arg 000E               _i2c_mestre_para 4DA6  
                ___xxtofl@exp 000D                  ___xxtofl@val 0004                    ___fleq@ff1 0004  
                  ___fleq@ff2 0008                    __accesstop 0060       __end_of__initialization 4844  
                  ___flneg@f1 0004         uart_escreve_byte@dado 0004                 ___rparam_used 000001  
                  ___fltol@f1 0004                __pcstackCOMRAM 0001                   ?_i2c_pronto 0001  
                __pidataBANK0 4E0C                  __pidataBANK1 4E08                 __end_of_fabsf 4CAE  
               __end_of_asinf 2B76                 __end_of_fputc 434C                 __end_of_fputs 4A9E  
               __end_of_putch 4E10                 __end_of_sqrtf 1E9A             _uart_escreve_byte 4D90  
          ?_uart_escreve_byte 0001       uart_escreve_string@mens 0005                       ??_fabsf 0008  
                     ??_asinf 008C                       ??_fputc 0008                       ??_fputs 0011  
         ??_uart_escreve_byte 0004                       ??_putch 0004                       ??_sqrtf 0039  
                  __pbssBANK0 00F1                    __pbssBANK1 0100                     ?_i2c_nack 0001  
                   ?_i2c_init 0001            __size_of_myHighIsr 4D58                    _asinf$1410 0098  
                  _asinf$1411 009C                    _asinf$1412 00A0                    _asinf$1409 0094  
                  _efgtoa$500 008A                    _efgtoa$490 0082                    _efgtoa$494 0084  
                  _efgtoa$489 0080                    _efgtoa$498 0086                    _efgtoa$499 0088  
                     ?___flge 0025                       ?___fleq 0004                       ?___wmul 0004  
             _uart_ler_string 462C                       ?_efgtoa 0070     __end_of_uart_escreve_byte 4DA6  
                     ?_floorf 0056                       _ACKSTAT 007E2E                       ?_pwm_dc 0001  
                     ?_strcpy 0004                       ?_strlen 0004                    __size_of_R 0172  
          __size_of_uart_init 0012                     ?___xxtofl 0004       __end_of_i2c_mestre_para 4DBC  
 __size_of_i2c_mestre_escreve 0022            __size_of_vfpfcnvrt 05F0                       _SSPCON1 000FC6  
                     _SSPCON2 000FC5           __size_of_i2c_pronto 0012                       _SSPSTAT 000FC7  
                  ??_i2c_nack 0004                    ??_i2c_init 0005              _i2c_init_aguarda 4A9E  
                     _i2c_ack 4DD0                       _i2c_ler 4B62                       __Hparam 0000  
                     __Lparam 0000               __size_of___flge 0104               __size_of___fleq 00AA  
                     ___aodiv 393E                       ___fladd 1E9A                       ___aomod 3C38  
                     ___fldiv 2B76                       ___awdiv 434C                       ___flneg 4C0C  
                     ___awmod 44D2                       ___flmul 235A                       ___flsub 4A14  
                     ___fltol 3EA4               __size_of___wmul 0026                     ?_vfprintf 00D4  
                __psmallconst 0800               __size_of_efgtoa 0BB2               __size_of_floorf 0216  
                     __pcinit 47F0                       __ramtop 0800                       __ptext0 37B2  
                     __ptext1 462C                       __ptext2 4DE4                       __ptext3 4AE2  
                     __ptext4 4D90                       __ptext5 4970                       __ptext6 4852  
                     __ptext7 13E8                       __ptext8 41AC                       __ptext9 0836  
             __size_of_pwm_dc 0084               __size_of_strcpy 005C               __size_of_strlen 0036  
                __size_of_abs 0040                  __size_of_pad 00C2             __end_of_myHighIsr 4D60  
                     _isdigit 4BD4                    ??___xxtofl 0008              ___awmod@dividend 0004  
                     _isspace 49C2                       _isupper 4B9C                       _mpu_ler 3D9C  
                     efgtoa@c 0076                       efgtoa@d 0094                       efgtoa@e 00AC  
                     efgtoa@f 0072                       efgtoa@g 00A8                       efgtoa@h 009E  
                     efgtoa@i 00A6                       efgtoa@l 00A2                       efgtoa@m 0090  
                     efgtoa@n 00AE                       efgtoa@p 0098                       efgtoa@t 008C  
                     efgtoa@u 00B0                       efgtoa@w 009B                       asinf@hx 00AC  
                     asinf@ix 00B0                       atoi@neg 0011                       main@ang 017B  
                     _sprintf 4970                       _tolower 48B4                       _strncmp 41AC  
              __pintcode_body 4D46          end_of_initialization 4844                       floorf@e 006A  
                     floorf@m 0066                       floorf@u 006C                       floorf@x 0056  
                     fputc@fp 0006                 __Lmediumconst 0000                       int_func 4D46  
                     fputs@fp 000F       __end_of_uart_ler_string 46D0             __end_of_uart_init 4DF6  
                  _mpu_config 46D0             __end_of_vfpfcnvrt 19D8                    efgtoa@mode 009D  
                  efgtoa@sign 0096                       pwm_dc@t 00F7                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE    __size_of_uart_escreve_byte 0016                    ??_vfprintf 005A  
                     sqrtf@ix 0084                       strcpy@d 000C                       strlen@a 0006  
                     strcpy@s 000A                       strlen@s 0004                   ___fladd@grs 0034  
               ___xxtofl@sign 000C              ?_i2c_mestre_para 0001                    _pwm_config 4D60  
                 ___fldiv@grs 0050                   ___fldiv@rem 0049                   ___flmul@grs 001A  
         i2c_init_aguarda@end 0005              uart_ler_string@c 001D              uart_ler_string@i 001F  
                ??_i2c_pronto 0004                __end_of___flge 40AE                __end_of___fleq 462C  
                 vfpfcnvrt@ap 00B8                   vfpfcnvrt@ct 00D0                   vfpfcnvrt@fp 00B4  
                 vfpfcnvrt@ll 00BE                __end_of___wmul 4D02                __end_of_efgtoa 13E8  
              __end_of_floorf 3406                    floorf@F524 0100                __end_of_pwm_dc 47F0  
              __end_of_strcpy 4970                __end_of_strlen 4C7A   __end_of_uart_escreve_string 4B22  
         start_initialization 47F0                   __end_of_pS0 0815                   __end_of_pS1 0811  
                 __end_of_pS2 080D                   __end_of_qS1 0809                   __end_of_abs 4B62  
                 __end_of_pad 44D2            __end_of_i2c_pronto 4E08         __end_of___fpclassifyf 41AC  
           __size_of_i2c_nack 0014             __size_of_i2c_init 002E              ?_uart_ler_string 001A  
                 ?_mpu_config 0001                   vfprintf@fmt 00D6                      ??___flge 002D  
                    ??___fleq 000C                      ??___wmul 0008                      ??_efgtoa 0077  
                 __pdataBANK0 00F9                   __pdataBANK1 0181                      ??_floorf 0060  
                    ??_pwm_dc 0003                      ??_strcpy 0008                      ??_strlen 0006  
                   ___fladd@a 0029                     ___fladd@b 0025      __end_of_i2c_init_aguarda 4AE2  
                   ___fldiv@a 0041                     ___fldiv@b 003D         asinf@__xc8_float_word 0090  
                   ___flmul@a 0010                     ___flmul@b 000C                   __pbssCOMRAM 005A  
                   ___flsub@a 0039                     ___flsub@b 0035                 __pcstackBANK0 0060  
               __pcstackBANK1 017B              ___aodiv@dividend 0004                   ?_pwm_config 0001  
           __size_of___xxtofl 01B4                     __end_of_R 3C38                     _atoi$1024 0013  
                   _atoi$1025 0017                     _atoi$1026 0015                      ?_i2c_ack 0001  
                    ?_i2c_ler 0001                     __pintcode 0008                      ?___aodiv 0004  
                    ?___fladd 0025                      ?___aomod 0004                      ?___fldiv 003D  
                    ?___awdiv 0004              ___aodiv@quotient 0016                      ?___flneg 0004  
                    ?___awmod 0004                      ?___flmul 000C                      ?___flsub 0035  
                    ?___fltol 0004             __size_of_vfprintf 0062    __end_of_i2c_mestre_escreve 4D46  
                   fabsf@F463 0104                   __smallconst 0800                      ?_isdigit 0004  
                    ?_isspace 0004                      ?_isupper 0004                      ?_mpu_ler 00B4  
         __size_of_mpu_config 009C                __size_of_fabsf 0034                __size_of_asinf 03F2  
                   _myHighIsr 0008                      ?_sprintf 00DC                      ?_tolower 000A  
              __size_of_fputc 00CA                __size_of_fputs 0044                      ?_strncmp 0004  
              __size_of_putch 0002                __size_of_sqrtf 04C2                ___wmul@product 0008  
      i2c_mestre_escreve@dado 0004                      i2u633_40 4780                      i2u633_41 477C  
                    i2u634_40 479E                      i2u634_41 479A                      i2u635_40 47C2  
                    i2u635_41 47BE                      i2u636_40 47DE                      i2u636_41 47DA  
         __size_of_pwm_config 0018                     _uart_init 4DE4                     _vfpfcnvrt 13E8  
           ___wmul@multiplier 0004                  _isspace$1066 000A                    ?_myHighIsr 0001  
                  vfpfcnvrt@c 00D3                    vfpfcnvrt@f 00CC                     copy_data0 4804  
                    _i2c_nack 4DBC                      _i2c_init 4CAE              __size_of_i2c_ack 0014  
            __size_of_i2c_ler 003A                      __Hrparam 0000                    vfprintf@ap 00D8  
                    __Lrparam 0000                    vfprintf@fp 00D4                    ?_uart_init 0001  
            __size_of___aodiv 0188              __size_of___fladd 04C0              __size_of___aomod 0164  
            __size_of___fldiv 039A              __size_of___awdiv 00C4              __size_of___flneg 0038  
            __size_of___awmod 00B0              __size_of___flmul 042A              __size_of___flsub 0046  
            __size_of___fltol 0106                    ?_vfpfcnvrt 00B4               ___aodiv@divisor 000C  
             ___aodiv@counter 0014            ___fpclassifyf@F463 0108                    sprintf@fmt 00DE  
                    ___xxtofl 35FE                  _mpu_ler$1406 00C0              __size_of_isdigit 0038  
                    _dtoa$465 0031              __size_of_isspace 0052                      __ptext10 48B4  
                    __ptext11 4B9C                      __ptext20 4410                      __ptext12 4914  
                    __ptext21 4C44                      __ptext13 31F0                      __ptext30 4BD4  
                    __ptext22 4A5A                      __ptext14 40AE                      __ptext31 4CDC  
                    __ptext23 4282                      __ptext15 3EA4                      __ptext40 4D02  
                    __ptext32 4D60                      __ptext24 4E0E                      __ptext16 4582  
                    __ptext41 3FAA                      __ptext33 3D9C                      __ptext25 4B22  
                    __ptext17 44D2                      __ptext50 46D0                      __ptext42 4C7A  
                    __ptext34 4B62                      __ptext26 3C38                      __ptext18 434C  
                    __ptext51 4A9E                      __ptext43 4A14                      __ptext35 4DBC  
                    __ptext27 393E                      __ptext19 2F10                      __ptext52 4DA6  
                    __ptext44 4C0C                      __ptext36 4DD0                      __ptext28 3406  
                    __ptext53 4D24                      __ptext45 3AC6                      __ptext37 4CAE  
                    __ptext29 49C2                      __ptext54 4DF6                      __ptext46 235A  
                    __ptext38 2784                      __ptext55 4D78                      __ptext47 2B76  
                    __ptext39 19D8                      __ptext48 1E9A                      __ptext57 476C  
                    __ptext49 35FE              __size_of_isupper 0038              __size_of_mpu_ler 0108  
            __size_of_sprintf 0052              __size_of_tolower 0060                    strcpy@dest 0004  
            __size_of_strncmp 00D6                 __size_of_atoi 01F8      __size_of_i2c_mestre_para 0016  
               __size_of_main 018C                 __size_of_dtoa 02E0                     mpu_ler@Ay 00C4  
               __size_of_nanf 0022                     mpu_ler@ay 00BC                  ??_mpu_config 0006  
                    efgtoa@fp 0070                      efgtoa@ne 0092                      efgtoa@pp 008E  
                    efgtoa@ou 007C                      int$flags 005C                      _vfprintf 4852  
            ___aomod@dividend 0004             ?_i2c_init_aguarda 0001                  ??_pwm_config 0004  
          ??_i2c_init_aguarda 0005                      isdigit@c 0004            __end_of_mpu_config 476C  
                 ??_myHighIsr 0004                      intlevel2 0000                     sprintf@ap 00E8  
__size_of_uart_escreve_string 0040                      isspace@c 0004                     strcpy@src 0006  
                    isupper@c 0004                     strncmp@_l 0004                     strncmp@_r 0006  
                 efgtoa@nmode 009A                   ??_uart_init 0004                      pwm_dc@dc 0001  
          __end_of_pwm_config 4D78               ___aomod@divisor 000C                   ??_vfpfcnvrt 00BA  
               _vfpfcnvrt$514 00C8                 _vfpfcnvrt$519 00CA               ___aomod@counter 0014  
    __size_of_uart_ler_string 00A4                      sprintf@f 00EA                      tolower@c 000A  
                    sprintf@s 00DC        __size_of___fpclassifyf 00FE                      strncmp@l 000B  
                    strncmp@n 0008                      strncmp@r 000D                   _SSPCON2bits 000FC5  
               ___fladd@signs 0031                  ___aodiv@sign 0015         sqrtf@__xc8_float_word 006C  
          _i2c_mestre_escreve 4D24                  ___fladd@aexp 0032                  ___fladd@bexp 0033  
           _i2c_mestre_config 4D78                  ___aomod@sign 0015            ?_i2c_mestre_config 0001  
         ?_i2c_mestre_escreve 0001  
